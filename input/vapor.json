[{
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6273,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class Connection<\/Declaration>",
        "key.bodylength" : 801,
        "key.bodyoffset" : 1152,
        "key.doc.column" : 7,
        "key.doc.comment" : "A `Connection` represents a `Channel` in the context of the connection pool\n\nIn the `ConnectionPool`, each `Channel` belongs to a given `HTTP1ConnectionProvider`\nand has a certain \"lease state\" (see the `inUse` property).\nThe role of `Connection` is to model this by storing a `Channel` alongside its associated properties\nso that they can be passed around together and correct provider can be identified when connection is released.",
        "key.doc.declaration" : "class Connection",
        "key.doc.discussion" : [
          {
            "Para" : "In the `ConnectionPool`, each `Channel` belongs to a given `HTTP1ConnectionProvider` and has a certain “lease state” (see the `inUse` property). The role of `Connection` is to model this by storing a `Channel` alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"30\" column=\"7\"><Name>Connection<\/Name><USR>s:15AsyncHTTPClient10ConnectionC<\/USR><Declaration>class Connection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Connection<\/codeVoice> represents a <codeVoice>Channel<\/codeVoice> in the context of the connection pool<\/Para><\/Abstract><Discussion><Para>In the <codeVoice>ConnectionPool<\/codeVoice>, each <codeVoice>Channel<\/codeVoice> belongs to a given <codeVoice>HTTP1ConnectionProvider<\/codeVoice> and has a certain “lease state” (see the <codeVoice>inUse<\/codeVoice> property). The role of <codeVoice>Connection<\/codeVoice> is to model this by storing a <codeVoice>Channel<\/codeVoice> alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 30,
        "key.doc.name" : "Connection",
        "key.doc.type" : "Class",
        "key.doclength" : 457,
        "key.docoffset" : 677,
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Connection<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 820,
        "key.name" : "Connection",
        "key.namelength" : 10,
        "key.nameoffset" : 1140,
        "key.offset" : 1134,
        "key.parsed_declaration" : "class Connection",
        "key.parsed_scope.end" : 48,
        "key.parsed_scope.start" : 30,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let provider: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1489
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The provider this `Connection` belongs to.\n\nThis enables calling methods like `release()` directly on a `Connection` instead of\ncalling `provider.release(connection)`. This gives a more object oriented feel to the API\nand can avoid having to keep explicit references to the pool at call site.",
            "key.doc.declaration" : "private let provider: HTTP1ConnectionProvider",
            "key.doc.discussion" : [
              {
                "Para" : "This enables calling methods like `release()` directly on a `Connection` instead of calling `provider.release(connection)`. This gives a more object oriented feel to the API and can avoid having to keep explicit references to the pool at call site."
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"36\" column=\"17\"><Name>provider<\/Name><USR>s:15AsyncHTTPClient10ConnectionC8provider33_4B70A015CBD55B4FA34D04E53159F0C8LLAA05HTTP1C8ProviderCvp<\/USR><Declaration>private let provider: HTTP1ConnectionProvider<\/Declaration><CommentParts><Abstract><Para>The provider this <codeVoice>Connection<\/codeVoice> belongs to.<\/Para><\/Abstract><Discussion><Para>This enables calling methods like <codeVoice>release()<\/codeVoice> directly on a <codeVoice>Connection<\/codeVoice> instead of calling <codeVoice>provider.release(connection)<\/codeVoice>. This gives a more object oriented feel to the API and can avoid having to keep explicit references to the pool at call site.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 36,
            "key.doc.name" : "provider",
            "key.doc.type" : "Other",
            "key.doclength" : 328,
            "key.docoffset" : 1157,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>provider<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 37,
            "key.name" : "provider",
            "key.namelength" : 8,
            "key.nameoffset" : 1501,
            "key.offset" : 1497,
            "key.parsed_declaration" : "private let provider: HTTP1ConnectionProvider",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 36,
            "key.typename" : "HTTP1ConnectionProvider",
            "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderCD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC8provider33_4B70A015CBD55B4FA34D04E53159F0C8LLAA05HTTP1C8ProviderCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let channel: <Type usr=\"s:3NIO7ChannelP\">Channel<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The `Channel` of this `Connection`\n\n- Warning: Requests that lease connections from the `ConnectionPool` are responsible\nfor removing the specific handlers they added to the `Channel` pipeline before releasing it to the pool.",
            "key.doc.declaration" : "let channel: Channel",
            "key.doc.discussion" : [
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"42\" column=\"9\"><Name>channel<\/Name><USR>s:15AsyncHTTPClient10ConnectionC7channel3NIO7Channel_pvp<\/USR><Declaration>let channel: Channel<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>Channel<\/codeVoice> of this <codeVoice>Connection<\/codeVoice><\/Para><\/Abstract><Discussion><Warning><Para>Requests that lease connections from the <codeVoice>ConnectionPool<\/codeVoice> are responsible for removing the specific handlers they added to the <codeVoice>Channel<\/codeVoice> pipeline before releasing it to the pool.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 42,
            "key.doc.name" : "channel",
            "key.doc.type" : "Other",
            "key.doclength" : 253,
            "key.docoffset" : 1540,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>channel<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "channel",
            "key.namelength" : 7,
            "key.nameoffset" : 1801,
            "key.offset" : 1797,
            "key.parsed_declaration" : "let channel: Channel",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.typename" : "Channel",
            "key.typeusr" : "$s3NIO7Channel_pD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC7channel3NIO7Channel_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(channel: <Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>, provider: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>)<\/Declaration>",
            "key.bodylength" : 69,
            "key.bodyoffset" : 1882,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>channel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>provider<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 129,
            "key.name" : "init(channel:provider:)",
            "key.namelength" : 57,
            "key.nameoffset" : 1823,
            "key.offset" : 1823,
            "key.parsed_declaration" : "init(channel: Channel, provider: HTTP1ConnectionProvider)",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 44,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection.Type) -> (Channel, HTTP1ConnectionProvider) -> Connection",
            "key.typeusr" : "$s7channel8provider15AsyncHTTPClient10ConnectionC3NIO7Channel_p_AC05HTTP1E8ProviderCtcD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC7channel8providerAC3NIO7Channel_p_AA05HTTP1C8ProviderCtcfc"
          }
        ],
        "key.typename" : "Connection.Type",
        "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCmD",
        "key.usr" : "s:15AsyncHTTPClient10ConnectionC"
      },
      {
        "key.annotated_decl" : "<Declaration>class Connection<\/Declaration>",
        "key.bodylength" : 1009,
        "key.bodyoffset" : 1978,
        "key.doc.column" : 7,
        "key.doc.declaration" : "class Connection",
        "key.doc.discussion" : [
          {
            "Para" : "In the `ConnectionPool`, each `Channel` belongs to a given `HTTP1ConnectionProvider` and has a certain “lease state” (see the `inUse` property). The role of `Connection` is to model this by storing a `Channel` alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"30\" column=\"7\"><Name>Connection<\/Name><USR>s:15AsyncHTTPClient10ConnectionC<\/USR><Declaration>class Connection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Connection<\/codeVoice> represents a <codeVoice>Channel<\/codeVoice> in the context of the connection pool<\/Para><\/Abstract><Discussion><Para>In the <codeVoice>ConnectionPool<\/codeVoice>, each <codeVoice>Channel<\/codeVoice> belongs to a given <codeVoice>HTTP1ConnectionProvider<\/codeVoice> and has a certain “lease state” (see the <codeVoice>inUse<\/codeVoice> property). The role of <codeVoice>Connection<\/codeVoice> is to model this by storing a <codeVoice>Channel<\/codeVoice> alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 30,
        "key.doc.name" : "Connection",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Connection<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1032,
        "key.name" : "Connection",
        "key.namelength" : 10,
        "key.nameoffset" : 1966,
        "key.offset" : 1956,
        "key.parsed_declaration" : "extension Connection",
        "key.parsed_scope.end" : 75,
        "key.parsed_scope.start" : 50,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func release(closing: <Type usr=\"s:Sb\">Bool<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 138,
            "key.bodyoffset" : 2238,
            "key.doc.column" : 10,
            "key.doc.comment" : "Release this `Connection` to its associated `HTTP1ConnectionProvider`.\n\n- Warning: This only releases the connection and doesn't take care of cleaning handlers in the `Channel` pipeline.",
            "key.doc.declaration" : "func release(closing: Bool, logger: Logger)",
            "key.doc.discussion" : [
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"54\" column=\"10\"><Name>release(closing:logger:)<\/Name><USR>s:15AsyncHTTPClient10ConnectionC7release7closing6loggerySb_7Logging6LoggerVtF<\/USR><Declaration>func release(closing: Bool, logger: Logger)<\/Declaration><CommentParts><Abstract><Para>Release this <codeVoice>Connection<\/codeVoice> to its associated <codeVoice>HTTP1ConnectionProvider<\/codeVoice>.<\/Para><\/Abstract><Discussion><Warning><Para>This only releases the connection and doesn’t take care of cleaning handlers in the <codeVoice>Channel<\/codeVoice> pipeline.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 54,
            "key.doc.name" : "release(closing:logger:)",
            "key.doc.type" : "Function",
            "key.doclength" : 206,
            "key.docoffset" : 1983,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>release<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>closing<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 184,
            "key.name" : "release(closing:logger:)",
            "key.namelength" : 38,
            "key.nameoffset" : 2198,
            "key.offset" : 2193,
            "key.parsed_declaration" : "func release(closing: Bool, logger: Logger)",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 54,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection) -> (Bool, Logger) -> ()",
            "key.typeusr" : "$s7closing6loggerySb_7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC7release7closing6loggerySb_7Logging6LoggerVtF"
          },
          {
            "key.annotated_decl" : "<Declaration>func timeout(logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 120,
            "key.bodyoffset" : 2468,
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when channel exceeds idle time in pool.",
            "key.doc.declaration" : "func timeout(logger: Logger)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"60\" column=\"10\"><Name>timeout(logger:)<\/Name><USR>s:15AsyncHTTPClient10ConnectionC7timeout6loggery7Logging6LoggerV_tF<\/USR><Declaration>func timeout(logger: Logger)<\/Declaration><CommentParts><Abstract><Para>Called when channel exceeds idle time in pool.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 60,
            "key.doc.name" : "timeout(logger:)",
            "key.doc.type" : "Function",
            "key.doclength" : 51,
            "key.docoffset" : 2383,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>timeout<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 151,
            "key.name" : "timeout(logger:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2443,
            "key.offset" : 2438,
            "key.parsed_declaration" : "func timeout(logger: Logger)",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 60,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection) -> (Logger) -> ()",
            "key.typeusr" : "$s6loggery7Logging6LoggerV_tcD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC7timeout6loggery7Logging6LoggerV_tF"
          },
          {
            "key.annotated_decl" : "<Declaration>func remoteClosed(logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 125,
            "key.bodyoffset" : 2691,
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when channel goes inactive while in the pool.",
            "key.doc.declaration" : "func remoteClosed(logger: Logger)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"66\" column=\"10\"><Name>remoteClosed(logger:)<\/Name><USR>s:15AsyncHTTPClient10ConnectionC12remoteClosed6loggery7Logging6LoggerV_tF<\/USR><Declaration>func remoteClosed(logger: Logger)<\/Declaration><CommentParts><Abstract><Para>Called when channel goes inactive while in the pool.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 66,
            "key.doc.name" : "remoteClosed(logger:)",
            "key.doc.type" : "Function",
            "key.doclength" : 57,
            "key.docoffset" : 2595,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remoteClosed<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 161,
            "key.name" : "remoteClosed(logger:)",
            "key.namelength" : 28,
            "key.nameoffset" : 2661,
            "key.offset" : 2656,
            "key.parsed_declaration" : "func remoteClosed(logger: Logger)",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 66,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection) -> (Logger) -> ()",
            "key.typeusr" : "$s6loggery7Logging6LoggerV_tcD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC12remoteClosed6loggery7Logging6LoggerV_tF"
          },
          {
            "key.annotated_decl" : "<Declaration>func close() -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 41,
            "key.bodyoffset" : 2944,
            "key.doc.column" : 10,
            "key.doc.comment" : "Called from `HTTP1ConnectionProvider.close` when client is shutting down.",
            "key.doc.declaration" : "func close() -> EventLoopFuture<Void>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"72\" column=\"10\"><Name>close()<\/Name><USR>s:15AsyncHTTPClient10ConnectionC5close3NIO15EventLoopFutureCyytGyF<\/USR><Declaration>func close() -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called from <codeVoice>HTTP1ConnectionProvider.close<\/codeVoice> when client is shutting down.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 72,
            "key.doc.name" : "close()",
            "key.doc.type" : "Function",
            "key.doclength" : 78,
            "key.docoffset" : 2823,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>close<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 81,
            "key.name" : "close()",
            "key.namelength" : 7,
            "key.nameoffset" : 2910,
            "key.offset" : 2905,
            "key.parsed_declaration" : "func close() -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 72,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection) -> () -> EventLoopFuture<()>",
            "key.typeusr" : "$s3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC5close3NIO15EventLoopFutureCyytGyF"
          }
        ],
        "key.typename" : "Connection.Type",
        "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCmD",
        "key.usr" : "s:15AsyncHTTPClient10ConnectionC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>protocol PoolManageableConnection : AnyObject<\/Declaration>",
        "key.bodylength" : 122,
        "key.bodyoffset" : 3163,
        "key.doc.column" : 10,
        "key.doc.comment" : "Methods of Connection which are used in ConnectionsState extracted as protocol\nto facilitate test of ConnectionsState.",
        "key.doc.declaration" : "protocol PoolManageableConnection : AnyObject",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"79\" column=\"10\"><Name>PoolManageableConnection<\/Name><USR>s:15AsyncHTTPClient24PoolManageableConnectionP<\/USR><Declaration>protocol PoolManageableConnection : AnyObject<\/Declaration><CommentParts><Abstract><Para>Methods of Connection which are used in ConnectionsState extracted as protocol to facilitate test of ConnectionsState.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 79,
        "key.doc.name" : "PoolManageableConnection",
        "key.doc.type" : "Class",
        "key.doclength" : 127,
        "key.docoffset" : 2990,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 3152
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>PoolManageableConnection<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AnyObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 169,
        "key.name" : "PoolManageableConnection",
        "key.namelength" : 24,
        "key.nameoffset" : 3126,
        "key.offset" : 3117,
        "key.parsed_declaration" : "protocol PoolManageableConnection: AnyObject",
        "key.parsed_scope.end" : 83,
        "key.parsed_scope.start" : 79,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func cancel() -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>cancel<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 38,
            "key.name" : "cancel()",
            "key.namelength" : 8,
            "key.nameoffset" : 3173,
            "key.offset" : 3168,
            "key.parsed_declaration" : "func cancel() -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 80,
            "key.typename" : "<Self where Self : PoolManageableConnection> (Self) -> () -> EventLoopFuture<()>",
            "key.typeusr" : "$s3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:15AsyncHTTPClient24PoolManageableConnectionP6cancel3NIO15EventLoopFutureCyytGyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 3237,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "eventLoop",
            "key.namelength" : 9,
            "key.nameoffset" : 3215,
            "key.offset" : 3211,
            "key.parsed_declaration" : "var eventLoop: EventLoop",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 81,
            "key.typename" : "EventLoop",
            "key.typeusr" : "$s3NIO9EventLoop_pD",
            "key.usr" : "s:15AsyncHTTPClient24PoolManageableConnectionP9eventLoop3NIO05EventG0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var isActiveEstimation: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 3278,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isActiveEstimation<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 36,
            "key.name" : "isActiveEstimation",
            "key.namelength" : 18,
            "key.nameoffset" : 3252,
            "key.offset" : 3248,
            "key.parsed_declaration" : "var isActiveEstimation: Bool",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 82,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:15AsyncHTTPClient24PoolManageableConnectionP18isActiveEstimationSbvp"
          }
        ],
        "key.typename" : "PoolManageableConnection.Protocol",
        "key.typeusr" : "$s15AsyncHTTPClient24PoolManageableConnection_pmD",
        "key.usr" : "s:15AsyncHTTPClient24PoolManageableConnectionP"
      },
      {
        "key.annotated_decl" : "<Declaration>class Connection<\/Declaration>",
        "key.bodylength" : 370,
        "key.bodyoffset" : 3426,
        "key.doc.column" : 7,
        "key.doc.comment" : "Implementation of methods used by ConnectionsState and its tests to manage Connection",
        "key.doc.declaration" : "class Connection",
        "key.doc.discussion" : [
          {
            "Para" : "In the `ConnectionPool`, each `Channel` belongs to a given `HTTP1ConnectionProvider` and has a certain “lease state” (see the `inUse` property). The role of `Connection` is to model this by storing a `Channel` alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"30\" column=\"7\"><Name>Connection<\/Name><USR>s:15AsyncHTTPClient10ConnectionC<\/USR><Declaration>class Connection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Connection<\/codeVoice> represents a <codeVoice>Channel<\/codeVoice> in the context of the connection pool<\/Para><\/Abstract><Discussion><Para>In the <codeVoice>ConnectionPool<\/codeVoice>, each <codeVoice>Channel<\/codeVoice> belongs to a given <codeVoice>HTTP1ConnectionProvider<\/codeVoice> and has a certain “lease state” (see the <codeVoice>inUse<\/codeVoice> property). The role of <codeVoice>Connection<\/codeVoice> is to model this by storing a <codeVoice>Channel<\/codeVoice> alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 30,
        "key.doc.name" : "Connection",
        "key.doc.type" : "Class",
        "key.doclength" : 90,
        "key.docoffset" : 3288,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 24,
            "key.offset" : 3400
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Connection<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "PoolManageableConnection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 419,
        "key.name" : "Connection",
        "key.namelength" : 10,
        "key.nameoffset" : 3388,
        "key.offset" : 3378,
        "key.parsed_declaration" : "extension Connection: PoolManageableConnection",
        "key.parsed_scope.end" : 99,
        "key.parsed_scope.start" : 86,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var isActiveEstimation: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 42,
            "key.bodyoffset" : 3552,
            "key.doc.column" : 9,
            "key.doc.comment" : "Convenience property indicating whether the underlying `Channel` is active or not.",
            "key.doc.declaration" : "var isActiveEstimation: Bool { get }",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"88\" column=\"9\"><Name>isActiveEstimation<\/Name><USR>s:15AsyncHTTPClient10ConnectionC18isActiveEstimationSbvp<\/USR><Declaration>var isActiveEstimation: Bool { get }<\/Declaration><CommentParts><Abstract><Para>Convenience property indicating whether the underlying <codeVoice>Channel<\/codeVoice> is active or not.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 88,
            "key.doc.name" : "isActiveEstimation",
            "key.doc.type" : "Other",
            "key.doclength" : 87,
            "key.docoffset" : 3431,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isActiveEstimation<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 73,
            "key.name" : "isActiveEstimation",
            "key.namelength" : 18,
            "key.nameoffset" : 3526,
            "key.offset" : 3522,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient24PoolManageableConnectionP18isActiveEstimationSbvp"
              }
            ],
            "key.parsed_declaration" : "var isActiveEstimation: Bool",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 88,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC18isActiveEstimationSbvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 43,
            "key.bodyoffset" : 3627,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 70,
            "key.name" : "eventLoop",
            "key.namelength" : 9,
            "key.nameoffset" : 3605,
            "key.offset" : 3601,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient24PoolManageableConnectionP9eventLoop3NIO05EventG0_pvp"
              }
            ],
            "key.parsed_declaration" : "var eventLoop: EventLoop",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 92,
            "key.typename" : "EventLoop",
            "key.typeusr" : "$s3NIO9EventLoop_pD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC9eventLoop3NIO05EventE0_pvp"
          },
          {
            "key.annotated_decl" : "<Declaration>func cancel() -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 77,
            "key.bodyoffset" : 3717,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>cancel<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 118,
            "key.name" : "cancel()",
            "key.namelength" : 8,
            "key.nameoffset" : 3682,
            "key.offset" : 3677,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient24PoolManageableConnectionP6cancel3NIO15EventLoopFutureCyytGyF"
              }
            ],
            "key.parsed_declaration" : "func cancel() -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 96,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection) -> () -> EventLoopFuture<()>",
            "key.typeusr" : "$s3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC6cancel3NIO15EventLoopFutureCyytGyF"
          }
        ],
        "key.typename" : "Connection.Type",
        "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCmD",
        "key.usr" : "s:15AsyncHTTPClient10ConnectionC"
      },
      {
        "key.annotated_decl" : "<Declaration>class Connection<\/Declaration>",
        "key.bodylength" : 650,
        "key.bodyoffset" : 3821,
        "key.doc.column" : 7,
        "key.doc.declaration" : "class Connection",
        "key.doc.discussion" : [
          {
            "Para" : "In the `ConnectionPool`, each `Channel` belongs to a given `HTTP1ConnectionProvider` and has a certain “lease state” (see the `inUse` property). The role of `Connection` is to model this by storing a `Channel` alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"30\" column=\"7\"><Name>Connection<\/Name><USR>s:15AsyncHTTPClient10ConnectionC<\/USR><Declaration>class Connection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Connection<\/codeVoice> represents a <codeVoice>Channel<\/codeVoice> in the context of the connection pool<\/Para><\/Abstract><Discussion><Para>In the <codeVoice>ConnectionPool<\/codeVoice>, each <codeVoice>Channel<\/codeVoice> belongs to a given <codeVoice>HTTP1ConnectionProvider<\/codeVoice> and has a certain “lease state” (see the <codeVoice>inUse<\/codeVoice> property). The role of <codeVoice>Connection<\/codeVoice> is to model this by storing a <codeVoice>Channel<\/codeVoice> alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 30,
        "key.doc.name" : "Connection",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Connection<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 673,
        "key.name" : "Connection",
        "key.namelength" : 10,
        "key.nameoffset" : 3809,
        "key.offset" : 3799,
        "key.parsed_declaration" : "extension Connection",
        "key.parsed_scope.end" : 115,
        "key.parsed_scope.start" : 101,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func setIdleTimeout(timeout: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type>?, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 240,
            "key.bodyoffset" : 3952,
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets idle timeout handler and channel inactivity listener.",
            "key.doc.declaration" : "func setIdleTimeout(timeout: TimeAmount?, logger: Logger)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"103\" column=\"10\"><Name>setIdleTimeout(timeout:logger:)<\/Name><USR>s:15AsyncHTTPClient10ConnectionC14setIdleTimeout7timeout6loggery3NIO10TimeAmountVSg_7Logging6LoggerVtF<\/USR><Declaration>func setIdleTimeout(timeout: TimeAmount?, logger: Logger)<\/Declaration><CommentParts><Abstract><Para>Sets idle timeout handler and channel inactivity listener.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 103,
            "key.doc.name" : "setIdleTimeout(timeout:logger:)",
            "key.doc.type" : "Function",
            "key.doclength" : 63,
            "key.docoffset" : 3826,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>setIdleTimeout<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>timeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 300,
            "key.name" : "setIdleTimeout(timeout:logger:)",
            "key.namelength" : 52,
            "key.nameoffset" : 3898,
            "key.offset" : 3893,
            "key.parsed_declaration" : "func setIdleTimeout(timeout: TimeAmount?, logger: Logger)",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 103,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection) -> (TimeAmount?, Logger) -> ()",
            "key.typeusr" : "$s7timeout6loggery3NIO10TimeAmountVSg_7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC14setIdleTimeout7timeout6loggery3NIO10TimeAmountVSg_7Logging6LoggerVtF"
          },
          {
            "key.annotated_decl" : "<Declaration>func cancelIdleTimeout() -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 150,
            "key.bodyoffset" : 4319,
            "key.doc.column" : 10,
            "key.doc.comment" : "Removes idle timeout handler and channel inactivity listener",
            "key.doc.declaration" : "func cancelIdleTimeout() -> EventLoopFuture<Void>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"110\" column=\"10\"><Name>cancelIdleTimeout()<\/Name><USR>s:15AsyncHTTPClient10ConnectionC17cancelIdleTimeout3NIO15EventLoopFutureCyytGyF<\/USR><Declaration>func cancelIdleTimeout() -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Removes idle timeout handler and channel inactivity listener<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 110,
            "key.doc.name" : "cancelIdleTimeout()",
            "key.doc.type" : "Function",
            "key.doclength" : 65,
            "key.docoffset" : 4199,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>cancelIdleTimeout<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 202,
            "key.name" : "cancelIdleTimeout()",
            "key.namelength" : 19,
            "key.nameoffset" : 4273,
            "key.offset" : 4268,
            "key.parsed_declaration" : "func cancelIdleTimeout() -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 110,
            "key.substructure" : [

            ],
            "key.typename" : "(Connection) -> () -> EventLoopFuture<()>",
            "key.typeusr" : "$s3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC17cancelIdleTimeout3NIO15EventLoopFutureCyytGyF"
          }
        ],
        "key.typename" : "Connection.Type",
        "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCmD",
        "key.usr" : "s:15AsyncHTTPClient10ConnectionC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class IdlePoolConnectionHandler : <Type usr=\"s:3NIO21ChannelInboundHandlerP\">ChannelInboundHandler<\/Type>, <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type><\/Declaration>",
        "key.bodylength" : 984,
        "key.bodyoffset" : 4555,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 4507
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 4530
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>IdlePoolConnectionHandler<\/decl.name> : <ref.protocol usr=\"s:3NIO21ChannelInboundHandlerP\">ChannelInboundHandler<\/ref.protocol>, <ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ChannelInboundHandler"
          },
          {
            "key.name" : "RemovableChannelHandler"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1066,
        "key.name" : "IdlePoolConnectionHandler",
        "key.namelength" : 25,
        "key.nameoffset" : 4480,
        "key.offset" : 4474,
        "key.parsed_declaration" : "class IdlePoolConnectionHandler: ChannelInboundHandler, RemovableChannelHandler",
        "key.parsed_scope.end" : 148,
        "key.parsed_scope.start" : 117,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:15AsyncHTTPClient25IdlePoolConnectionHandlerC\">IdlePoolConnectionHandler<\/Type>.InboundIn = <Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype InboundIn",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"40\" column=\"20\"><Name>InboundIn<\/Name><USR>s:3NIO21ChannelInboundHandlerP0C2InQa<\/USR><Declaration>associatedtype InboundIn<\/Declaration><CommentParts><Abstract><Para>The type of the inbound data which is wrapped in <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "InboundIn",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient25IdlePoolConnectionHandlerC\">IdlePoolConnectionHandler<\/ref.class>.<decl.name>InboundIn<\/decl.name> = <ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 28,
            "key.name" : "InboundIn",
            "key.namelength" : 9,
            "key.nameoffset" : 4570,
            "key.offset" : 4560,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
              }
            ],
            "key.parsed_declaration" : "typealias InboundIn = NIOAny",
            "key.parsed_scope.end" : 118,
            "key.parsed_scope.start" : 118,
            "key.typename" : "NIOAny.Type",
            "key.typeusr" : "$s3NIO6NIOAnyVmD",
            "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let connection: <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>connection<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "connection",
            "key.namelength" : 10,
            "key.nameoffset" : 4598,
            "key.offset" : 4594,
            "key.parsed_declaration" : "let connection: Connection",
            "key.parsed_scope.end" : 120,
            "key.parsed_scope.start" : 120,
            "key.typename" : "Connection",
            "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCD",
            "key.usr" : "s:15AsyncHTTPClient25IdlePoolConnectionHandlerC10connectionAA0E0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var eventSent: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>eventSent<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.name" : "eventSent",
            "key.namelength" : 9,
            "key.nameoffset" : 4629,
            "key.offset" : 4625,
            "key.parsed_declaration" : "var eventSent: Bool",
            "key.parsed_scope.end" : 121,
            "key.parsed_scope.start" : 121,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:15AsyncHTTPClient25IdlePoolConnectionHandlerC9eventSentSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logger<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "logger",
            "key.namelength" : 6,
            "key.nameoffset" : 4653,
            "key.offset" : 4649,
            "key.parsed_declaration" : "let logger: Logger",
            "key.parsed_scope.end" : 122,
            "key.parsed_scope.start" : 122,
            "key.typename" : "Logger",
            "key.typeusr" : "$s7Logging6LoggerVD",
            "key.usr" : "s:15AsyncHTTPClient25IdlePoolConnectionHandlerC6logger7Logging6LoggerVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(connection: <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 102,
            "key.bodyoffset" : 4719,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 149,
            "key.name" : "init(connection:logger:)",
            "key.namelength" : 44,
            "key.nameoffset" : 4673,
            "key.offset" : 4673,
            "key.parsed_declaration" : "init(connection: Connection, logger: Logger)",
            "key.parsed_scope.end" : 128,
            "key.parsed_scope.start" : 124,
            "key.substructure" : [

            ],
            "key.typename" : "(IdlePoolConnectionHandler.Type) -> (Connection, Logger) -> IdlePoolConnectionHandler",
            "key.typeusr" : "$s10connection6logger15AsyncHTTPClient25IdlePoolConnectionHandlerCAC0G0C_7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient25IdlePoolConnectionHandlerC10connection6loggerAcA0E0C_7Logging6LoggerVtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func channelInactive(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.bodylength" : 140,
            "key.bodyoffset" : 4987,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func channelInactive(context: NIO.ChannelHandlerContext)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireChannelInactive` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"170\" column=\"10\"><Name>channelInactive(context:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP15channelInactive7contextyAA0bD7ContextC_tF<\/USR><Declaration>func channelInactive(context: NIO.ChannelHandlerContext)<\/Declaration><CommentParts><Abstract><Para>Called when the <codeVoice>Channel<\/codeVoice> has become inactive and is no longer able to send and receive data`.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireChannelInactive<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 170,
            "key.doc.name" : "channelInactive(context:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>channelInactive<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 195,
            "key.name" : "channelInactive(context:)",
            "key.namelength" : 47,
            "key.nameoffset" : 4938,
            "key.offset" : 4933,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP15channelInactive7contextyAA0bD7ContextC_tF"
              }
            ],
            "key.parsed_declaration" : "func channelInactive(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 136,
            "key.parsed_scope.start" : 131,
            "key.substructure" : [

            ],
            "key.typename" : "(IdlePoolConnectionHandler) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP15channelInactive7contextyAA0bD7ContextC_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func userInboundEventTriggered(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, event: Any)<\/Declaration>",
            "key.bodylength" : 327,
            "key.bodyoffset" : 5210,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func userInboundEventTriggered(context: NIO.ChannelHandlerContext, event: Any)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireUserInboundEventTriggered` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"206\" column=\"10\"><Name>userInboundEventTriggered(context:event:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF<\/USR><Declaration>func userInboundEventTriggered(context: NIO.ChannelHandlerContext, event: Any)<\/Declaration><CommentParts><Abstract><Para>Called when a user inbound event has been triggered.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>event<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The event.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireUserInboundEventTriggered<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 206,
            "key.doc.name" : "userInboundEventTriggered(context:event:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The event."
                  }
                ],
                "name" : "event"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>userInboundEventTriggered<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>event<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 404,
            "key.name" : "userInboundEventTriggered(context:event:)",
            "key.namelength" : 69,
            "key.nameoffset" : 5139,
            "key.offset" : 5134,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF"
              }
            ],
            "key.parsed_declaration" : "func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)",
            "key.parsed_scope.end" : 147,
            "key.parsed_scope.start" : 138,
            "key.substructure" : [

            ],
            "key.typename" : "(IdlePoolConnectionHandler) -> (ChannelHandlerContext, Any) -> ()",
            "key.typeusr" : "$s7context5eventy3NIO21ChannelHandlerContextC_yptcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF"
          }
        ],
        "key.typename" : "IdlePoolConnectionHandler.Type",
        "key.typeusr" : "$s15AsyncHTTPClient25IdlePoolConnectionHandlerCmD",
        "key.usr" : "s:15AsyncHTTPClient25IdlePoolConnectionHandlerC"
      },
      {
        "key.annotated_decl" : "<Declaration>class Connection<\/Declaration>",
        "key.bodylength" : 70,
        "key.bodyoffset" : 5589,
        "key.doc.column" : 7,
        "key.doc.declaration" : "class Connection",
        "key.doc.discussion" : [
          {
            "Para" : "In the `ConnectionPool`, each `Channel` belongs to a given `HTTP1ConnectionProvider` and has a certain “lease state” (see the `inUse` property). The role of `Connection` is to model this by storing a `Channel` alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"30\" column=\"7\"><Name>Connection<\/Name><USR>s:15AsyncHTTPClient10ConnectionC<\/USR><Declaration>class Connection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Connection<\/codeVoice> represents a <codeVoice>Channel<\/codeVoice> in the context of the connection pool<\/Para><\/Abstract><Discussion><Para>In the <codeVoice>ConnectionPool<\/codeVoice>, each <codeVoice>Channel<\/codeVoice> belongs to a given <codeVoice>HTTP1ConnectionProvider<\/codeVoice> and has a certain “lease state” (see the <codeVoice>inUse<\/codeVoice> property). The role of <codeVoice>Connection<\/codeVoice> is to model this by storing a <codeVoice>Channel<\/codeVoice> alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 30,
        "key.doc.name" : "Connection",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 5564
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Connection<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CustomStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 118,
        "key.name" : "Connection",
        "key.namelength" : 10,
        "key.nameoffset" : 5552,
        "key.offset" : 5542,
        "key.parsed_declaration" : "extension Connection: CustomStringConvertible",
        "key.parsed_scope.end" : 154,
        "key.parsed_scope.start" : 150,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 38,
            "key.bodyoffset" : 5619,
            "key.doc.declaration" : "var description: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 64,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 5598,
            "key.offset" : 5594,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "var description: String",
            "key.parsed_scope.end" : 153,
            "key.parsed_scope.start" : 151,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
          }
        ],
        "key.typename" : "Connection.Type",
        "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCmD",
        "key.usr" : "s:15AsyncHTTPClient10ConnectionC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct ConnectionKey&lt;ConnectionType&gt; : <Type usr=\"s:SH\">Hashable<\/Type> where ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
        "key.bodylength" : 514,
        "key.bodyoffset" : 5757,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 5700
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ConnectionKey<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\"><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>ConnectionType : <ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Hashable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 610,
        "key.name" : "ConnectionKey",
        "key.namelength" : 13,
        "key.nameoffset" : 5669,
        "key.offset" : 5662,
        "key.parsed_declaration" : "struct ConnectionKey<ConnectionType>: Hashable where ConnectionType: PoolManageableConnection",
        "key.parsed_scope.end" : 174,
        "key.parsed_scope.start" : 156,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>ConnectionType<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 14,
            "key.name" : "ConnectionType",
            "key.namelength" : 14,
            "key.nameoffset" : 5683,
            "key.offset" : 5683,
            "key.parsed_declaration" : "struct ConnectionKey<ConnectionType",
            "key.parsed_scope.end" : 156,
            "key.parsed_scope.start" : 156,
            "key.typename" : "ConnectionType.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let connection: <Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>connection<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "connection",
            "key.namelength" : 10,
            "key.nameoffset" : 5766,
            "key.offset" : 5762,
            "key.parsed_declaration" : "let connection: ConnectionType",
            "key.parsed_scope.end" : 157,
            "key.parsed_scope.start" : 157,
            "key.typename" : "ConnectionType",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:15AsyncHTTPClient13ConnectionKeyV10connectionxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(_ connection: <Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/Type>)<\/Declaration>",
            "key.bodylength" : 42,
            "key.bodyoffset" : 5834,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>connection<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 79,
            "key.name" : "init(_:)",
            "key.namelength" : 34,
            "key.nameoffset" : 5798,
            "key.offset" : 5798,
            "key.parsed_declaration" : "init(_ connection: ConnectionType)",
            "key.parsed_scope.end" : 161,
            "key.parsed_scope.start" : 159,
            "key.substructure" : [

            ],
            "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (ConnectionKey<ConnectionType>.Type) -> (ConnectionType) -> ConnectionKey<ConnectionType>",
            "key.typeusr" : "$sy15AsyncHTTPClient13ConnectionKeyVyxGxcD",
            "key.usr" : "s:15AsyncHTTPClient13ConnectionKeyVyACyxGxcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static func == (lhs: <Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/Type>&gt;, rhs: <Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 89,
            "key.bodyoffset" : 5980,
            "key.doc.declaration" : "static func == (lhs: Self, rhs: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "Equality is the inverse of inequality. For any values `a` and `b`, `a == b` implies that `a != b` is `false`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>==(_:_:)<\/Name><USR>s:SQ2eeoiySbx_xtFZ<\/USR><Declaration>static func == (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are equal.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Equality is the inverse of inequality. For any values <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>, <codeVoice>a == b<\/codeVoice> implies that <codeVoice>a != b<\/codeVoice> is <codeVoice>false<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Equatable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "==(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A value to compare."
                  }
                ],
                "name" : "lhs"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Another value to compare."
                  }
                ],
                "name" : "rhs"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient13ConnectionKeyV0C4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 187,
            "key.name" : "==(_:_:)",
            "key.namelength" : 75,
            "key.nameoffset" : 5895,
            "key.offset" : 5883,
            "key.overrides" : [
              {
                "key.usr" : "s:SQ2eeoiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "static func == (lhs: ConnectionKey<ConnectionType>, rhs: ConnectionKey<ConnectionType>) -> Bool",
            "key.parsed_scope.end" : 165,
            "key.parsed_scope.start" : 163,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AffineTransformV2eeoiySbAC_ACtFZ\">== (_: AffineTransform, _: AffineTransform) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Logging6LoggerV13MetadataValueO2eeoiySbAE_AEtFZ\">== (_: Logger.Metadata.Value, _: Logger.Metadata.Value) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO10ByteBufferV2eeoiySbAC_ACtFZ\">== (_: ByteBuffer, _: ByteBuffer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO14CircularBufferV5IndexV2eeoiySbAEyx_G_AGtFZ\">== (_: CircularBuffer&lt;Element&gt;.Index, _: CircularBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO14CircularBufferVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: CircularBuffer&lt;Element&gt;, _: CircularBuffer&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO15EmbeddedChannelC14WrongTypeErrorV2eeoiySbAE_AEtFZ\">== (_: EmbeddedChannel.WrongTypeError, _: EmbeddedChannel.WrongTypeError) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO15EventLoopFutureC2eeoiySbACyxG_AEtFZ\">== (_: EventLoopFuture&lt;Value&gt;, _: EventLoopFuture&lt;Value&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO10FileRegionV2eeoiySbAC_ACtFZ\">== (_: FileRegion, _: FileRegion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO7_UInt24V2eeoiySbAC_ACtFZ\">== (_: _UInt24, _: _UInt24) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO7_UInt56V2eeoiySbAC_ACtFZ\">== (_: _UInt56, _: _UInt56) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO16NIONetworkDeviceV2eeoiySbAC_ACtFZ\">== (_: NIONetworkDevice, _: NIONetworkDevice) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO19NIONetworkInterfaceC2eeoiySbAC_ACtFZ\">== (_: NIONetworkInterface, _: NIONetworkInterface) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO13SocketAddressO2eeoiySbAC_ACtFZ\">== (_: SocketAddress, _: SocketAddress) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP115HTTPRequestHeadV2eeoiySbAC_ACtFZ\">== (_: HTTPRequestHead, _: HTTPRequestHead) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP116HTTPResponseHeadV2eeoiySbAC_ACtFZ\">== (_: HTTPResponseHead, _: HTTPResponseHead) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP111HTTPHeadersV2eeoiySbAC_ACtFZ\">== (_: HTTPHeaders, _: HTTPHeaders) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP118HTTPResponseStatusO2eeoiySbAC_ACtFZ\">== (_: HTTPResponseStatus, _: HTTPResponseStatus) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:20NIOTransportServices11NIOTSErrorsO23UnsupportedSocketOptionV2eeoiySbAE_AEtFZ\">== (_: NIOTSErrors.UnsupportedSocketOption, _: NIOTSErrors.UnsupportedSocketOption) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (ConnectionKey<ConnectionType>.Type) -> (ConnectionKey<ConnectionType>, ConnectionKey<ConnectionType>) -> Bool",
            "key.typeusr" : "$sySb15AsyncHTTPClient13ConnectionKeyVyxG_ADtcD",
            "key.usr" : "s:SQ2eeoiySbx_xtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func hash(into hasher: inout <Type usr=\"s:s6HasherV\">Hasher<\/Type>)<\/Declaration>",
            "key.bodylength" : 63,
            "key.bodyoffset" : 6114,
            "key.doc.declaration" : "func hash(into hasher: inout Hasher)",
            "key.doc.discussion" : [
              {
                "Para" : "Implement this method to conform to the `Hashable` protocol. The components used for hashing must be the same as the components compared in your type’s `==` operator implementation. Call `hasher.combine(_:)` with each of these components."
              },
              {
                "Important" : ""
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>hash(into:)<\/Name><USR>s:SH4hash4intoys6HasherVz_tF<\/USR><Declaration>func hash(into hasher: inout Hasher)<\/Declaration><CommentParts><Abstract><Para>Hashes the essential components of this value by feeding them into the given hasher.<\/Para><\/Abstract><Parameters><Parameter><Name>hasher<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The hasher to use when combining the components of this instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Implement this method to conform to the <codeVoice>Hashable<\/codeVoice> protocol. The components used for hashing must be the same as the components compared in your type’s <codeVoice>==<\/codeVoice> operator implementation. Call <codeVoice>hasher.combine(_:)<\/codeVoice> with each of these components.<\/Para><Important><Para>Never call <codeVoice>finalize()<\/codeVoice> on <codeVoice>hasher<\/codeVoice>. Doing so may become a compile-time error in the future.<\/Para><\/Important><Note><Para>This documentation comment was inherited from <codeVoice>Hashable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "hash(into:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The hasher to use when combining the components of this instance."
                  }
                ],
                "name" : "hasher"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hash<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>into<\/decl.var.parameter.argument_label> <decl.var.parameter.name>hasher<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:s6HasherV\">Hasher<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 102,
            "key.name" : "hash(into:)",
            "key.namelength" : 31,
            "key.nameoffset" : 6081,
            "key.offset" : 6076,
            "key.overrides" : [
              {
                "key.usr" : "s:SH4hash4intoys6HasherVz_tF"
              }
            ],
            "key.parsed_declaration" : "func hash(into hasher: inout Hasher)",
            "key.parsed_scope.end" : 169,
            "key.parsed_scope.start" : 167,
            "key.substructure" : [

            ],
            "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (ConnectionKey<ConnectionType>) -> (inout Hasher) -> ()",
            "key.typeusr" : "$s4intoys6HasherVz_tcD",
            "key.usr" : "s:SH4hash4intoys6HasherVz_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func cancel() -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 45,
            "key.bodyoffset" : 6224,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>cancel<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 86,
            "key.name" : "cancel()",
            "key.namelength" : 8,
            "key.nameoffset" : 6189,
            "key.offset" : 6184,
            "key.parsed_declaration" : "func cancel() -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 173,
            "key.parsed_scope.start" : 171,
            "key.substructure" : [

            ],
            "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (ConnectionKey<ConnectionType>) -> () -> EventLoopFuture<()>",
            "key.typeusr" : "$s3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:15AsyncHTTPClient13ConnectionKeyV6cancel3NIO15EventLoopFutureCyytGyF"
          }
        ],
        "key.typename" : "ConnectionKey<ConnectionType>.Type",
        "key.typeusr" : "$s15AsyncHTTPClient13ConnectionKeyVyxGmD",
        "key.usr" : "s:15AsyncHTTPClient13ConnectionKeyV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 18474,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>final class ConnectionPool<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 855
          }
        ],
        "key.bodylength" : 5619,
        "key.bodyoffset" : 883,
        "key.doc.column" : 13,
        "key.doc.comment" : "A connection pool that manages and creates new connections to hosts respecting the specified preferences\n\n- Note: All `internal` methods of this class are thread safe",
        "key.doc.declaration" : "final class ConnectionPool",
        "key.doc.discussion" : [
          {
            "Note" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"27\" column=\"13\"><Name>ConnectionPool<\/Name><USR>s:15AsyncHTTPClient14ConnectionPoolC<\/USR><Declaration>final class ConnectionPool<\/Declaration><CommentParts><Abstract><Para>A connection pool that manages and creates new connections to hosts respecting the specified preferences<\/Para><\/Abstract><Discussion><Note><Para>All <codeVoice>internal<\/codeVoice> methods of this class are thread safe<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 27,
        "key.doc.name" : "ConnectionPool",
        "key.doc.type" : "Class",
        "key.doclength" : 178,
        "key.docoffset" : 677,
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ConnectionPool<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 5642,
        "key.name" : "ConnectionPool",
        "key.namelength" : 14,
        "key.nameoffset" : 867,
        "key.offset" : 861,
        "key.parsed_declaration" : "final class ConnectionPool",
        "key.parsed_scope.end" : 164,
        "key.parsed_scope.start" : 27,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 953
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The configuration used to bootstrap new HTTP connections",
            "key.doc.declaration" : "private let configuration: HTTPClient.Configuration",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"29\" column=\"17\"><Name>configuration<\/Name><USR>s:15AsyncHTTPClient14ConnectionPoolC13configuration33_FE10872964386AE53EF9FE2B5059993ALLAA0B0C13ConfigurationVvp<\/USR><Declaration>private let configuration: HTTPClient.Configuration<\/Declaration><CommentParts><Abstract><Para>The configuration used to bootstrap new HTTP connections<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 29,
            "key.doc.name" : "configuration",
            "key.doc.type" : "Other",
            "key.doclength" : 61,
            "key.docoffset" : 888,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>configuration<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.name" : "configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 965,
            "key.offset" : 961,
            "key.parsed_declaration" : "private let configuration: HTTPClient.Configuration",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.typename" : "HTTPClient.Configuration",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationVD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC13configuration33_FE10872964386AE53EF9FE2B5059993ALLAA0B0C13ConfigurationVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var providers: [<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type> : <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1244
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The main data structure used by the `ConnectionPool` to retreive and create connections associated\nto a given `Key` .\n\n- Warning: This property should be accessed with proper synchronization, see `lock`",
            "key.doc.declaration" : "private var providers: [Key : HTTP1ConnectionProvider]",
            "key.doc.discussion" : [
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"35\" column=\"17\"><Name>providers<\/Name><USR>s:15AsyncHTTPClient14ConnectionPoolC9providers33_FE10872964386AE53EF9FE2B5059993ALLSDyAC3KeyVAA05HTTP1C8ProviderCGvp<\/USR><Declaration>private var providers: [Key : HTTP1ConnectionProvider]<\/Declaration><CommentParts><Abstract><Para>The main data structure used by the <codeVoice>ConnectionPool<\/codeVoice> to retreive and create connections associated to a given <codeVoice>Key<\/codeVoice> .<\/Para><\/Abstract><Discussion><Warning><Para>This property should be accessed with proper synchronization, see <codeVoice>lock<\/codeVoice><\/Para><\/Warning><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 35,
            "key.doc.name" : "providers",
            "key.doc.type" : "Other",
            "key.doclength" : 230,
            "key.docoffset" : 1010,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>providers<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct> : <ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.name" : "providers",
            "key.namelength" : 9,
            "key.nameoffset" : 1256,
            "key.offset" : 1252,
            "key.parsed_declaration" : "private var providers: [Key: HTTP1ConnectionProvider] = [:]",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 35,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[ConnectionPool.Key : HTTP1ConnectionProvider]",
            "key.typeusr" : "$sSDy15AsyncHTTPClient14ConnectionPoolC3KeyVAA05HTTP1C8ProviderCGD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC9providers33_FE10872964386AE53EF9FE2B5059993ALLSDyAC3KeyVAA05HTTP1C8ProviderCGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let lock: <Type usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1558
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The lock used by the connection pool used to ensure correct synchronization of accesses to `providers`\n\n- Warning: This lock should always be acquired *before* `HTTP1ConnectionProvider`s `lock` if used in combination with it.",
            "key.doc.declaration" : "private let lock: NIOConcurrencyHelpers.Lock",
            "key.doc.discussion" : [
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"40\" column=\"17\"><Name>lock<\/Name><USR>s:15AsyncHTTPClient14ConnectionPoolC4lock33_FE10872964386AE53EF9FE2B5059993ALL21NIOConcurrencyHelpers4LockCvp<\/USR><Declaration>private let lock: NIOConcurrencyHelpers.Lock<\/Declaration><CommentParts><Abstract><Para>The lock used by the connection pool used to ensure correct synchronization of accesses to <codeVoice>providers<\/codeVoice><\/Para><\/Abstract><Discussion><Warning><Para>This lock should always be acquired <emphasis>before<\/emphasis> <codeVoice>HTTP1ConnectionProvider<\/codeVoice>s <codeVoice>lock<\/codeVoice> if used in combination with it.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "lock",
            "key.doc.type" : "Other",
            "key.doclength" : 245,
            "key.docoffset" : 1309,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>lock<\/decl.name>: <decl.var.type><ref.class usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.name" : "lock",
            "key.namelength" : 4,
            "key.nameoffset" : 1570,
            "key.offset" : 1566,
            "key.parsed_declaration" : "private let lock = Lock()",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.typename" : "Lock",
            "key.typeusr" : "$s21NIOConcurrencyHelpers4LockCD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC4lock33_FE10872964386AE53EF9FE2B5059993ALL21NIOConcurrencyHelpers4LockCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let backgroundActivityLogger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1589
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>backgroundActivityLogger<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 36,
            "key.name" : "backgroundActivityLogger",
            "key.namelength" : 24,
            "key.nameoffset" : 1601,
            "key.offset" : 1597,
            "key.parsed_declaration" : "private let backgroundActivityLogger: Logger",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.typename" : "Logger",
            "key.typeusr" : "$s7Logging6LoggerVD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC24backgroundActivityLogger33_FE10872964386AE53EF9FE2B5059993ALL7Logging0G0Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>, backgroundActivityLogger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 113,
            "key.bodyoffset" : 1720,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>backgroundActivityLogger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 195,
            "key.name" : "init(configuration:backgroundActivityLogger:)",
            "key.namelength" : 79,
            "key.nameoffset" : 1639,
            "key.offset" : 1639,
            "key.parsed_declaration" : "init(configuration: HTTPClient.Configuration, backgroundActivityLogger: Logger)",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 44,
            "key.substructure" : [

            ],
            "key.typename" : "(ConnectionPool.Type) -> (HTTPClient.Configuration, Logger) -> ConnectionPool",
            "key.typeusr" : "$s13configuration24backgroundActivityLogger15AsyncHTTPClient14ConnectionPoolCAC0F0C13ConfigurationV_7Logging0D0VtcD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC13configuration24backgroundActivityLoggerAcA0B0C13ConfigurationV_7Logging0H0Vtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func associatedEventLoop(for key: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type>) -&gt; <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>?<\/Declaration>",
            "key.bodylength" : 94,
            "key.bodyoffset" : 2278,
            "key.doc.column" : 10,
            "key.doc.comment" : "Gets the `EventLoop` associated with the given `Key` if it exists\n\nThis is part of an optimization used by the `.execute(...)` method when\na request has its `EventLoopPreference` property set to `.indifferent`.\nHaving a default `EventLoop` shared by the *channel* and the *delegate* avoids\nloss of performance due to `EventLoop` hopping",
            "key.doc.declaration" : "func associatedEventLoop(for key: Key) -> EventLoop?",
            "key.doc.discussion" : [
              {
                "Para" : "This is part of an optimization used by the `.execute(...)` method when a request has its `EventLoopPreference` property set to `.indifferent`. Having a default `EventLoop` shared by the  and the  avoids loss of performance due to `EventLoop` hopping"
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"55\" column=\"10\"><Name>associatedEventLoop(for:)<\/Name><USR>s:15AsyncHTTPClient14ConnectionPoolC19associatedEventLoop3for3NIO0fG0_pSgAC3KeyV_tF<\/USR><Declaration>func associatedEventLoop(for key: Key) -&gt; EventLoop?<\/Declaration><CommentParts><Abstract><Para>Gets the <codeVoice>EventLoop<\/codeVoice> associated with the given <codeVoice>Key<\/codeVoice> if it exists<\/Para><\/Abstract><Discussion><Para>This is part of an optimization used by the <codeVoice>.execute(...)<\/codeVoice> method when a request has its <codeVoice>EventLoopPreference<\/codeVoice> property set to <codeVoice>.indifferent<\/codeVoice>. Having a default <codeVoice>EventLoop<\/codeVoice> shared by the <emphasis>channel<\/emphasis> and the <emphasis>delegate<\/emphasis> avoids loss of performance due to <codeVoice>EventLoop<\/codeVoice> hopping<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 55,
            "key.doc.name" : "associatedEventLoop(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 380,
            "key.docoffset" : 1840,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>associatedEventLoop<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 149,
            "key.name" : "associatedEventLoop(for:)",
            "key.namelength" : 33,
            "key.nameoffset" : 2229,
            "key.offset" : 2224,
            "key.parsed_declaration" : "func associatedEventLoop(for key: Key) -> EventLoop?",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 55,
            "key.substructure" : [

            ],
            "key.typename" : "(ConnectionPool) -> (ConnectionPool.Key) -> EventLoop?",
            "key.typeusr" : "$s3for3NIO9EventLoop_pSg15AsyncHTTPClient14ConnectionPoolC3KeyV_tcD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC19associatedEventLoop3for3NIO0fG0_pSgAC3KeyV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getConnection(_ request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, preference: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>, taskEventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>?, setupComplete: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 941,
            "key.bodyoffset" : 3549,
            "key.doc.column" : 10,
            "key.doc.comment" : "This method asks the pool for a connection usable by the specified `request`, respecting the specified options.\n\n- parameter request: The request that needs a `Connection`\n- parameter preference: The `EventLoopPreference` the connection pool will respect to lease a new connection\n- parameter deadline: The connection timeout\n- Returns: A connection  corresponding to the specified parameters\n\nWhen the pool is asked for a new connection, it creates a `Key` from the url associated to the `request`. This key\nis used to determine if there already exists an associated `HTTP1ConnectionProvider` in `providers`.\nIf there is, the connection provider then takes care of leasing a new connection. If a connection provider doesn't exist, it is created.",
            "key.doc.declaration" : "func getConnection(_ request: HTTPClient.Request, preference: HTTPClient.EventLoopPreference, taskEventLoop: EventLoop, deadline: NIODeadline?, setupComplete: EventLoopFuture<Void>, logger: Logger) -> EventLoopFuture<Connection>",
            "key.doc.discussion" : [
              {
                "Para" : "When the pool is asked for a new connection, it creates a `Key` from the url associated to the `request`. This key is used to determine if there already exists an associated `HTTP1ConnectionProvider` in `providers`. If there is, the connection provider then takes care of leasing a new connection. If a connection provider doesn’t exist, it is created."
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"71\" column=\"10\"><Name>getConnection(_:preference:taskEventLoop:deadline:setupComplete:logger:)<\/Name><USR>s:15AsyncHTTPClient14ConnectionPoolC03getC0_10preference13taskEventLoop8deadline13setupComplete6logger3NIO0hI6FutureCyAA0C0CGAA0B0C7RequestV_AQ0hI10PreferenceVAJ0hI0_pAJ11NIODeadlineVSgALyytG7Logging6LoggerVtF<\/USR><Declaration>func getConnection(_ request: HTTPClient.Request, preference: HTTPClient.EventLoopPreference, taskEventLoop: EventLoop, deadline: NIODeadline?, setupComplete: EventLoopFuture&lt;Void&gt;, logger: Logger) -&gt; EventLoopFuture&lt;Connection&gt;<\/Declaration><CommentParts><Abstract><Para>This method asks the pool for a connection usable by the specified <codeVoice>request<\/codeVoice>, respecting the specified options.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The request that needs a <codeVoice>Connection<\/codeVoice><\/Para><\/Discussion><\/Parameter><Parameter><Name>preference<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>EventLoopPreference<\/codeVoice> the connection pool will respect to lease a new connection<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The connection timeout<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A connection  corresponding to the specified parameters<\/Para><\/ResultDiscussion><Discussion><Para>When the pool is asked for a new connection, it creates a <codeVoice>Key<\/codeVoice> from the url associated to the <codeVoice>request<\/codeVoice>. This key is used to determine if there already exists an associated <codeVoice>HTTP1ConnectionProvider<\/codeVoice> in <codeVoice>providers<\/codeVoice>. If there is, the connection provider then takes care of leasing a new connection. If a connection provider doesn’t exist, it is created.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 71,
            "key.doc.name" : "getConnection(_:preference:taskEventLoop:deadline:setupComplete:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The request that needs a `Connection`"
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `EventLoopPreference` the connection pool will respect to lease a new connection"
                  }
                ],
                "name" : "preference"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The connection timeout"
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A connection  corresponding to the specified parameters"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 821,
            "key.docoffset" : 2379,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getConnection<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>preference<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>taskEventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>setupComplete<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1287,
            "key.name" : "getConnection(_:preference:taskEventLoop:deadline:setupComplete:logger:)",
            "key.namelength" : 307,
            "key.nameoffset" : 3209,
            "key.offset" : 3204,
            "key.parsed_declaration" : "func getConnection(_ request: HTTPClient.Request,\n                   preference: HTTPClient.EventLoopPreference,\n                   taskEventLoop: EventLoop,\n                   deadline: NIODeadline?,\n                   setupComplete: EventLoopFuture<Void>,\n                   logger: Logger) -> EventLoopFuture<Connection>",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 71,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let key: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 22,
                "key.name" : "key",
                "key.namelength" : 3,
                "key.nameoffset" : 3562,
                "key.offset" : 3558,
                "key.parsed_declaration" : "let key = Key(request)",
                "key.parsed_scope.end" : 77,
                "key.parsed_scope.start" : 77,
                "key.typename" : "ConnectionPool.Key",
                "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolC3KeyVD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC03getC0_10preference13taskEventLoop8deadline13setupComplete6logger3NIO0hI6FutureCyAA0C0CGAA0B0C7RequestV_AQ0hI10PreferenceVAJ0hI0_pAJ11NIODeadlineVSgALyytG7Logging6LoggerVtF3keyL_AC3KeyVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let provider: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>provider<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 786,
                "key.name" : "provider",
                "key.namelength" : 8,
                "key.nameoffset" : 3594,
                "key.offset" : 3590,
                "key.parsed_declaration" : "let provider: HTTP1ConnectionProvider = self.lock.withLock {\n    if let existing = self.providers[key], existing.enqueue() {\n        return existing\n    } else {\n        let provider = HTTP1ConnectionProvider(key: key,\n                                               eventLoop: taskEventLoop,\n                                               configuration: self.configuration,\n                                               pool: self,\n                                               backgroundActivityLogger: self.backgroundActivityLogger)\n        let enqueued = provider.enqueue()\n        assert(enqueued)\n        self.providers[key] = provider\n        return provider\n    }\n}",
                "key.parsed_scope.end" : 79,
                "key.parsed_scope.start" : 79,
                "key.typename" : "HTTP1ConnectionProvider",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderCD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC03getC0_10preference13taskEventLoop8deadline13setupComplete6logger3NIO0hI6FutureCyAA0C0CGAA0B0C7RequestV_AQ0hI10PreferenceVAJ0hI0_pAJ11NIODeadlineVSgALyytG7Logging6LoggerVtF8providerL_AA05HTTP1C8ProviderCvp"
              }
            ],
            "key.typename" : "(ConnectionPool) -> (HTTPClient.Request, HTTPClient.EventLoopPreference, EventLoop, NIODeadline?, EventLoopFuture<()>, Logger) -> EventLoopFuture<Connection>",
            "key.typeusr" : "$s_10preference13taskEventLoop8deadline13setupComplete6logger3NIO0cD6FutureCy15AsyncHTTPClient10ConnectionCGAI0L0C7RequestV_AN0cD10PreferenceVAF0cD0_pAF11NIODeadlineVSgAHyytG7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC03getC0_10preference13taskEventLoop8deadline13setupComplete6logger3NIO0hI6FutureCyAA0C0CGAA0B0C7RequestV_AQ0hI10PreferenceVAJ0hI0_pAJ11NIODeadlineVSgALyytG7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func delete(_ provider: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>)<\/Declaration>",
            "key.bodylength" : 95,
            "key.bodyoffset" : 4547,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delete<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>provider<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 146,
            "key.name" : "delete(_:)",
            "key.namelength" : 43,
            "key.nameoffset" : 4502,
            "key.offset" : 4497,
            "key.parsed_declaration" : "func delete(_ provider: HTTP1ConnectionProvider)",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 98,
            "key.substructure" : [

            ],
            "key.typename" : "(ConnectionPool) -> (HTTP1ConnectionProvider) -> ()",
            "key.typeusr" : "$syy15AsyncHTTPClient23HTTP1ConnectionProviderCcD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC6deleteyyAA05HTTP1C8ProviderCF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func close(on eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:Sb\">Bool<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 197,
            "key.bodyoffset" : 4711,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>close<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoop<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:Sb\">Bool<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 260,
            "key.name" : "close(on:)",
            "key.namelength" : 30,
            "key.nameoffset" : 4654,
            "key.offset" : 4649,
            "key.parsed_declaration" : "func close(on eventLoop: EventLoop) -> EventLoopFuture<Bool>",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 104,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let providers: <Type usr=\"s:SD\">Dictionary<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type>, <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>&gt;.<Type usr=\"s:SD6ValuesV\">Values<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>providers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SD\">Dictionary<\/ref.struct>&lt;<ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct>, <ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class>&gt;.<ref.struct usr=\"s:SD6ValuesV\">Values<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 80,
                "key.name" : "providers",
                "key.namelength" : 9,
                "key.nameoffset" : 4724,
                "key.offset" : 4720,
                "key.parsed_declaration" : "let providers = self.lock.withLock {\n    self.providers.values\n}",
                "key.parsed_scope.end" : 105,
                "key.parsed_scope.start" : 105,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient14ConnectionPoolC9providers33_FE10872964386AE53EF9FE2B5059993ALLSDyAC3KeyVAA05HTTP1C8ProviderCGvp\">providers<\/RelatedName>"
                  }
                ],
                "key.typename" : "Dictionary<ConnectionPool.Key, HTTP1ConnectionProvider>.Values",
                "key.typeusr" : "$sSD6ValuesVy15AsyncHTTPClient14ConnectionPoolC3KeyVAC05HTTP1D8ProviderC_GD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC5close2on3NIO15EventLoopFutureCySbGAF0hI0_p_tF9providersL_SD6ValuesVyAC3KeyVAA05HTTP1C8ProviderC_Gvp"
              }
            ],
            "key.typename" : "(ConnectionPool) -> (EventLoop) -> EventLoopFuture<Bool>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCySbGAB0cD0_p_tcD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC5close2on3NIO15EventLoopFutureCySbGAF0hI0_p_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var count: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 41,
            "key.bodyoffset" : 4931,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 58,
            "key.name" : "count",
            "key.namelength" : 5,
            "key.nameoffset" : 4919,
            "key.offset" : 4915,
            "key.parsed_declaration" : "var count: Int",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 112,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC5countSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>struct <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.bodylength" : 1168,
            "key.bodyoffset" : 5332,
            "key.doc.column" : 12,
            "key.doc.comment" : "Used by the `ConnectionPool` to index its `HTTP1ConnectionProvider`s\n\nA key is initialized from a `URL`, it uses the components to derive a hashed value\nused by the `providers` dictionary to allow retrieving and creating\nconnection providers associated to a certain request in constant time.",
            "key.doc.declaration" : "struct AsyncHTTPClient.ConnectionPool.Key : Hashable",
            "key.doc.discussion" : [
              {
                "Para" : "A key is initialized from a `URL`, it uses the components to derive a hashed value used by the `providers` dictionary to allow retrieving and creating connection providers associated to a certain request in constant time."
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"121\" column=\"12\"><Name>Key<\/Name><USR>s:15AsyncHTTPClient14ConnectionPoolC3KeyV<\/USR><Declaration>struct AsyncHTTPClient.ConnectionPool.Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Used by the <codeVoice>ConnectionPool<\/codeVoice> to index its <codeVoice>HTTP1ConnectionProvider<\/codeVoice>s<\/Para><\/Abstract><Discussion><Para>A key is initialized from a <codeVoice>URL<\/codeVoice>, it uses the components to derive a hashed value used by the <codeVoice>providers<\/codeVoice> dictionary to allow retrieving and creating connection providers associated to a certain request in constant time.<\/Para><\/Discussion><\/CommentParts><\/Class>",
            "key.doc.line" : 121,
            "key.doc.name" : "Key",
            "key.doc.type" : "Class",
            "key.doclength" : 327,
            "key.docoffset" : 4979,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 5322
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<decl.name>Key<\/decl.name> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.struct>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Hashable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 1191,
            "key.name" : "Key",
            "key.namelength" : 3,
            "key.nameoffset" : 5317,
            "key.offset" : 5310,
            "key.parsed_declaration" : "struct Key: Hashable",
            "key.parsed_scope.end" : 163,
            "key.parsed_scope.start" : 121,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(_ request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>)<\/Declaration>",
                "key.bodylength" : 616,
                "key.bodyoffset" : 5378,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 654,
                "key.name" : "init(_:)",
                "key.namelength" : 35,
                "key.nameoffset" : 5341,
                "key.offset" : 5341,
                "key.parsed_declaration" : "init(_ request: HTTPClient.Request)",
                "key.parsed_scope.end" : 140,
                "key.parsed_scope.start" : 122,
                "key.substructure" : [

                ],
                "key.typename" : "(ConnectionPool.Key.Type) -> (HTTPClient.Request) -> ConnectionPool.Key",
                "key.typeusr" : "$sy15AsyncHTTPClient14ConnectionPoolC3KeyVAA0B0C7RequestVcD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyVyAeA0B0C7RequestVcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var scheme: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO\">Scheme<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>scheme<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO\">Scheme<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "scheme",
                "key.namelength" : 6,
                "key.nameoffset" : 6009,
                "key.offset" : 6005,
                "key.parsed_declaration" : "var scheme: Scheme",
                "key.parsed_scope.end" : 142,
                "key.parsed_scope.start" : 142,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "ConnectionPool.Key.Scheme",
                "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeOD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6schemeAE6SchemeOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var host: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>host<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "host",
                "key.namelength" : 4,
                "key.nameoffset" : 6036,
                "key.offset" : 6032,
                "key.parsed_declaration" : "var host: String",
                "key.parsed_scope.end" : 143,
                "key.parsed_scope.start" : 143,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV4hostSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var port: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>port<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 13,
                "key.name" : "port",
                "key.namelength" : 4,
                "key.nameoffset" : 6061,
                "key.offset" : 6057,
                "key.parsed_declaration" : "var port: Int",
                "key.parsed_scope.end" : 144,
                "key.parsed_scope.start" : 144,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV4portSivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var unixPath: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>unixPath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 20,
                "key.name" : "unixPath",
                "key.namelength" : 8,
                "key.nameoffset" : 6083,
                "key.offset" : 6079,
                "key.parsed_declaration" : "var unixPath: String",
                "key.parsed_scope.end" : 145,
                "key.parsed_scope.start" : 145,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV8unixPathSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type>.Scheme : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
                "key.bodylength" : 362,
                "key.bodyoffset" : 6132,
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 8,
                    "key.offset" : 6122
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct>.<decl.name>Scheme<\/decl.name> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.enum>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Hashable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 386,
                "key.name" : "Scheme",
                "key.namelength" : 6,
                "key.nameoffset" : 6114,
                "key.offset" : 6109,
                "key.parsed_declaration" : "enum Scheme: Hashable",
                "key.parsed_scope.end" : 162,
                "key.parsed_scope.start" : 147,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 9,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 6145,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case http<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>http<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 4,
                        "key.name" : "http",
                        "key.namelength" : 4,
                        "key.nameoffset" : 6150,
                        "key.offset" : 6150,
                        "key.parsed_declaration" : "case http",
                        "key.parsed_scope.end" : 148,
                        "key.parsed_scope.start" : 148,
                        "key.typename" : "(ConnectionPool.Key.Scheme.Type) -> ConnectionPool.Key.Scheme",
                        "key.typeusr" : "$sy15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeOAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO4httpyA2GmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 10,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 6167,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case https<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>https<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 5,
                        "key.name" : "https",
                        "key.namelength" : 5,
                        "key.nameoffset" : 6172,
                        "key.offset" : 6172,
                        "key.parsed_declaration" : "case https",
                        "key.parsed_scope.end" : 149,
                        "key.parsed_scope.start" : 149,
                        "key.typename" : "(ConnectionPool.Key.Scheme.Type) -> ConnectionPool.Key.Scheme",
                        "key.typeusr" : "$sy15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeOAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO5httpsyA2GmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 9,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 6190,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case unix<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>unix<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 4,
                        "key.name" : "unix",
                        "key.namelength" : 4,
                        "key.nameoffset" : 6195,
                        "key.offset" : 6195,
                        "key.parsed_declaration" : "case unix",
                        "key.parsed_scope.end" : 150,
                        "key.parsed_scope.start" : 150,
                        "key.typename" : "(ConnectionPool.Key.Scheme.Type) -> ConnectionPool.Key.Scheme",
                        "key.typeusr" : "$sy15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeOAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO4unixyA2GmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 14,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 6212,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case http_unix<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>http_unix<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 9,
                        "key.name" : "http_unix",
                        "key.namelength" : 9,
                        "key.nameoffset" : 6217,
                        "key.offset" : 6217,
                        "key.parsed_declaration" : "case http_unix",
                        "key.parsed_scope.end" : 151,
                        "key.parsed_scope.start" : 151,
                        "key.typename" : "(ConnectionPool.Key.Scheme.Type) -> ConnectionPool.Key.Scheme",
                        "key.typeusr" : "$sy15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeOAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO9http_unixyA2GmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 15,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 6239,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case https_unix<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>https_unix<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 10,
                        "key.name" : "https_unix",
                        "key.namelength" : 10,
                        "key.nameoffset" : 6244,
                        "key.offset" : 6244,
                        "key.parsed_declaration" : "case https_unix",
                        "key.parsed_scope.end" : 152,
                        "key.parsed_scope.start" : 152,
                        "key.typename" : "(ConnectionPool.Key.Scheme.Type) -> ConnectionPool.Key.Scheme",
                        "key.typeusr" : "$sy15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeOAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO10https_unixyA2GmF"
                      }
                    ]
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var requiresTLS: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
                    "key.bodylength" : 193,
                    "key.bodyoffset" : 6291,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>requiresTLS<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 217,
                    "key.name" : "requiresTLS",
                    "key.namelength" : 11,
                    "key.nameoffset" : 6272,
                    "key.offset" : 6268,
                    "key.parsed_declaration" : "var requiresTLS: Bool",
                    "key.parsed_scope.end" : 161,
                    "key.parsed_scope.start" : 154,
                    "key.typename" : "Bool",
                    "key.typeusr" : "$sSbD",
                    "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO11requiresTLSSbvp"
                  }
                ],
                "key.typename" : "ConnectionPool.Key.Scheme.Type",
                "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeOmD",
                "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV6SchemeO"
              }
            ],
            "key.typename" : "ConnectionPool.Key.Type",
            "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolC3KeyVmD",
            "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC3KeyV"
          }
        ],
        "key.typename" : "ConnectionPool.Type",
        "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolCmD",
        "key.usr" : "s:15AsyncHTTPClient14ConnectionPoolC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class HTTP1ConnectionProvider<\/Declaration>",
        "key.bodylength" : 11438,
        "key.bodyoffset" : 6847,
        "key.doc.column" : 7,
        "key.doc.comment" : "A connection provider of `HTTP\/1.1` connections with a given `Key` (host, scheme, port)\n\nOn top of enabling connection reuse this provider it also facilitates the creation\nof concurrent requests as it has built-in politeness regarding the maximum number\nof concurrent requests to the server.",
        "key.doc.declaration" : "class HTTP1ConnectionProvider",
        "key.doc.discussion" : [
          {
            "Para" : "On top of enabling connection reuse this provider it also facilitates the creation of concurrent requests as it has built-in politeness regarding the maximum number of concurrent requests to the server."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"171\" column=\"7\"><Name>HTTP1ConnectionProvider<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC<\/USR><Declaration>class HTTP1ConnectionProvider<\/Declaration><CommentParts><Abstract><Para>A connection provider of <codeVoice>HTTP\/1.1<\/codeVoice> connections with a given <codeVoice>Key<\/codeVoice> (host, scheme, port)<\/Para><\/Abstract><Discussion><Para>On top of enabling connection reuse this provider it also facilitates the creation of concurrent requests as it has built-in politeness regarding the maximum number of concurrent requests to the server.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 171,
        "key.doc.name" : "HTTP1ConnectionProvider",
        "key.doc.type" : "Class",
        "key.doclength" : 311,
        "key.docoffset" : 6505,
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTP1ConnectionProvider<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 11470,
        "key.name" : "HTTP1ConnectionProvider",
        "key.namelength" : 23,
        "key.nameoffset" : 6822,
        "key.offset" : 6816,
        "key.parsed_declaration" : "class HTTP1ConnectionProvider",
        "key.parsed_scope.end" : 434,
        "key.parsed_scope.start" : 171,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 6916
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The client configuration used to bootstrap new requests",
            "key.doc.declaration" : "private let configuration: HTTPClient.Configuration",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"173\" column=\"17\"><Name>configuration<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC13configuration33_FE10872964386AE53EF9FE2B5059993ALLAA0B0C13ConfigurationVvp<\/USR><Declaration>private let configuration: HTTPClient.Configuration<\/Declaration><CommentParts><Abstract><Para>The client configuration used to bootstrap new requests<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 173,
            "key.doc.name" : "configuration",
            "key.doc.type" : "Other",
            "key.doclength" : 60,
            "key.docoffset" : 6852,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>configuration<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.name" : "configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 6928,
            "key.offset" : 6924,
            "key.parsed_declaration" : "private let configuration: HTTPClient.Configuration",
            "key.parsed_scope.end" : 173,
            "key.parsed_scope.start" : 173,
            "key.typename" : "HTTPClient.Configuration",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationVD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC13configuration33_FE10872964386AE53EF9FE2B5059993ALLAA0B0C13ConfigurationVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let pool: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 7015
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The pool this provider belongs to",
            "key.doc.declaration" : "private let pool: ConnectionPool",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"176\" column=\"17\"><Name>pool<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC4pool33_FE10872964386AE53EF9FE2B5059993ALLAA0D4PoolCvp<\/USR><Declaration>private let pool: ConnectionPool<\/Declaration><CommentParts><Abstract><Para>The pool this provider belongs to<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 176,
            "key.doc.name" : "pool",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 6973,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>pool<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "pool",
            "key.namelength" : 4,
            "key.nameoffset" : 7027,
            "key.offset" : 7023,
            "key.parsed_declaration" : "private let pool: ConnectionPool",
            "key.parsed_scope.end" : 176,
            "key.parsed_scope.start" : 176,
            "key.typename" : "ConnectionPool",
            "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolCD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC4pool33_FE10872964386AE53EF9FE2B5059993ALLAA0D4PoolCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let key: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The key associated with this provider",
            "key.doc.declaration" : "let key: ConnectionPool.Key",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"179\" column=\"9\"><Name>key<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC3keyAA0D4PoolC3KeyVvp<\/USR><Declaration>let key: ConnectionPool.Key<\/Declaration><CommentParts><Abstract><Para>The key associated with this provider<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 179,
            "key.doc.name" : "key",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 7053,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 7103,
            "key.offset" : 7099,
            "key.parsed_declaration" : "let key: ConnectionPool.Key",
            "key.parsed_scope.end" : 179,
            "key.parsed_scope.start" : 179,
            "key.typename" : "ConnectionPool.Key",
            "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolC3KeyVD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC3keyAA0D4PoolC3KeyVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The default `EventLoop` for this provider\n\nThe default event loop is used to create futures and is used when creating `Channel`s for requests\nfor which the `EventLoopPreference` is set to `.indifferent`",
            "key.doc.declaration" : "let eventLoop: EventLoop",
            "key.doc.discussion" : [
              {
                "Para" : "The default event loop is used to create futures and is used when creating `Channel`s for requests for which the `EventLoopPreference` is set to `.indifferent`"
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"185\" column=\"9\"><Name>eventLoop<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC9eventLoop3NIO05EventG0_pvp<\/USR><Declaration>let eventLoop: EventLoop<\/Declaration><CommentParts><Abstract><Para>The default <codeVoice>EventLoop<\/codeVoice> for this provider<\/Para><\/Abstract><Discussion><Para>The default event loop is used to create futures and is used when creating <codeVoice>Channel<\/codeVoice>s for requests for which the <codeVoice>EventLoopPreference<\/codeVoice> is set to <codeVoice>.indifferent<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 185,
            "key.doc.name" : "eventLoop",
            "key.doc.type" : "Other",
            "key.doclength" : 230,
            "key.docoffset" : 7132,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "eventLoop",
            "key.namelength" : 9,
            "key.nameoffset" : 7370,
            "key.offset" : 7366,
            "key.parsed_declaration" : "let eventLoop: EventLoop",
            "key.parsed_scope.end" : 185,
            "key.parsed_scope.start" : 185,
            "key.typename" : "EventLoop",
            "key.typeusr" : "$s3NIO9EventLoop_pD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC9eventLoop3NIO05EventG0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let lock: <Type usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 7652
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The lock used to access and modify the provider state - `availableConnections`, `waiters` and `openedConnectionsCount`.\n\n- Warning: This lock should always be acquired *after* `ConnectionPool`s `lock` if used in combination with it.",
            "key.doc.declaration" : "private let lock: NIOConcurrencyHelpers.Lock",
            "key.doc.discussion" : [
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"190\" column=\"17\"><Name>lock<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC4lock33_FE10872964386AE53EF9FE2B5059993ALL21NIOConcurrencyHelpers4LockCvp<\/USR><Declaration>private let lock: NIOConcurrencyHelpers.Lock<\/Declaration><CommentParts><Abstract><Para>The lock used to access and modify the provider state - <codeVoice>availableConnections<\/codeVoice>, <codeVoice>waiters<\/codeVoice> and <codeVoice>openedConnectionsCount<\/codeVoice>.<\/Para><\/Abstract><Discussion><Warning><Para>This lock should always be acquired <emphasis>after<\/emphasis> <codeVoice>ConnectionPool<\/codeVoice>s <codeVoice>lock<\/codeVoice> if used in combination with it.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 190,
            "key.doc.name" : "lock",
            "key.doc.type" : "Other",
            "key.doclength" : 252,
            "key.docoffset" : 7396,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>lock<\/decl.name>: <decl.var.type><ref.class usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.name" : "lock",
            "key.namelength" : 4,
            "key.nameoffset" : 7664,
            "key.offset" : 7660,
            "key.parsed_declaration" : "private let lock = Lock()",
            "key.parsed_scope.end" : 190,
            "key.parsed_scope.start" : 190,
            "key.typename" : "Lock",
            "key.typeusr" : "$s21NIOConcurrencyHelpers4LockCD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC4lock33_FE10872964386AE53EF9FE2B5059993ALL21NIOConcurrencyHelpers4LockCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var closePromise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>closePromise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 40,
            "key.name" : "closePromise",
            "key.namelength" : 12,
            "key.nameoffset" : 7687,
            "key.offset" : 7683,
            "key.parsed_declaration" : "var closePromise: EventLoopPromise<Void>",
            "key.parsed_scope.end" : 192,
            "key.parsed_scope.start" : 192,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "EventLoopPromise<()>",
            "key.typeusr" : "$s3NIO16EventLoopPromiseVyytGD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC12closePromise3NIO09EventLoopG0VyytGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var state: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV\">ConnectionsState<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>state<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV\">ConnectionsState<\/ref.struct>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 39,
            "key.name" : "state",
            "key.namelength" : 5,
            "key.nameoffset" : 7733,
            "key.offset" : 7729,
            "key.parsed_declaration" : "var state: ConnectionsState<Connection>",
            "key.parsed_scope.end" : 194,
            "key.parsed_scope.start" : 194,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "HTTP1ConnectionProvider.ConnectionsState<Connection>",
            "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateVy_AA0D0CGD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC5stateAC16ConnectionsStateVy_AA0D0CGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let backgroundActivityLogger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 7774
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>backgroundActivityLogger<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 36,
            "key.name" : "backgroundActivityLogger",
            "key.namelength" : 24,
            "key.nameoffset" : 7786,
            "key.offset" : 7782,
            "key.parsed_declaration" : "private let backgroundActivityLogger: Logger",
            "key.parsed_scope.end" : 196,
            "key.parsed_scope.start" : 196,
            "key.typename" : "Logger",
            "key.typeusr" : "$s7Logging6LoggerVD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC24backgroundActivityLogger33_FE10872964386AE53EF9FE2B5059993ALL7Logging0H0Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(key: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type>, eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>, pool: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>, backgroundActivityLogger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 297,
            "key.bodyoffset" : 8569,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `HTTP1ConnectionProvider`\n\n- parameters:\n    - key: The `Key` (host, scheme, port) this provider is associated to\n    - configuration: The client configuration used globally by all requests\n    - initialConnection: The initial connection the pool initializes this provider with\n    - pool: The pool this provider belongs to\n    - backgroundActivityLogger: The logger used to log activity in the background, ie. not associated with a\n                                request.",
            "key.doc.declaration" : "init(key: ConnectionPool.Key, eventLoop: EventLoop, configuration: HTTPClient.Configuration, pool: ConnectionPool, backgroundActivityLogger: Logger)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"207\" column=\"5\"><Name>init(key:eventLoop:configuration:pool:backgroundActivityLogger:)<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC3key9eventLoop13configuration4pool24backgroundActivityLoggerAcA0D4PoolC3KeyV_3NIO05EventH0_pAA0B0C13ConfigurationVAJ7Logging0M0Vtcfc<\/USR><Declaration>init(key: ConnectionPool.Key, eventLoop: EventLoop, configuration: HTTPClient.Configuration, pool: ConnectionPool, backgroundActivityLogger: Logger)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>HTTP1ConnectionProvider<\/codeVoice><\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Key<\/codeVoice> (host, scheme, port) this provider is associated to<\/Para><\/Discussion><\/Parameter><Parameter><Name>configuration<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The client configuration used globally by all requests<\/Para><\/Discussion><\/Parameter><Parameter><Name>initialConnection<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The initial connection the pool initializes this provider with<\/Para><\/Discussion><\/Parameter><Parameter><Name>pool<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The pool this provider belongs to<\/Para><\/Discussion><\/Parameter><Parameter><Name>backgroundActivityLogger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger used to log activity in the background, ie. not associated with a request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 207,
            "key.doc.name" : "init(key:eventLoop:configuration:pool:backgroundActivityLogger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Key` (host, scheme, port) this provider is associated to"
                  }
                ],
                "name" : "key"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The client configuration used globally by all requests"
                  }
                ],
                "name" : "configuration"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The initial connection the pool initializes this provider with"
                  }
                ],
                "name" : "initialConnection"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The pool this provider belongs to"
                  }
                ],
                "name" : "pool"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger used to log activity in the background, ie. not associated with a request."
                  }
                ],
                "name" : "backgroundActivityLogger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 555,
            "key.docoffset" : 7824,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>pool<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>backgroundActivityLogger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 484,
            "key.name" : "init(key:eventLoop:configuration:pool:backgroundActivityLogger:)",
            "key.namelength" : 184,
            "key.nameoffset" : 8383,
            "key.offset" : 8383,
            "key.parsed_declaration" : "init(key: ConnectionPool.Key,\n     eventLoop: EventLoop,\n     configuration: HTTPClient.Configuration,\n     pool: ConnectionPool,\n     backgroundActivityLogger: Logger)",
            "key.parsed_scope.end" : 219,
            "key.parsed_scope.start" : 207,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTP1ConnectionProvider.Type) -> (ConnectionPool.Key, EventLoop, HTTPClient.Configuration, ConnectionPool, Logger) -> HTTP1ConnectionProvider",
            "key.typeusr" : "$s3key9eventLoop13configuration4pool24backgroundActivityLogger15AsyncHTTPClient23HTTP1ConnectionProviderCAF0L4PoolC3KeyV_3NIO05EventC0_pAF0J0C13ConfigurationVAJ7Logging0H0VtcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC3key9eventLoop13configuration4pool24backgroundActivityLoggerAcA0D4PoolC3KeyV_3NIO05EventH0_pAA0B0C13ConfigurationVAJ7Logging0M0Vtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>deinit<\/Declaration>",
            "key.bodylength" : 43,
            "key.bodyoffset" : 8881,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 52,
            "key.name" : "deinit",
            "key.namelength" : 6,
            "key.nameoffset" : 8873,
            "key.offset" : 8873,
            "key.parsed_declaration" : "deinit",
            "key.parsed_scope.end" : 223,
            "key.parsed_scope.start" : 221,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderCfd"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func execute(_ action: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 3434,
            "key.bodyoffset" : 8991,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>action<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 3495,
            "key.name" : "execute(_:logger:)",
            "key.namelength" : 53,
            "key.nameoffset" : 8936,
            "key.offset" : 8931,
            "key.parsed_declaration" : "func execute(_ action: Action<Connection>, logger: Logger)",
            "key.parsed_scope.end" : 288,
            "key.parsed_scope.start" : 225,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> (HTTP1ConnectionProvider.Action<Connection>, Logger) -> ()",
            "key.typeusr" : "$s_6loggery15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_AB0E0CG_7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7execute_6loggeryAC6ActionOy_AA0D0CG_7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func enqueue() -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 84,
            "key.bodyoffset" : 12622,
            "key.doc.column" : 10,
            "key.doc.comment" : "This function is needed to ensure that there is no race between getting a provider from map, and shutting it down when there are no requests processed by it.",
            "key.doc.declaration" : "func enqueue() -> Bool",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"291\" column=\"10\"><Name>enqueue()<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC7enqueueSbyF<\/USR><Declaration>func enqueue() -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>This function is needed to ensure that there is no race between getting a provider from map, and shutting it down when there are no requests processed by it.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 291,
            "key.doc.name" : "enqueue()",
            "key.doc.type" : "Function",
            "key.doclength" : 162,
            "key.docoffset" : 12432,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>enqueue<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 109,
            "key.name" : "enqueue()",
            "key.namelength" : 9,
            "key.nameoffset" : 12603,
            "key.offset" : 12598,
            "key.parsed_declaration" : "func enqueue() -> Bool",
            "key.parsed_scope.end" : 295,
            "key.parsed_scope.start" : 291,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> () -> Bool",
            "key.typeusr" : "$sSbycD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7enqueueSbyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getConnection(preference: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>, setupComplete: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 336,
            "key.bodyoffset" : 12908,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getConnection<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>preference<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>setupComplete<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 532,
            "key.name" : "getConnection(preference:setupComplete:logger:)",
            "key.namelength" : 157,
            "key.nameoffset" : 12718,
            "key.offset" : 12713,
            "key.parsed_declaration" : "func getConnection(preference: HTTPClient.EventLoopPreference,\n                   setupComplete: EventLoopFuture<Void>,\n                   logger: Logger) -> EventLoopFuture<Connection>",
            "key.parsed_scope.end" : 309,
            "key.parsed_scope.start" : 297,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let waiter: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>.<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>waiter<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 124,
                "key.name" : "waiter",
                "key.namelength" : 6,
                "key.nameoffset" : 12921,
                "key.offset" : 12917,
                "key.parsed_declaration" : "let waiter = Waiter<Connection>(promise: self.eventLoop.makePromise(), setupComplete: setupComplete, preference: preference)",
                "key.parsed_scope.end" : 300,
                "key.parsed_scope.start" : 300,
                "key.typename" : "HTTP1ConnectionProvider.Waiter<Connection>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterVy_AA0D0CGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC03getD010preference13setupComplete6logger3NIO15EventLoopFutureCyAA0D0CGAA0B0C0lM10PreferenceV_AJyytG7Logging6LoggerVtF6waiterL_AC6WaiterVy_ALGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let action: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>action<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 98,
                "key.name" : "action",
                "key.namelength" : 6,
                "key.nameoffset" : 13055,
                "key.offset" : 13051,
                "key.parsed_declaration" : "let action: Action = self.lock.withLock {\n    self.state.acquire(waiter: waiter)\n}",
                "key.parsed_scope.end" : 302,
                "key.parsed_scope.start" : 302,
                "key.typename" : "HTTP1ConnectionProvider.Action<Connection>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_AA0D0CGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC03getD010preference13setupComplete6logger3NIO15EventLoopFutureCyAA0D0CGAA0B0C0lM10PreferenceV_AJyytG7Logging6LoggerVtF6actionL_AC6ActionOy_ALGvp"
              }
            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> (HTTPClient.EventLoopPreference, EventLoopFuture<()>, Logger) -> EventLoopFuture<Connection>",
            "key.typeusr" : "$s10preference13setupComplete6logger3NIO15EventLoopFutureCy15AsyncHTTPClient10ConnectionCGAG0J0C0fG10PreferenceV_AFyytG7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC03getD010preference13setupComplete6logger3NIO15EventLoopFutureCyAA0D0CGAA0B0C0lM10PreferenceV_AJyytG7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func connect(_ result: <Type usr=\"s:s6ResultO\">Result<\/Type>&lt;<Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;, waiter: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 1310,
            "key.bodyoffset" : 13343,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>connect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>result<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;<ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>waiter<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1403,
            "key.name" : "connect(_:waiter:logger:)",
            "key.namelength" : 85,
            "key.nameoffset" : 13256,
            "key.offset" : 13251,
            "key.parsed_declaration" : "func connect(_ result: Result<Channel, Error>, waiter: Waiter<Connection>, logger: Logger)",
            "key.parsed_scope.end" : 344,
            "key.parsed_scope.start" : 311,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let action: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>action<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 30,
                "key.name" : "action",
                "key.namelength" : 6,
                "key.nameoffset" : 13356,
                "key.offset" : 13352,
                "key.parsed_declaration" : "let action: Action<Connection>",
                "key.parsed_scope.end" : 312,
                "key.parsed_scope.start" : 312,
                "key.typename" : "HTTP1ConnectionProvider.Action<Connection>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_AA0D0CGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7connect_6waiter6loggerys6ResultOy3NIO7Channel_ps5Error_pG_AC6WaiterVy_AA0D0CG7Logging6LoggerVtF6actionL_AC6ActionOy_APGvp"
              }
            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> (Result<Channel, Error>, HTTP1ConnectionProvider.Waiter<Connection>, Logger) -> ()",
            "key.typeusr" : "$s_6waiter6loggerys6ResultOy3NIO7Channel_ps5Error_pG_15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterVy_AI0J0CG7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7connect_6waiter6loggerys6ResultOy3NIO7Channel_ps5Error_pG_AC6WaiterVy_AA0D0CG7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func release(connection: <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>, closing: <Type usr=\"s:Sb\">Bool<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 1049,
            "key.bodyoffset" : 14729,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>release<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>closing<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1119,
            "key.name" : "release(connection:closing:logger:)",
            "key.namelength" : 62,
            "key.nameoffset" : 14665,
            "key.offset" : 14660,
            "key.parsed_declaration" : "func release(connection: Connection, closing: Bool, logger: Logger)",
            "key.parsed_scope.end" : 368,
            "key.parsed_scope.start" : 346,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let action: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>action<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 124,
                "key.name" : "action",
                "key.namelength" : 6,
                "key.nameoffset" : 14867,
                "key.offset" : 14863,
                "key.parsed_declaration" : "let action: Action = self.lock.withLock {\n    self.state.release(connection: connection, closing: closing)\n}",
                "key.parsed_scope.end" : 349,
                "key.parsed_scope.start" : 349,
                "key.typename" : "HTTP1ConnectionProvider.Action<Connection>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_AA0D0CGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7release10connection7closing6loggeryAA0D0C_Sb7Logging6LoggerVtF6actionL_AC6ActionOy_AIGvp"
              }
            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> (Connection, Bool, Logger) -> ()",
            "key.typeusr" : "$s10connection7closing6loggery15AsyncHTTPClient10ConnectionC_Sb7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7release10connection7closing6loggeryAA0D0C_Sb7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func remoteClosed(connection: <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 171,
            "key.bodyoffset" : 15844,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remoteClosed<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 231,
            "key.name" : "remoteClosed(connection:logger:)",
            "key.namelength" : 52,
            "key.nameoffset" : 15790,
            "key.offset" : 15785,
            "key.parsed_declaration" : "func remoteClosed(connection: Connection, logger: Logger)",
            "key.parsed_scope.end" : 376,
            "key.parsed_scope.start" : 370,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let action: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>action<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 111,
                "key.name" : "action",
                "key.namelength" : 6,
                "key.nameoffset" : 15857,
                "key.offset" : 15853,
                "key.parsed_declaration" : "let action: Action = self.lock.withLock {\n    self.state.remoteClosed(connection: connection)\n}",
                "key.parsed_scope.end" : 371,
                "key.parsed_scope.start" : 371,
                "key.typename" : "HTTP1ConnectionProvider.Action<Connection>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_AA0D0CGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC12remoteClosed10connection6loggeryAA0D0C_7Logging6LoggerVtF6actionL_AC6ActionOy_AHGvp"
              }
            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> (Connection, Logger) -> ()",
            "key.typeusr" : "$s10connection6loggery15AsyncHTTPClient10ConnectionC_7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC12remoteClosed10connection6loggeryAA0D0C_7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func timeout(connection: <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 166,
            "key.bodyoffset" : 16076,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>timeout<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 221,
            "key.name" : "timeout(connection:logger:)",
            "key.namelength" : 47,
            "key.nameoffset" : 16027,
            "key.offset" : 16022,
            "key.parsed_declaration" : "func timeout(connection: Connection, logger: Logger)",
            "key.parsed_scope.end" : 384,
            "key.parsed_scope.start" : 378,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let action: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>action<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 106,
                "key.name" : "action",
                "key.namelength" : 6,
                "key.nameoffset" : 16089,
                "key.offset" : 16085,
                "key.parsed_declaration" : "let action: Action = self.lock.withLock {\n    self.state.timeout(connection: connection)\n}",
                "key.parsed_scope.end" : 379,
                "key.parsed_scope.start" : 379,
                "key.typename" : "HTTP1ConnectionProvider.Action<Connection>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_AA0D0CGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7timeout10connection6loggeryAA0D0C_7Logging6LoggerVtF6actionL_AC6ActionOy_AHGvp"
              }
            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> (Connection, Logger) -> ()",
            "key.typeusr" : "$s10connection6loggery15AsyncHTTPClient10ConnectionC_7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC7timeout10connection6loggeryAA0D0C_7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func closeAndDelete()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 16249
              }
            ],
            "key.bodylength" : 74,
            "key.bodyoffset" : 16280,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>closeAndDelete<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 98,
            "key.name" : "closeAndDelete()",
            "key.namelength" : 16,
            "key.nameoffset" : 16262,
            "key.offset" : 16257,
            "key.parsed_declaration" : "private func closeAndDelete()",
            "key.parsed_scope.end" : 389,
            "key.parsed_scope.start" : 386,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC14closeAndDelete33_FE10872964386AE53EF9FE2B5059993ALLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func close() -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:Sb\">Bool<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 829,
            "key.bodyoffset" : 16400,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>close<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:Sb\">Bool<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 869,
            "key.name" : "close()",
            "key.namelength" : 7,
            "key.nameoffset" : 16366,
            "key.offset" : 16361,
            "key.parsed_declaration" : "func close() -> EventLoopFuture<Bool>",
            "key.parsed_scope.end" : 412,
            "key.parsed_scope.start" : 391,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> () -> EventLoopFuture<Bool>",
            "key.typeusr" : "$s3NIO15EventLoopFutureCySbGycD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC5close3NIO15EventLoopFutureCySbGyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func makeChannel(preference: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 17236
              }
            ],
            "key.bodylength" : 168,
            "key.bodyoffset" : 17334,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeChannel<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>preference<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 259,
            "key.name" : "makeChannel(preference:)",
            "key.namelength" : 55,
            "key.nameoffset" : 17249,
            "key.offset" : 17244,
            "key.parsed_declaration" : "private func makeChannel(preference: HTTPClient.EventLoopPreference) -> EventLoopFuture<Channel>",
            "key.parsed_scope.end" : 416,
            "key.parsed_scope.start" : 414,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTP1ConnectionProvider) -> (HTTPClient.EventLoopPreference) -> EventLoopFuture<Channel>",
            "key.typeusr" : "$s10preference3NIO15EventLoopFutureCyAB7Channel_pG15AsyncHTTPClient0H0C0cD10PreferenceV_tcD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC11makeChannel33_FE10872964386AE53EF9FE2B5059993ALL10preference3NIO15EventLoopFutureCyAG0G0_pGAA0B0C0oP10PreferenceV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>struct <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>.Waiter&lt;ConnectionType&gt; where ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
            "key.bodylength" : 469,
            "key.bodyoffset" : 17814,
            "key.doc.column" : 12,
            "key.doc.comment" : "A `Waiter` represents a request that waits for a connection when none is\ncurrently available\n\n`Waiter`s are created when `maximumConcurrentConnections` is reached\nand we cannot create new connections anymore.",
            "key.doc.declaration" : "struct AsyncHTTPClient.HTTP1ConnectionProvider.Waiter<ConnectionType> where ConnectionType : AsyncHTTPClient.PoolManageableConnection",
            "key.doc.discussion" : [
              {
                "Para" : "`Waiter`s are created when `maximumConcurrentConnections` is reached and we cannot create new connections anymore."
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"423\" column=\"12\"><Name>Waiter<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV<\/USR><Declaration>struct AsyncHTTPClient.HTTP1ConnectionProvider.Waiter&lt;ConnectionType&gt; where ConnectionType : AsyncHTTPClient.PoolManageableConnection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Waiter<\/codeVoice> represents a request that waits for a connection when none is currently available<\/Para><\/Abstract><Discussion><Para><codeVoice>Waiter<\/codeVoice>s are created when <codeVoice>maximumConcurrentConnections<\/codeVoice> is reached and we cannot create new connections anymore.<\/Para><\/Discussion><\/CommentParts><\/Class>",
            "key.doc.line" : 423,
            "key.doc.name" : "Waiter",
            "key.doc.type" : "Class",
            "key.doclength" : 244,
            "key.docoffset" : 17509,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class>.<decl.name>Waiter<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV0D4Typexmfp\"><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>ConnectionType : <ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 527,
            "key.name" : "Waiter",
            "key.namelength" : 6,
            "key.nameoffset" : 17764,
            "key.offset" : 17757,
            "key.parsed_declaration" : "struct Waiter<ConnectionType: PoolManageableConnection>",
            "key.parsed_scope.end" : 433,
            "key.parsed_scope.start" : 423,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 24,
                    "key.offset" : 17787
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "PoolManageableConnection"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 40,
                "key.name" : "ConnectionType",
                "key.namelength" : 14,
                "key.nameoffset" : 17771,
                "key.offset" : 17771,
                "key.parsed_declaration" : "struct Waiter<ConnectionType: PoolManageableConnection",
                "key.parsed_scope.end" : 423,
                "key.parsed_scope.start" : 423,
                "key.typename" : "ConnectionType.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV0D4Typexmfp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.doc.column" : 13,
                "key.doc.comment" : "The promise to complete once a connection is available",
                "key.doc.declaration" : "let promise: EventLoopPromise<ConnectionType>",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"425\" column=\"13\"><Name>promise<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV7promise3NIO16EventLoopPromiseVyxGvp<\/USR><Declaration>let promise: EventLoopPromise&lt;ConnectionType&gt;<\/Declaration><CommentParts><Abstract><Para>The promise to complete once a connection is available<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 425,
                "key.doc.name" : "promise",
                "key.doc.type" : "Other",
                "key.doclength" : 59,
                "key.docoffset" : 17823,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 45,
                "key.name" : "promise",
                "key.namelength" : 7,
                "key.nameoffset" : 17894,
                "key.offset" : 17890,
                "key.parsed_declaration" : "let promise: EventLoopPromise<ConnectionType>",
                "key.parsed_scope.end" : 425,
                "key.parsed_scope.start" : 425,
                "key.typename" : "EventLoopPromise<ConnectionType>",
                "key.typeusr" : "$s3NIO16EventLoopPromiseVyxGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV7promise3NIO16EventLoopPromiseVyxGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let setupComplete: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                "key.doc.column" : 13,
                "key.doc.comment" : "Future that will be succeeded when request timeout handler and `TaskHandler` are added to the pipeline.",
                "key.doc.declaration" : "let setupComplete: EventLoopFuture<Void>",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"428\" column=\"13\"><Name>setupComplete<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV13setupComplete3NIO15EventLoopFutureCyytGvp<\/USR><Declaration>let setupComplete: EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Future that will be succeeded when request timeout handler and <codeVoice>TaskHandler<\/codeVoice> are added to the pipeline.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 428,
                "key.doc.name" : "setupComplete",
                "key.doc.type" : "Other",
                "key.doclength" : 108,
                "key.docoffset" : 17945,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>setupComplete<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 40,
                "key.name" : "setupComplete",
                "key.namelength" : 13,
                "key.nameoffset" : 18065,
                "key.offset" : 18061,
                "key.parsed_declaration" : "let setupComplete: EventLoopFuture<Void>",
                "key.parsed_scope.end" : 428,
                "key.parsed_scope.start" : 428,
                "key.typename" : "EventLoopFuture<()>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCyytGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV13setupComplete3NIO15EventLoopFutureCyytGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let preference: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type><\/Declaration>",
                "key.doc.column" : 13,
                "key.doc.comment" : "The event loop preference associated to this particular request\nthat the provider should respect",
                "key.doc.declaration" : "let preference: HTTPClient.EventLoopPreference",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"432\" column=\"13\"><Name>preference<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV10preferenceAA0B0C19EventLoopPreferenceVvp<\/USR><Declaration>let preference: HTTPClient.EventLoopPreference<\/Declaration><CommentParts><Abstract><Para>The event loop preference associated to this particular request that the provider should respect<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 432,
                "key.doc.name" : "preference",
                "key.doc.type" : "Other",
                "key.doclength" : 113,
                "key.docoffset" : 18111,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>preference<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 46,
                "key.name" : "preference",
                "key.namelength" : 10,
                "key.nameoffset" : 18236,
                "key.offset" : 18232,
                "key.parsed_declaration" : "let preference: HTTPClient.EventLoopPreference",
                "key.parsed_scope.end" : 432,
                "key.parsed_scope.start" : 432,
                "key.typename" : "HTTPClient.EventLoopPreference",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C19EventLoopPreferenceVD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV10preferenceAA0B0C19EventLoopPreferenceVvp"
              }
            ],
            "key.typename" : "HTTP1ConnectionProvider.Waiter<ConnectionType>.Type",
            "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterVy_xGmD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV"
          }
        ],
        "key.typename" : "HTTP1ConnectionProvider.Type",
        "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderCmD",
        "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC"
      },
      {
        "key.annotated_decl" : "<Declaration>struct CircularBuffer&lt;Element&gt; : <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 158,
        "key.bodyoffset" : 18314,
        "key.doc.column" : 15,
        "key.doc.declaration" : "struct CircularBuffer<Element> : CustomStringConvertible",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/CircularBuffer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/CircularBuffer.swift\" line=\"18\" column=\"15\"><Name>CircularBuffer<\/Name><USR>s:3NIO14CircularBufferV<\/USR><Declaration>struct CircularBuffer&lt;Element&gt; : CustomStringConvertible<\/Declaration><CommentParts><Abstract><Para>An automatically expanding ring buffer implementation backed by a <codeVoice>ContiguousArray<\/codeVoice>. Even though this implementation will automatically expand if more elements than <codeVoice>initialCapacity<\/codeVoice> are stored, it’s advantageous to prevent expansions from happening frequently. Expansions will always force an allocation and a copy to happen.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "CircularBuffer",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/CircularBuffer.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CircularBuffer<\/decl.name>&lt;<decl.generic_type_param usr=\"s:3NIO14CircularBufferV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 185,
        "key.modulename" : "NIO",
        "key.name" : "CircularBuffer",
        "key.namelength" : 14,
        "key.nameoffset" : 18298,
        "key.offset" : 18288,
        "key.parsed_declaration" : "extension CircularBuffer",
        "key.parsed_scope.end" : 442,
        "key.parsed_scope.start" : 436,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>mutating func swap(at index: <Type usr=\"s:3NIO14CircularBufferV5IndexV\">Index<\/Type>, with value: <Type usr=\"s:3NIO14CircularBufferV15AsyncHTTPClientE7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:3NIO14CircularBufferV15AsyncHTTPClientE7Elementxmfp\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 18319
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 18388,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>swap<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO14CircularBufferV5IndexV\">Index<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:3NIO14CircularBufferV15AsyncHTTPClientE7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:3NIO14CircularBufferV15AsyncHTTPClientE7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 143,
            "key.name" : "swap(at:with:)",
            "key.namelength" : 42,
            "key.nameoffset" : 18333,
            "key.offset" : 18328,
            "key.parsed_declaration" : "mutating func swap(at index: Index, with value: Element) -> Element",
            "key.parsed_scope.end" : 441,
            "key.parsed_scope.start" : 437,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let tmp: Element<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tmp<\/decl.name>: <decl.var.type>Element<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "tmp",
                "key.namelength" : 3,
                "key.nameoffset" : 18401,
                "key.offset" : 18397,
                "key.parsed_declaration" : "let tmp = self[index]",
                "key.parsed_scope.end" : 438,
                "key.parsed_scope.start" : 438,
                "key.typename" : "Element",
                "key.typeusr" : "$sxD",
                "key.usr" : "s:3NIO14CircularBufferV15AsyncHTTPClientE4swap2at4withxAC5IndexVyx_G_xtF3tmpL_xvp"
              }
            ],
            "key.typename" : "<Element> (inout CircularBuffer<Element>) -> (CircularBuffer<Element>.Index, Element) -> Element",
            "key.typeusr" : "$s2at4withx3NIO14CircularBufferV5IndexVyx_G_xtcD",
            "key.usr" : "s:3NIO14CircularBufferV15AsyncHTTPClientE4swap2at4withxAC5IndexVyx_G_xtF"
          }
        ],
        "key.typename" : "CircularBuffer<Element>.Type",
        "key.typeusr" : "$s3NIO14CircularBufferVyxGmD",
        "key.usr" : "s:3NIO14CircularBufferV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 15139,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>class HTTP1ConnectionProvider<\/Declaration>",
        "key.bodylength" : 14571,
        "key.bodyoffset" : 566,
        "key.doc.column" : 7,
        "key.doc.declaration" : "class HTTP1ConnectionProvider",
        "key.doc.discussion" : [
          {
            "Para" : "On top of enabling connection reuse this provider it also facilitates the creation of concurrent requests as it has built-in politeness regarding the maximum number of concurrent requests to the server."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"171\" column=\"7\"><Name>HTTP1ConnectionProvider<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC<\/USR><Declaration>class HTTP1ConnectionProvider<\/Declaration><CommentParts><Abstract><Para>A connection provider of <codeVoice>HTTP\/1.1<\/codeVoice> connections with a given <codeVoice>Key<\/codeVoice> (host, scheme, port)<\/Para><\/Abstract><Discussion><Para>On top of enabling connection reuse this provider it also facilitates the creation of concurrent requests as it has built-in politeness regarding the maximum number of concurrent requests to the server.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 171,
        "key.doc.name" : "HTTP1ConnectionProvider",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTP1ConnectionProvider<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 14607,
        "key.name" : "HTTP1ConnectionProvider",
        "key.namelength" : 23,
        "key.nameoffset" : 541,
        "key.offset" : 531,
        "key.parsed_declaration" : "extension HTTP1ConnectionProvider",
        "key.parsed_scope.end" : 325,
        "key.parsed_scope.start" : 17,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>enum Action&lt;ConnectionType&gt; where ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
            "key.bodylength" : 438,
            "key.bodyoffset" : 626,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Action<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\"><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>ConnectionType : <ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 494,
            "key.name" : "Action",
            "key.namelength" : 6,
            "key.nameoffset" : 576,
            "key.offset" : 571,
            "key.parsed_declaration" : "enum Action<ConnectionType: PoolManageableConnection>",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 18,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 24,
                    "key.offset" : 599
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "PoolManageableConnection"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 40,
                "key.name" : "ConnectionType",
                "key.namelength" : 14,
                "key.nameoffset" : 583,
                "key.offset" : 583,
                "key.parsed_declaration" : "enum Action<ConnectionType: PoolManageableConnection",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 18,
                "key.typename" : "ConnectionType.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp"
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 50,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 635,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>case lease(<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>, <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>&gt;)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>lease<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 45,
                    "key.name" : "lease(_:_:)",
                    "key.namelength" : 45,
                    "key.nameoffset" : 640,
                    "key.offset" : 640,
                    "key.parsed_declaration" : "case lease(ConnectionType, Waiter<ConnectionType>)",
                    "key.parsed_scope.end" : 19,
                    "key.parsed_scope.start" : 19,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> (ConnectionType, HTTP1ConnectionProvider.Waiter<ConnectionType>) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_AC6WaiterVy_xGtcAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO5leaseyAEy_xGx_AC6WaiterVy_xGtcAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 35,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 694,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>case create(<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>&gt;)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>create<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 30,
                    "key.name" : "create(_:)",
                    "key.namelength" : 30,
                    "key.nameoffset" : 699,
                    "key.offset" : 699,
                    "key.parsed_declaration" : "case create(Waiter<ConnectionType>)",
                    "key.parsed_scope.end" : 20,
                    "key.parsed_scope.start" : 20,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> (HTTP1ConnectionProvider.Waiter<ConnectionType>) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGAC6WaiterVy_xGcAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO6createyAEy_xGAC6WaiterVy_xGcAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 52,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 738,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>case replace(<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>, <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>&gt;)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>replace<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 47,
                    "key.name" : "replace(_:_:)",
                    "key.namelength" : 47,
                    "key.nameoffset" : 743,
                    "key.offset" : 743,
                    "key.parsed_declaration" : "case replace(ConnectionType, Waiter<ConnectionType>)",
                    "key.parsed_scope.end" : 21,
                    "key.parsed_scope.start" : 21,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> (ConnectionType, HTTP1ConnectionProvider.Waiter<ConnectionType>) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_AC6WaiterVy_xGtcAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO7replaceyAEy_xGx_AC6WaiterVy_xGtcAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 18,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 799,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>case closeProvider<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>closeProvider<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 13,
                    "key.name" : "closeProvider",
                    "key.namelength" : 13,
                    "key.nameoffset" : 804,
                    "key.offset" : 804,
                    "key.parsed_declaration" : "case closeProvider",
                    "key.parsed_scope.end" : 22,
                    "key.parsed_scope.start" : 22,
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO05closeE0yAEy_xGAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 25,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 826,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>case park(<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>park<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 20,
                    "key.name" : "park(_:)",
                    "key.namelength" : 20,
                    "key.nameoffset" : 831,
                    "key.offset" : 831,
                    "key.parsed_declaration" : "case park(ConnectionType)",
                    "key.parsed_scope.end" : 23,
                    "key.parsed_scope.start" : 23,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> (ConnectionType) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGxcAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO4parkyAEy_xGxcAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 860,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>case none<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>none<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "none",
                    "key.namelength" : 4,
                    "key.nameoffset" : 865,
                    "key.offset" : 865,
                    "key.parsed_declaration" : "case none",
                    "key.parsed_scope.end" : 24,
                    "key.parsed_scope.start" : 24,
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO4noneyAEy_xGAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 40,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 878,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>case fail(<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>&gt;, <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>fail<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 35,
                    "key.name" : "fail(_:_:)",
                    "key.namelength" : 35,
                    "key.nameoffset" : 883,
                    "key.offset" : 883,
                    "key.parsed_declaration" : "case fail(Waiter<ConnectionType>, Error)",
                    "key.parsed_scope.end" : 25,
                    "key.parsed_scope.start" : 25,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> (HTTP1ConnectionProvider.Waiter<ConnectionType>, Error) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGAC6WaiterVy_xG_s5Error_ptcAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO4failyAEy_xGAC6WaiterVy_xG_s5Error_ptcAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 53,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 936,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>indirect case closeAnd(<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>, <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>&gt;)<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.indirect",
                        "key.length" : 8,
                        "key.offset" : 927
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>indirect<\/syntaxtype.keyword> <syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>closeAnd<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 48,
                    "key.name" : "closeAnd(_:_:)",
                    "key.namelength" : 48,
                    "key.nameoffset" : 941,
                    "key.offset" : 941,
                    "key.parsed_declaration" : "indirect case closeAnd(ConnectionType, Action<ConnectionType>)",
                    "key.parsed_scope.end" : 26,
                    "key.parsed_scope.start" : 26,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> (ConnectionType, HTTP1ConnectionProvider.Action<ConnectionType>) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_AFtcAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO8closeAndyAEy_xGx_AGtcAGmAA014PoolManageableD0RzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 52,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 1007,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>indirect case parkAnd(<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>, <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/Type>&gt;)<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.indirect",
                        "key.length" : 8,
                        "key.offset" : 998
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>indirect<\/syntaxtype.keyword> <syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>parkAnd<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 47,
                    "key.name" : "parkAnd(_:_:)",
                    "key.namelength" : 47,
                    "key.nameoffset" : 1012,
                    "key.offset" : 1012,
                    "key.parsed_declaration" : "indirect case parkAnd(ConnectionType, Action<ConnectionType>)",
                    "key.parsed_scope.end" : 27,
                    "key.parsed_scope.start" : 27,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.Action<ConnectionType>.Type) -> (ConnectionType, HTTP1ConnectionProvider.Action<ConnectionType>) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                    "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_AFtcAFmcAA014PoolManageableD0RzluD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO7parkAndyAEy_xGx_AGtcAGmAA014PoolManageableD0RzlF"
                  }
                ]
              }
            ],
            "key.typename" : "HTTP1ConnectionProvider.Action<ConnectionType>.Type",
            "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGmD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO"
          },
          {
            "key.annotated_decl" : "<Declaration>struct ConnectionsState&lt;ConnectionType&gt; where ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
            "key.bodylength" : 13997,
            "key.bodyoffset" : 1138,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ConnectionsState<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\"><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>ConnectionType : <ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 14065,
            "key.name" : "ConnectionsState",
            "key.namelength" : 16,
            "key.nameoffset" : 1078,
            "key.offset" : 1071,
            "key.parsed_declaration" : "struct ConnectionsState<ConnectionType: PoolManageableConnection>",
            "key.parsed_scope.end" : 324,
            "key.parsed_scope.start" : 30,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 24,
                    "key.offset" : 1111
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "PoolManageableConnection"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 40,
                "key.name" : "ConnectionType",
                "key.namelength" : 14,
                "key.nameoffset" : 1095,
                "key.offset" : 1095,
                "key.parsed_declaration" : "struct ConnectionsState<ConnectionType: PoolManageableConnection",
                "key.parsed_scope.end" : 30,
                "key.parsed_scope.start" : 30,
                "key.typename" : "ConnectionType.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>.<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV\">ConnectionsState<\/Type>&lt;ConnectionType&gt;.State<\/Declaration>",
                "key.bodylength" : 57,
                "key.bodyoffset" : 1159,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV\">ConnectionsState<\/ref.struct>&lt;ConnectionType&gt;.<decl.name>State<\/decl.name><\/decl.enum>",
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 70,
                "key.name" : "State",
                "key.namelength" : 5,
                "key.nameoffset" : 1152,
                "key.offset" : 1147,
                "key.parsed_declaration" : "enum State",
                "key.parsed_scope.end" : 34,
                "key.parsed_scope.start" : 31,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 11,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 1172,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case active<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>active<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 6,
                        "key.name" : "active",
                        "key.namelength" : 6,
                        "key.nameoffset" : 1177,
                        "key.offset" : 1177,
                        "key.parsed_declaration" : "case active",
                        "key.parsed_scope.end" : 32,
                        "key.parsed_scope.start" : 32,
                        "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.State.Type) -> HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.State",
                        "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0Oy_x_GAHmcAA014PoolManageableD0RzluD",
                        "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0O6activeyAGy_x_GAImAA014PoolManageableD0RzlF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 11,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 1196,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case closed<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>closed<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 6,
                        "key.name" : "closed",
                        "key.namelength" : 6,
                        "key.nameoffset" : 1201,
                        "key.offset" : 1201,
                        "key.parsed_declaration" : "case closed",
                        "key.parsed_scope.end" : 33,
                        "key.parsed_scope.start" : 33,
                        "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.State.Type) -> HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.State",
                        "key.typeusr" : "$sy15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0Oy_x_GAHmcAA014PoolManageableD0RzluD",
                        "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0O6closedyAGy_x_GAImAA014PoolManageableD0RzlF"
                      }
                    ]
                  }
                ],
                "key.typename" : "HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.State.Type",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0Oy_x_GmD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0O"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>struct <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>.<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV\">ConnectionsState<\/Type>&lt;ConnectionType&gt;.Snapshot&lt;ConnectionType&gt; where ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
                "key.bodylength" : 314,
                "key.bodyoffset" : 1286,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV\">ConnectionsState<\/ref.struct>&lt;ConnectionType&gt;.<decl.name>Snapshot<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp\"><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>ConnectionType : <ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 374,
                "key.name" : "Snapshot",
                "key.namelength" : 8,
                "key.nameoffset" : 1234,
                "key.offset" : 1227,
                "key.parsed_declaration" : "struct Snapshot<ConnectionType: PoolManageableConnection>",
                "key.parsed_scope.end" : 43,
                "key.parsed_scope.start" : 36,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
                    "key.elements" : [
                      {
                        "key.kind" : "source.lang.swift.structure.elem.typeref",
                        "key.length" : 24,
                        "key.offset" : 1259
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                    "key.inheritedtypes" : [
                      {
                        "key.name" : "PoolManageableConnection"
                      }
                    ],
                    "key.kind" : "source.lang.swift.decl.generic_type_param",
                    "key.length" : 40,
                    "key.name" : "ConnectionType",
                    "key.namelength" : 14,
                    "key.nameoffset" : 1243,
                    "key.offset" : 1243,
                    "key.parsed_declaration" : "struct Snapshot<ConnectionType: PoolManageableConnection",
                    "key.parsed_scope.end" : 36,
                    "key.parsed_scope.start" : 36,
                    "key.typename" : "ConnectionType.Type",
                    "key.typeusr" : "$sqd__mD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var state: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0O\">State<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>state<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0O\">State<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 16,
                    "key.name" : "state",
                    "key.namelength" : 5,
                    "key.nameoffset" : 1303,
                    "key.offset" : 1299,
                    "key.parsed_declaration" : "var state: State",
                    "key.parsed_scope.end" : 37,
                    "key.parsed_scope.start" : 37,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.State",
                    "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0Oy_x_GD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV5stateAE0G0Oy_x_Gvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var availableConnections: <Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>availableConnections<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 56,
                    "key.name" : "availableConnections",
                    "key.namelength" : 20,
                    "key.nameoffset" : 1332,
                    "key.offset" : 1328,
                    "key.parsed_declaration" : "var availableConnections: CircularBuffer<ConnectionType>",
                    "key.parsed_scope.end" : 38,
                    "key.parsed_scope.start" : 38,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "CircularBuffer<ConnectionType>",
                    "key.typeusr" : "$s3NIO14CircularBufferVyqd__GD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV09availableF03NIO14CircularBufferVyqd__Gvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var leasedConnections: <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp\">ConnectionType<\/Type>&gt;&gt;<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>leasedConnections<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.struct usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp\">ConnectionType<\/ref.generic_type_param>&gt;&gt;<\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 57,
                    "key.name" : "leasedConnections",
                    "key.namelength" : 17,
                    "key.nameoffset" : 1401,
                    "key.offset" : 1397,
                    "key.parsed_declaration" : "var leasedConnections: Set<ConnectionKey<ConnectionType>>",
                    "key.parsed_scope.end" : 39,
                    "key.parsed_scope.start" : 39,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "Set<ConnectionKey<ConnectionType>>",
                    "key.typeusr" : "$sShy15AsyncHTTPClient13ConnectionKeyVyqd__GGD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV06leasedF0ShyAA0D3KeyVyqd__GGvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var waiters: <Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp\">ConnectionType<\/Type>&gt;&gt;<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>waiters<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV0D4Typeqd__mfp\">ConnectionType<\/ref.generic_type_param>&gt;&gt;<\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 51,
                    "key.name" : "waiters",
                    "key.namelength" : 7,
                    "key.nameoffset" : 1471,
                    "key.offset" : 1467,
                    "key.parsed_declaration" : "var waiters: CircularBuffer<Waiter<ConnectionType>>",
                    "key.parsed_scope.end" : 40,
                    "key.parsed_scope.start" : 40,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "CircularBuffer<HTTP1ConnectionProvider.Waiter<ConnectionType>>",
                    "key.typeusr" : "$s3NIO14CircularBufferVy15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterVy_qd__GGD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV7waiters3NIO14CircularBufferVyAC6WaiterVy_qd__GGvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var openedConnectionsCount: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>openedConnectionsCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 31,
                    "key.name" : "openedConnectionsCount",
                    "key.namelength" : 22,
                    "key.nameoffset" : 1535,
                    "key.offset" : 1531,
                    "key.parsed_declaration" : "var openedConnectionsCount: Int",
                    "key.parsed_scope.end" : 41,
                    "key.parsed_scope.start" : 41,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV06openedF5CountSivp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var pending: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pending<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 16,
                    "key.name" : "pending",
                    "key.namelength" : 7,
                    "key.nameoffset" : 1579,
                    "key.offset" : 1575,
                    "key.parsed_declaration" : "var pending: Int",
                    "key.parsed_scope.end" : 42,
                    "key.parsed_scope.start" : 42,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV7pendingSivp"
                  }
                ],
                "key.typename" : "HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.Snapshot<ConnectionType>.Type",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotVy_x_qd__GmD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let maximumConcurrentConnections: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>maximumConcurrentConnections<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 37,
                "key.name" : "maximumConcurrentConnections",
                "key.namelength" : 28,
                "key.nameoffset" : 1615,
                "key.offset" : 1611,
                "key.parsed_declaration" : "let maximumConcurrentConnections: Int",
                "key.parsed_scope.end" : 45,
                "key.parsed_scope.start" : 45,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV017maximumConcurrentF0Sivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 24,
                "key.name" : "eventLoop",
                "key.namelength" : 9,
                "key.nameoffset" : 1661,
                "key.offset" : 1657,
                "key.parsed_declaration" : "let eventLoop: EventLoop",
                "key.parsed_scope.end" : 46,
                "key.parsed_scope.start" : 46,
                "key.typename" : "EventLoop",
                "key.typeusr" : "$s3NIO9EventLoop_pD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV9eventLoop3NIO05EventI0_pvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var state: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0O\">State<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 1691
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>state<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0O\">State<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "state",
                "key.namelength" : 5,
                "key.nameoffset" : 1703,
                "key.offset" : 1699,
                "key.parsed_declaration" : "private var state: State = .active",
                "key.parsed_scope.end" : 48,
                "key.parsed_scope.start" : 48,
                "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                "key.typename" : "HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.State",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0G0Oy_x_GD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV5state33_34D8574D1E5011EACA9F66FF5E6B676CLLAE0G0Oy_x_Gvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var availableConnections: <Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 1786
                  }
                ],
                "key.doc.column" : 21,
                "key.doc.comment" : "Opened connections that are available.",
                "key.doc.declaration" : "private var availableConnections: CircularBuffer<ConnectionType>",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift\" line=\"51\" column=\"21\"><Name>availableConnections<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV09availableF033_34D8574D1E5011EACA9F66FF5E6B676CLL3NIO14CircularBufferVyxGvp<\/USR><Declaration>private var availableConnections: CircularBuffer&lt;ConnectionType&gt;<\/Declaration><CommentParts><Abstract><Para>Opened connections that are available.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 51,
                "key.doc.name" : "availableConnections",
                "key.doc.type" : "Other",
                "key.doclength" : 43,
                "key.docoffset" : 1735,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>availableConnections<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 84,
                "key.name" : "availableConnections",
                "key.namelength" : 20,
                "key.nameoffset" : 1798,
                "key.offset" : 1794,
                "key.parsed_declaration" : "private var availableConnections: CircularBuffer<ConnectionType> = .init(initialCapacity: 8)",
                "key.parsed_scope.end" : 51,
                "key.parsed_scope.start" : 51,
                "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                "key.typename" : "CircularBuffer<ConnectionType>",
                "key.typeusr" : "$s3NIO14CircularBufferVyxGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV09availableF033_34D8574D1E5011EACA9F66FF5E6B676CLL3NIO14CircularBufferVyxGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var leasedConnections: <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 1948
                  }
                ],
                "key.doc.column" : 21,
                "key.doc.comment" : "Opened connections that are leased to the user.",
                "key.doc.declaration" : "private var leasedConnections: Set<ConnectionKey<ConnectionType>>",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift\" line=\"54\" column=\"21\"><Name>leasedConnections<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV06leasedF033_34D8574D1E5011EACA9F66FF5E6B676CLLShyAA0D3KeyVyxGGvp<\/USR><Declaration>private var leasedConnections: Set&lt;ConnectionKey&lt;ConnectionType&gt;&gt;<\/Declaration><CommentParts><Abstract><Para>Opened connections that are leased to the user.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 54,
                "key.doc.name" : "leasedConnections",
                "key.doc.type" : "Other",
                "key.doclength" : 52,
                "key.docoffset" : 1888,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>leasedConnections<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.struct usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 67,
                "key.name" : "leasedConnections",
                "key.namelength" : 17,
                "key.nameoffset" : 1960,
                "key.offset" : 1956,
                "key.parsed_declaration" : "private var leasedConnections: Set<ConnectionKey<ConnectionType>> = .init()",
                "key.parsed_scope.end" : 54,
                "key.parsed_scope.start" : 54,
                "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                "key.typename" : "Set<ConnectionKey<ConnectionType>>",
                "key.typeusr" : "$sShy15AsyncHTTPClient13ConnectionKeyVyxGGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV06leasedF033_34D8574D1E5011EACA9F66FF5E6B676CLLShyAA0D3KeyVyxGGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var waiters: <Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 2334
                  }
                ],
                "key.doc.column" : 21,
                "key.doc.comment" : "Consumers that weren't able to get a new connection without exceeding\n`maximumConcurrentConnections` get a `Future<Connection>`\nwhose associated promise is stored in `Waiter`. The promise is completed\nas soon as possible by the provider, in FIFO order.",
                "key.doc.declaration" : "private var waiters: CircularBuffer<Waiter<ConnectionType>>",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift\" line=\"60\" column=\"21\"><Name>waiters<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7waiters33_34D8574D1E5011EACA9F66FF5E6B676CLL3NIO14CircularBufferVyAC6WaiterVy_xGGvp<\/USR><Declaration>private var waiters: CircularBuffer&lt;Waiter&lt;ConnectionType&gt;&gt;<\/Declaration><CommentParts><Abstract><Para>Consumers that weren’t able to get a new connection without exceeding <codeVoice>maximumConcurrentConnections<\/codeVoice> get a <codeVoice>Future&lt;Connection&gt;<\/codeVoice> whose associated promise is stored in <codeVoice>Waiter<\/codeVoice>. The promise is completed as soon as possible by the provider, in FIFO order.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 60,
                "key.doc.name" : "waiters",
                "key.doc.type" : "Other",
                "key.doclength" : 293,
                "key.docoffset" : 2033,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>waiters<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 79,
                "key.name" : "waiters",
                "key.namelength" : 7,
                "key.nameoffset" : 2346,
                "key.offset" : 2342,
                "key.parsed_declaration" : "private var waiters: CircularBuffer<Waiter<ConnectionType>> = .init(initialCapacity: 8)",
                "key.parsed_scope.end" : 60,
                "key.parsed_scope.start" : 60,
                "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                "key.typename" : "CircularBuffer<HTTP1ConnectionProvider.Waiter<ConnectionType>>",
                "key.typeusr" : "$s3NIO14CircularBufferVy15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterVy_xGGD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7waiters33_34D8574D1E5011EACA9F66FF5E6B676CLL3NIO14CircularBufferVyAC6WaiterVy_xGGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var openedConnectionsCount: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 2574
                  }
                ],
                "key.doc.column" : 21,
                "key.doc.comment" : "Number of opened or opening connections, used to keep track of all connections and enforcing `maximumConcurrentConnections` limit.",
                "key.doc.declaration" : "private var openedConnectionsCount: Int",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift\" line=\"63\" column=\"21\"><Name>openedConnectionsCount<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV06openedF5Count33_34D8574D1E5011EACA9F66FF5E6B676CLLSivp<\/USR><Declaration>private var openedConnectionsCount: Int<\/Declaration><CommentParts><Abstract><Para>Number of opened or opening connections, used to keep track of all connections and enforcing <codeVoice>maximumConcurrentConnections<\/codeVoice> limit.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 63,
                "key.doc.name" : "openedConnectionsCount",
                "key.doc.type" : "Other",
                "key.doclength" : 135,
                "key.docoffset" : 2431,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>openedConnectionsCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 35,
                "key.name" : "openedConnectionsCount",
                "key.namelength" : 22,
                "key.nameoffset" : 2586,
                "key.offset" : 2582,
                "key.parsed_declaration" : "private var openedConnectionsCount: Int = 0",
                "key.parsed_scope.end" : 63,
                "key.parsed_scope.start" : 63,
                "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV06openedF5Count33_34D8574D1E5011EACA9F66FF5E6B676CLLSivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var pending: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 2720
                  }
                ],
                "key.doc.column" : 21,
                "key.doc.comment" : "Number of enqueued requests, used to track if it is safe to delete the provider.",
                "key.doc.declaration" : "private var pending: Int",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift\" line=\"66\" column=\"21\"><Name>pending<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7pending33_34D8574D1E5011EACA9F66FF5E6B676CLLSivp<\/USR><Declaration>private var pending: Int<\/Declaration><CommentParts><Abstract><Para>Number of enqueued requests, used to track if it is safe to delete the provider.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 66,
                "key.doc.name" : "pending",
                "key.doc.type" : "Other",
                "key.doclength" : 85,
                "key.docoffset" : 2627,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pending<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 20,
                "key.name" : "pending",
                "key.namelength" : 7,
                "key.nameoffset" : 2732,
                "key.offset" : 2728,
                "key.parsed_declaration" : "private var pending: Int = 0",
                "key.parsed_scope.end" : 66,
                "key.parsed_scope.start" : 66,
                "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7pending33_34D8574D1E5011EACA9F66FF5E6B676CLLSivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(maximumConcurrentConnections: <Type usr=\"s:Si\">Int<\/Type> = 8, eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>)<\/Declaration>",
                "key.bodylength" : 125,
                "key.bodyoffset" : 2825,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>maximumConcurrentConnections<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 8<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 193,
                "key.name" : "init(maximumConcurrentConnections:eventLoop:)",
                "key.namelength" : 65,
                "key.nameoffset" : 2758,
                "key.offset" : 2758,
                "key.parsed_declaration" : "init(maximumConcurrentConnections: Int = 8, eventLoop: EventLoop)",
                "key.parsed_scope.end" : 71,
                "key.parsed_scope.start" : 68,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.Type) -> (Int, EventLoop) -> HTTP1ConnectionProvider.ConnectionsState<ConnectionType>",
                "key.typeusr" : "$s28maximumConcurrentConnections9eventLoop15AsyncHTTPClient23HTTP1ConnectionProviderC0C5StateVy_xGSi_3NIO05EventE0_ptcD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV017maximumConcurrentF09eventLoopAEy_xGSi_3NIO05EventK0_ptcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func testsOnly_getInternalState() -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV\">Snapshot<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.bodylength" : 247,
                "key.bodyoffset" : 3024,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>testsOnly_getInternalState<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotV\">Snapshot<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 311,
                "key.name" : "testsOnly_getInternalState()",
                "key.namelength" : 28,
                "key.nameoffset" : 2966,
                "key.offset" : 2961,
                "key.parsed_declaration" : "func testsOnly_getInternalState() -> Snapshot<ConnectionType>",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 73,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> () -> HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.Snapshot<ConnectionType>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV8SnapshotVy_x_xGycD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV021testsOnly_getInternalG0AE8SnapshotVy_x_xGyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func assertInvariants()<\/Declaration>",
                "key.bodylength" : 246,
                "key.bodyoffset" : 3307,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>assertInvariants<\/decl.name>()<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 272,
                "key.name" : "assertInvariants()",
                "key.namelength" : 18,
                "key.nameoffset" : 3287,
                "key.offset" : 3282,
                "key.parsed_declaration" : "func assertInvariants()",
                "key.parsed_scope.end" : 83,
                "key.parsed_scope.start" : 77,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV16assertInvariantsyyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func enqueue() -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 3564
                  }
                ],
                "key.bodylength" : 198,
                "key.bodyoffset" : 3597,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>enqueue<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 223,
                "key.name" : "enqueue()",
                "key.namelength" : 9,
                "key.nameoffset" : 3578,
                "key.offset" : 3573,
                "key.parsed_declaration" : "mutating func enqueue() -> Bool",
                "key.parsed_scope.end" : 93,
                "key.parsed_scope.start" : 85,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> () -> Bool",
                "key.typeusr" : "$sSbycD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7enqueueSbyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var hasCapacity: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 3806
                  }
                ],
                "key.bodylength" : 92,
                "key.bodyoffset" : 3837,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hasCapacity<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 116,
                "key.name" : "hasCapacity",
                "key.namelength" : 11,
                "key.nameoffset" : 3818,
                "key.offset" : 3814,
                "key.parsed_declaration" : "private var hasCapacity: Bool",
                "key.parsed_scope.end" : 97,
                "key.parsed_scope.start" : 95,
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV11hasCapacity33_34D8574D1E5011EACA9F66FF5E6B676CLLSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private var isEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 3940
                  }
                ],
                "key.bodylength" : 82,
                "key.bodyoffset" : 3967,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 102,
                "key.name" : "isEmpty",
                "key.namelength" : 7,
                "key.nameoffset" : 3952,
                "key.offset" : 3948,
                "key.parsed_declaration" : "private var isEmpty: Bool",
                "key.parsed_scope.end" : 101,
                "key.parsed_scope.start" : 99,
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7isEmpty33_34D8574D1E5011EACA9F66FF5E6B676CLLSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func acquire(waiter: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;) -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 4060
                  }
                ],
                "key.bodylength" : 1835,
                "key.bodyoffset" : 4141,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>acquire<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>waiter<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 1908,
                "key.name" : "acquire(waiter:)",
                "key.namelength" : 39,
                "key.nameoffset" : 4074,
                "key.offset" : 4069,
                "key.parsed_declaration" : "mutating func acquire(waiter: Waiter<ConnectionType>) -> Action<ConnectionType>",
                "key.parsed_scope.end" : 143,
                "key.parsed_scope.start" : 103,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> (HTTP1ConnectionProvider.Waiter<ConnectionType>) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                "key.typeusr" : "$s6waiter15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGAD6WaiterVy_xG_tcD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7acquire6waiterAC6ActionOy_xGAC6WaiterVy_xG_tF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func release(connection: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>, closing: <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 5987
                  }
                ],
                "key.bodylength" : 2525,
                "key.bodyoffset" : 6079,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>release<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>closing<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 2609,
                "key.name" : "release(connection:closing:)",
                "key.namelength" : 50,
                "key.nameoffset" : 6001,
                "key.offset" : 5996,
                "key.parsed_declaration" : "mutating func release(connection: ConnectionType, closing: Bool) -> Action<ConnectionType>",
                "key.parsed_scope.end" : 187,
                "key.parsed_scope.start" : 145,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> (ConnectionType, Bool) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                "key.typeusr" : "$s10connection7closing15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_SbtcD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7release10connection7closingAC6ActionOy_xGx_SbtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func offer(connection: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 8615
                  }
                ],
                "key.bodylength" : 413,
                "key.bodyoffset" : 8690,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>offer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 480,
                "key.name" : "offer(connection:)",
                "key.namelength" : 33,
                "key.nameoffset" : 8629,
                "key.offset" : 8624,
                "key.parsed_declaration" : "mutating func offer(connection: ConnectionType) -> Action<ConnectionType>",
                "key.parsed_scope.end" : 198,
                "key.parsed_scope.start" : 189,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> (ConnectionType) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                "key.typeusr" : "$s10connection15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_tcD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV5offer10connectionAC6ActionOy_xGx_tF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func connectFailed() -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 9114
                  }
                ],
                "key.bodylength" : 819,
                "key.bodyoffset" : 9171,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>connectFailed<\/decl.name>() -&gt; <decl.function.returntype><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 868,
                "key.name" : "connectFailed()",
                "key.namelength" : 15,
                "key.nameoffset" : 9128,
                "key.offset" : 9123,
                "key.parsed_declaration" : "mutating func connectFailed() -> Action<ConnectionType>",
                "key.parsed_scope.end" : 214,
                "key.parsed_scope.start" : 200,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> () -> HTTP1ConnectionProvider.Action<ConnectionType>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGycD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV13connectFailedAC6ActionOy_xGyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func remoteClosed(connection: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 10001
                  }
                ],
                "key.bodylength" : 880,
                "key.bodyoffset" : 10083,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remoteClosed<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 954,
                "key.name" : "remoteClosed(connection:)",
                "key.namelength" : 40,
                "key.nameoffset" : 10015,
                "key.offset" : 10010,
                "key.parsed_declaration" : "mutating func remoteClosed(connection: ConnectionType) -> Action<ConnectionType>",
                "key.parsed_scope.end" : 235,
                "key.parsed_scope.start" : 216,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> (ConnectionType) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                "key.typeusr" : "$s10connection15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_tcD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV12remoteClosed10connectionAC6ActionOy_xGx_tF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func timeout(connection: <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 10974
                  }
                ],
                "key.bodylength" : 1196,
                "key.bodyoffset" : 11051,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>timeout<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>connection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 1265,
                "key.name" : "timeout(connection:)",
                "key.namelength" : 35,
                "key.nameoffset" : 10988,
                "key.offset" : 10983,
                "key.parsed_declaration" : "mutating func timeout(connection: ConnectionType) -> Action<ConnectionType>",
                "key.parsed_scope.end" : 260,
                "key.parsed_scope.start" : 237,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> (ConnectionType) -> HTTP1ConnectionProvider.Action<ConnectionType>",
                "key.typeusr" : "$s10connection15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGx_tcD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV7timeout10connectionAC6ActionOy_xGx_tF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func processNextWaiter() -&gt; <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 12258
                  }
                ],
                "key.bodylength" : 1697,
                "key.bodyoffset" : 12319,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>processNextWaiter<\/decl.name>() -&gt; <decl.function.returntype><ref.enum usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionO\">Action<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 1750,
                "key.name" : "processNextWaiter()",
                "key.namelength" : 19,
                "key.nameoffset" : 12272,
                "key.offset" : 12267,
                "key.parsed_declaration" : "mutating func processNextWaiter() -> Action<ConnectionType>",
                "key.parsed_scope.end" : 293,
                "key.parsed_scope.start" : 262,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> () -> HTTP1ConnectionProvider.Action<ConnectionType>",
                "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6ActionOy_xGycD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV17processNextWaiterAC6ActionOy_xGyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>mutating func close() -&gt; (<Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;&gt;, <Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;, <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/Type>&gt;&gt;, <Type usr=\"s:Sb\">Bool<\/Type>)?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.mutating",
                    "key.length" : 8,
                    "key.offset" : 14027
                  }
                ],
                "key.bodylength" : 527,
                "key.bodyoffset" : 14169,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>close<\/decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.struct usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV\">Waiter<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;&gt;<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.struct usr=\"s:15AsyncHTTPClient13ConnectionKeyV\">ConnectionKey<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV0D4Typexmfp\">ConnectionType<\/ref.generic_type_param>&gt;&gt;<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 661,
                "key.name" : "close()",
                "key.namelength" : 7,
                "key.nameoffset" : 14041,
                "key.offset" : 14036,
                "key.parsed_declaration" : "mutating func close() -> (CircularBuffer<Waiter<ConnectionType>>, CircularBuffer<ConnectionType>, Set<ConnectionKey<ConnectionType>>, Bool)?",
                "key.parsed_scope.end" : 312,
                "key.parsed_scope.start" : 295,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (inout HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> () -> (CircularBuffer<HTTP1ConnectionProvider.Waiter<ConnectionType>>, CircularBuffer<ConnectionType>, Set<ConnectionKey<ConnectionType>>, Bool)?",
                "key.typeusr" : "$s3NIO14CircularBufferVy15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterVy_xGG_ACyxGShyAD0G3KeyVyxGGSbtSgycD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV5close3NIO14CircularBufferVyAC6WaiterVy_xGG_AIyxGShyAA0D3KeyVyxGGSbtSgyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private func resolvePreference(_ preference: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>) -&gt; (<Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, <Type usr=\"s:Sb\">Bool<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 14707
                  }
                ],
                "key.bodylength" : 323,
                "key.bodyoffset" : 14806,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionsState.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>resolvePreference<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>preference<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 415,
                "key.name" : "resolvePreference(_:)",
                "key.namelength" : 63,
                "key.nameoffset" : 14720,
                "key.offset" : 14715,
                "key.parsed_declaration" : "private func resolvePreference(_ preference: HTTPClient.EventLoopPreference) -> (EventLoop, Bool)",
                "key.parsed_scope.end" : 323,
                "key.parsed_scope.start" : 314,
                "key.substructure" : [

                ],
                "key.typename" : "<ConnectionType where ConnectionType : PoolManageableConnection> (HTTP1ConnectionProvider.ConnectionsState<ConnectionType>) -> (HTTPClient.EventLoopPreference) -> (EventLoop, Bool)",
                "key.typeusr" : "$sy3NIO9EventLoop_p_Sbt15AsyncHTTPClient0E0C0bC10PreferenceVcD",
                "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV17resolvePreference33_34D8574D1E5011EACA9F66FF5E6B676CLLy3NIO9EventLoop_p_SbtAA0B0C0stI0VF"
              }
            ],
            "key.typename" : "HTTP1ConnectionProvider.ConnectionsState<ConnectionType>.Type",
            "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateVy_xGmD",
            "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC16ConnectionsStateV"
          }
        ],
        "key.typename" : "HTTP1ConnectionProvider.Type",
        "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderCmD",
        "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4682,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class FileDownloadDelegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 650
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 643
          }
        ],
        "key.bodylength" : 3968,
        "key.bodyoffset" : 712,
        "key.doc.column" : 20,
        "key.doc.comment" : "Handles a streaming download to a given file path, allowing headers and progress to be reported.",
        "key.doc.declaration" : "public final class FileDownloadDelegate : HTTPClientResponseDelegate",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift\" line=\"19\" column=\"20\"><Name>FileDownloadDelegate<\/Name><USR>s:15AsyncHTTPClient20FileDownloadDelegateC<\/USR><Declaration>public final class FileDownloadDelegate : HTTPClientResponseDelegate<\/Declaration><CommentParts><Abstract><Para>Handles a streaming download to a given file path, allowing headers and progress to be reported.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 19,
        "key.doc.name" : "FileDownloadDelegate",
        "key.doc.type" : "Class",
        "key.doclength" : 101,
        "key.docoffset" : 542,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 26,
            "key.offset" : 684
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FileDownloadDelegate<\/decl.name> : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPClientResponseDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 4025,
        "key.name" : "FileDownloadDelegate",
        "key.namelength" : 20,
        "key.nameoffset" : 662,
        "key.offset" : 656,
        "key.parsed_declaration" : "public final class FileDownloadDelegate: HTTPClientResponseDelegate",
        "key.parsed_scope.end" : 129,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC\">FileDownloadDelegate<\/Type>.Progress<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 897
              }
            ],
            "key.bodylength" : 79,
            "key.bodyoffset" : 921,
            "key.doc.column" : 19,
            "key.doc.comment" : "The response type for this delegate: the total count of bytes as reported by the response\n\"Content-Length\" header (if available) and the count of bytes downloaded.",
            "key.doc.declaration" : "public struct AsyncHTTPClient.FileDownloadDelegate.Progress",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift\" line=\"22\" column=\"19\"><Name>Progress<\/Name><USR>s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV<\/USR><Declaration>public struct AsyncHTTPClient.FileDownloadDelegate.Progress<\/Declaration><CommentParts><Abstract><Para>The response type for this delegate: the total count of bytes as reported by the response “Content-Length” header (if available) and the count of bytes downloaded.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 22,
            "key.doc.name" : "Progress",
            "key.doc.type" : "Class",
            "key.doclength" : 176,
            "key.docoffset" : 717,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC\">FileDownloadDelegate<\/ref.class>.<decl.name>Progress<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 97,
            "key.name" : "Progress",
            "key.namelength" : 8,
            "key.nameoffset" : 911,
            "key.offset" : 904,
            "key.parsed_declaration" : "public struct Progress",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 22,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var totalBytes: <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 930
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>totalBytes<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 20,
                "key.name" : "totalBytes",
                "key.namelength" : 10,
                "key.nameoffset" : 941,
                "key.offset" : 937,
                "key.parsed_declaration" : "public var totalBytes: Int?",
                "key.parsed_scope.end" : 23,
                "key.parsed_scope.start" : 23,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Int?",
                "key.typeusr" : "$sSiSgD",
                "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV10totalBytesSiSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var receivedBytes: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 966
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>receivedBytes<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 22,
                "key.name" : "receivedBytes",
                "key.namelength" : 13,
                "key.nameoffset" : 977,
                "key.offset" : 973,
                "key.parsed_declaration" : "public var receivedBytes: Int",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV13receivedBytesSivp"
              }
            ],
            "key.typename" : "FileDownloadDelegate.Progress.Type",
            "key.typeusr" : "$s15AsyncHTTPClient20FileDownloadDelegateC8ProgressVmD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var progress: <Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC\">FileDownloadDelegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1007
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>progress<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC\">FileDownloadDelegate<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 58,
            "key.name" : "progress",
            "key.namelength" : 8,
            "key.nameoffset" : 1019,
            "key.offset" : 1015,
            "key.parsed_declaration" : "private var progress = Progress(totalBytes: nil, receivedBytes: 0)",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 27,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "FileDownloadDelegate.Progress",
            "key.typeusr" : "$s15AsyncHTTPClient20FileDownloadDelegateC8ProgressVD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC8progress33_4A14E642184B087F6F5A429C70B83784LLAC8ProgressVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias <Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC\">FileDownloadDelegate<\/Type>.Response = <Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1079
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC\">FileDownloadDelegate<\/ref.class>.<decl.name>Response<\/decl.name> = <ref.struct usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 29,
            "key.name" : "Response",
            "key.namelength" : 8,
            "key.nameoffset" : 1096,
            "key.offset" : 1086,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa"
              }
            ],
            "key.parsed_declaration" : "public typealias Response = Progress",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.typename" : "FileDownloadDelegate.Progress.Type",
            "key.typeusr" : "$s15AsyncHTTPClient20FileDownloadDelegateC8ProgressVmD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let filePath: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1121
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>filePath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "filePath",
            "key.namelength" : 8,
            "key.nameoffset" : 1133,
            "key.offset" : 1129,
            "key.parsed_declaration" : "private let filePath: String",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 31,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC8filePath33_4A14E642184B087F6F5A429C70B83784LLSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let io: <Type usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1154
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>io<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.name" : "io",
            "key.namelength" : 2,
            "key.nameoffset" : 1166,
            "key.offset" : 1162,
            "key.parsed_declaration" : "private let io: NonBlockingFileIO",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 32,
            "key.typename" : "NonBlockingFileIO",
            "key.typeusr" : "$s3NIO17NonBlockingFileIOVD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC2io33_4A14E642184B087F6F5A429C70B83784LL3NIO011NonBlockingC2IOVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let reportHead: ((<Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1192
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>reportHead<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 45,
            "key.name" : "reportHead",
            "key.namelength" : 10,
            "key.nameoffset" : 1204,
            "key.offset" : 1200,
            "key.parsed_declaration" : "private let reportHead: ((HTTPResponseHead) -> Void)?",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 33,
            "key.typename" : "((HTTPResponseHead) -> ())?",
            "key.typeusr" : "$sy8NIOHTTP116HTTPResponseHeadVcSgD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC10reportHead33_4A14E642184B087F6F5A429C70B83784LLy8NIOHTTP1012HTTPResponseG0VcSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let reportProgress: ((<Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1250
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>reportProgress<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 41,
            "key.name" : "reportProgress",
            "key.namelength" : 14,
            "key.nameoffset" : 1262,
            "key.offset" : 1258,
            "key.parsed_declaration" : "private let reportProgress: ((Progress) -> Void)?",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 34,
            "key.typename" : "((FileDownloadDelegate.Progress) -> ())?",
            "key.typeusr" : "$sy15AsyncHTTPClient20FileDownloadDelegateC8ProgressVcSgD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC14reportProgress33_4A14E642184B087F6F5A429C70B83784LLyAC0G0VcSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var fileHandleFuture: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:3NIO13NIOFileHandleC\">NIOFileHandle<\/Type>&gt;?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1305
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fileHandleFuture<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.class usr=\"s:3NIO13NIOFileHandleC\">NIOFileHandle<\/ref.class>&gt;?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.name" : "fileHandleFuture",
            "key.namelength" : 16,
            "key.nameoffset" : 1317,
            "key.offset" : 1313,
            "key.parsed_declaration" : "private var fileHandleFuture: EventLoopFuture<NIOFileHandle>?",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 36,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "EventLoopFuture<NIOFileHandle>?",
            "key.typeusr" : "$s3NIO15EventLoopFutureCyAA13NIOFileHandleCGSgD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC16fileHandleFuture33_4A14E642184B087F6F5A429C70B83784LL3NIO09EventLoopH0CyAF07NIOFileG0CGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var writeFuture: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1371
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>writeFuture<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 39,
            "key.name" : "writeFuture",
            "key.namelength" : 11,
            "key.nameoffset" : 1383,
            "key.offset" : 1379,
            "key.parsed_declaration" : "private var writeFuture: EventLoopFuture<Void>?",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 37,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "EventLoopFuture<()>?",
            "key.typeusr" : "$s3NIO15EventLoopFutureCyytGSgD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC11writeFuture33_4A14E642184B087F6F5A429C70B83784LL3NIO09EventLoopG0CyytGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(path: <Type usr=\"s:SS\">String<\/Type>, pool: <Type usr=\"s:3NIO13NIOThreadPoolC\">NIOThreadPool<\/Type> = NIOThreadPool(numberOfThreads: 1), reportHead: ((<Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)? = nil, reportProgress: ((<Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)? = nil) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2058
              }
            ],
            "key.bodylength" : 192,
            "key.bodyoffset" : 2281,
            "key.doc.column" : 12,
            "key.doc.comment" : "Initializes a new file download delegate.\n- parameters:\n    - path: Path to a file you'd like to write the download to.\n    - pool: A thread pool to use for asynchronous file I\/O.\n    - reportHead: A closure called when the response head is available.\n    - reportProgress: A closure called when a body chunk has been downloaded, with\n      the total byte count and download byte count passed to it as arguments. The callbacks\n      will be invoked in the same threading context that the delegate itself is invoked,\n      as controlled by `EventLoopPreference`.",
            "key.doc.declaration" : "public init(path: String, pool: NIOThreadPool = NIOThreadPool(numberOfThreads: 1), reportHead: ((HTTPResponseHead) -> Void)? = nil, reportProgress: ((Progress) -> Void)? = nil) throws",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift\" line=\"48\" column=\"12\"><Name>init(path:pool:reportHead:reportProgress:)<\/Name><USR>s:15AsyncHTTPClient20FileDownloadDelegateC4path4pool10reportHead0H8ProgressACSS_3NIO13NIOThreadPoolCy8NIOHTTP1012HTTPResponseI0VcSgyAC0J0VcSgtKcfc<\/USR><Declaration>public init(path: String, pool: NIOThreadPool = NIOThreadPool(numberOfThreads: 1), reportHead: ((HTTPResponseHead) -&gt; Void)? = nil, reportProgress: ((Progress) -&gt; Void)? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Initializes a new file download delegate.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to a file you’d like to write the download to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>pool<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A thread pool to use for asynchronous file I\/O.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reportHead<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A closure called when the response head is available.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reportProgress<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A closure called when a body chunk has been downloaded, with the total byte count and download byte count passed to it as arguments. The callbacks will be invoked in the same threading context that the delegate itself is invoked, as controlled by <codeVoice>EventLoopPreference<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 48,
            "key.doc.name" : "init(path:pool:reportHead:reportProgress:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to a file you’d like to write the download to."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "A thread pool to use for asynchronous file I\/O."
                  }
                ],
                "name" : "pool"
              },
              {
                "discussion" : [
                  {
                    "Para" : "A closure called when the response head is available."
                  }
                ],
                "name" : "reportHead"
              },
              {
                "discussion" : [
                  {
                    "Para" : "A closure called when a body chunk has been downloaded, with the total byte count and download byte count passed to it as arguments. The callbacks will be invoked in the same threading context that the delegate itself is invoked, as controlled by `EventLoopPreference`."
                  }
                ],
                "name" : "reportProgress"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 630,
            "key.docoffset" : 1424,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>path<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>pool<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO13NIOThreadPoolC\">NIOThreadPool<\/ref.class><\/decl.var.parameter.type> = NIOThreadPool(numberOfThreads: 1)<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reportHead<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reportProgress<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 409,
            "key.name" : "init(path:pool:reportHead:reportProgress:)",
            "key.namelength" : 207,
            "key.nameoffset" : 2065,
            "key.offset" : 2065,
            "key.parsed_declaration" : "public init(\n    path: String,\n    pool: NIOThreadPool = NIOThreadPool(numberOfThreads: 1),\n    reportHead: ((HTTPResponseHead) -> Void)? = nil,\n    reportProgress: ((Progress) -> Void)? = nil\n) throws",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 48,
            "key.substructure" : [

            ],
            "key.typename" : "(FileDownloadDelegate.Type) -> (String, NIOThreadPool, ((HTTPResponseHead) -> ())?, ((FileDownloadDelegate.Progress) -> ())?) throws -> FileDownloadDelegate",
            "key.typeusr" : "$s4path4pool10reportHead0C8Progress15AsyncHTTPClient20FileDownloadDelegateCSS_3NIO13NIOThreadPoolCy8NIOHTTP1012HTTPResponseD0VcSgyAG0E0VcSgtKcD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC4path4pool10reportHead0H8ProgressACSS_3NIO13NIOThreadPoolCy8NIOHTTP1012HTTPResponseI0VcSgyAC0J0VcSgtKcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveHead(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/Type>&gt;, _ head: <Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2480
              }
            ],
            "key.bodylength" : 283,
            "key.bodyoffset" : 2614,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveHead(task: HTTPClient.Task<Response>, _ head: HTTPResponseHead) -> EventLoopFuture<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"455\" column=\"10\"><Name>didReceiveHead(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF<\/USR><Declaration>func didReceiveHead(task: HTTPClient.Task&lt;Response&gt;, _ head: HTTPResponseHead) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when response head is received. Will be called once. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>head<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received reposonse head.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 455,
            "key.doc.name" : "didReceiveHead(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received reposonse head."
                  }
                ],
                "name" : "head"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveHead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>head<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 411,
            "key.name" : "didReceiveHead(task:_:)",
            "key.namelength" : 95,
            "key.nameoffset" : 2492,
            "key.offset" : 2487,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF"
              }
            ],
            "key.parsed_declaration" : "public func didReceiveHead(\n    task: HTTPClient.Task<Response>,\n    _ head: HTTPResponseHead\n) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 62,
            "key.substructure" : [

            ],
            "key.typename" : "(FileDownloadDelegate) -> (HTTPClient.Task<FileDownloadDelegate.Progress>, HTTPResponseHead) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_AF20FileDownloadDelegateC8ProgressVG_8NIOHTTP116HTTPResponseHeadVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveBodyPart(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/Type>&gt;, _ buffer: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2904
              }
            ],
            "key.bodylength" : 895,
            "key.bodyoffset" : 3038,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveBodyPart(task: HTTPClient.Task<Response>, _ buffer: ByteBuffer) -> EventLoopFuture<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"465\" column=\"10\"><Name>didReceiveBodyPart(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF<\/USR><Declaration>func didReceiveBodyPart(task: HTTPClient.Task&lt;Response&gt;, _ buffer: ByteBuffer) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when part of a response body is received. Could be called zero or more times. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>buffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received body <codeVoice>Part<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 465,
            "key.doc.name" : "didReceiveBodyPart(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received body `Part`."
                  }
                ],
                "name" : "buffer"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveBodyPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>buffer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1023,
            "key.name" : "didReceiveBodyPart(task:_:)",
            "key.namelength" : 95,
            "key.nameoffset" : 2916,
            "key.offset" : 2911,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
              }
            ],
            "key.parsed_declaration" : "public func didReceiveBodyPart(\n    task: HTTPClient.Task<Response>,\n    _ buffer: ByteBuffer\n) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 76,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let writeFuture: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>writeFuture<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.name" : "writeFuture",
                "key.namelength" : 11,
                "key.nameoffset" : 3156,
                "key.offset" : 3152,
                "key.parsed_declaration" : "let writeFuture: EventLoopFuture<Void>",
                "key.parsed_scope.end" : 83,
                "key.parsed_scope.start" : 83,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC11writeFuture33_4A14E642184B087F6F5A429C70B83784LL3NIO09EventLoopG0CyytGSgvp\">writeFuture<\/RelatedName>"
                  }
                ],
                "key.typename" : "EventLoopFuture<()>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCyytGD",
                "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_AC8ProgressVG_AF10ByteBufferVtF05writeN0L_AIvp"
              }
            ],
            "key.typename" : "(FileDownloadDelegate) -> (HTTPClient.Task<FileDownloadDelegate.Progress>, ByteBuffer) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_AF20FileDownloadDelegateC8ProgressVG_AB10ByteBufferVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func close(fileHandle: <Type usr=\"s:3NIO13NIOFileHandleC\">NIOFileHandle<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3940
              }
            ],
            "key.bodylength" : 73,
            "key.bodyoffset" : 3987,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>close<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>fileHandle<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO13NIOFileHandleC\">NIOFileHandle<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 113,
            "key.name" : "close(fileHandle:)",
            "key.namelength" : 32,
            "key.nameoffset" : 3953,
            "key.offset" : 3948,
            "key.parsed_declaration" : "private func close(fileHandle: NIOFileHandle)",
            "key.parsed_scope.end" : 108,
            "key.parsed_scope.start" : 105,
            "key.substructure" : [

            ],
            "key.typename" : "(FileDownloadDelegate) -> (NIOFileHandle) -> ()",
            "key.typeusr" : "$s10fileHandley3NIO07NIOFileB0C_tcD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC5close33_4A14E642184B087F6F5A429C70B83784LL10fileHandley3NIO07NIOFileP0C_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func finalize()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 4067
              }
            ],
            "key.bodylength" : 325,
            "key.bodyoffset" : 4092,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>finalize<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 343,
            "key.name" : "finalize()",
            "key.namelength" : 10,
            "key.nameoffset" : 4080,
            "key.offset" : 4075,
            "key.parsed_declaration" : "private func finalize()",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 110,
            "key.substructure" : [

            ],
            "key.typename" : "(FileDownloadDelegate) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC8finalize33_4A14E642184B087F6F5A429C70B83784LLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveError(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/Type>&gt;, _ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4424
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 4502,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveError(task: HTTPClient.Task<Response>, _ error: Error)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"472\" column=\"10\"><Name>didReceiveError(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF<\/USR><Declaration>func didReceiveError(task: HTTPClient.Task&lt;Response&gt;, _ error: Error)<\/Declaration><CommentParts><Abstract><Para>Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Error that occured during response processing.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 472,
            "key.doc.name" : "didReceiveError(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Error that occured during response processing."
                  }
                ],
                "name" : "error"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveError<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8ProgressV\">Progress<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 101,
            "key.name" : "didReceiveError(task:_:)",
            "key.namelength" : 64,
            "key.nameoffset" : 4436,
            "key.offset" : 4431,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF"
              }
            ],
            "key.parsed_declaration" : "public func didReceiveError(task: HTTPClient.Task<Progress>, _ error: Error)",
            "key.parsed_scope.end" : 123,
            "key.parsed_scope.start" : 121,
            "key.substructure" : [

            ],
            "key.typename" : "(FileDownloadDelegate) -> (HTTPClient.Task<FileDownloadDelegate.Progress>, Error) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_AB20FileDownloadDelegateC8ProgressVG_s5Error_ptcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didFinishRequest(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/Type>&gt;) throws -&gt; <Type usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4538
              }
            ],
            "key.bodylength" : 58,
            "key.bodyoffset" : 4620,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didFinishRequest(task: HTTPClient.Task<Response>) throws -> Response",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"479\" column=\"10\"><Name>didFinishRequest(task:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF<\/USR><Declaration>func didFinishRequest(task: HTTPClient.Task&lt;Response&gt;) throws -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Called when the complete HTTP request is finished. You must return an instance of your <codeVoice>Response<\/codeVoice> associated type. Will be called once, except if an error occurred.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Result of processing.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 479,
            "key.doc.name" : "didFinishRequest(task:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Result of processing."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/FileDownloadDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didFinishRequest<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:15AsyncHTTPClient20FileDownloadDelegateC8Responsea\">Response<\/ref.typealias><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 134,
            "key.name" : "didFinishRequest(task:)",
            "key.namelength" : 49,
            "key.nameoffset" : 4550,
            "key.offset" : 4545,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF"
              }
            ],
            "key.parsed_declaration" : "public func didFinishRequest(task: HTTPClient.Task<Response>) throws -> Response",
            "key.parsed_scope.end" : 128,
            "key.parsed_scope.start" : 125,
            "key.substructure" : [

            ],
            "key.typename" : "(FileDownloadDelegate) -> (HTTPClient.Task<FileDownloadDelegate.Progress>) throws -> FileDownloadDelegate.Progress",
            "key.typeusr" : "$s4task15AsyncHTTPClient20FileDownloadDelegateC8ProgressVAB0C0C4TaskCy_AFG_tKcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF"
          }
        ],
        "key.typename" : "FileDownloadDelegate.Type",
        "key.typeusr" : "$s15AsyncHTTPClient20FileDownloadDelegateCmD",
        "key.usr" : "s:15AsyncHTTPClient20FileDownloadDelegateC"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6101,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public class HTTPClient<\/Declaration>",
        "key.bodylength" : 5270,
        "key.bodyoffset" : 576,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class HTTPClient",
        "key.doc.discussion" : [
          {
            "Para" : "Example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO `EventLoopGroup`:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"65\" column=\"14\"><Name>HTTPClient<\/Name><USR>s:15AsyncHTTPClient0B0C<\/USR><Declaration>public class HTTPClient<\/Declaration><CommentParts><Abstract><Para>HTTPClient class provides API for request execution.<\/Para><\/Abstract><Discussion><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    let client = HTTPClient(eventLoopGroupProvider: .createNew)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    client.get(url: \"https:\/\/swift.org\", deadline: .now() + .seconds(1)).whenComplete { result in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        switch result {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .failure(let error):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ process error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .success(let response):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            if let response.status == .ok {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle response]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle remote error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO <codeVoice>EventLoopGroup<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    try client.syncShutdown()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 65,
        "key.doc.name" : "HTTPClient",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTPClient<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 5293,
        "key.name" : "HTTPClient",
        "key.namelength" : 10,
        "key.nameoffset" : 564,
        "key.offset" : 554,
        "key.parsed_declaration" : "extension HTTPClient",
        "key.parsed_scope.end" : 154,
        "key.parsed_scope.start" : 18,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Cookie<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 625
              }
            ],
            "key.bodylength" : 5197,
            "key.bodyoffset" : 647,
            "key.doc.column" : 19,
            "key.doc.comment" : "A representation of an HTTP cookie.",
            "key.doc.declaration" : "public struct Cookie",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"20\" column=\"19\"><Name>Cookie<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV<\/USR><Declaration>public struct Cookie<\/Declaration><CommentParts><Abstract><Para>A representation of an HTTP cookie.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 20,
            "key.doc.name" : "Cookie",
            "key.doc.type" : "Class",
            "key.doclength" : 40,
            "key.docoffset" : 581,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Cookie<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 5213,
            "key.name" : "Cookie",
            "key.namelength" : 6,
            "key.nameoffset" : 639,
            "key.offset" : 632,
            "key.parsed_declaration" : "public struct Cookie",
            "key.parsed_scope.end" : 153,
            "key.parsed_scope.start" : 20,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var name: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 692
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The name of the cookie.",
                "key.doc.declaration" : "public var name: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"22\" column=\"20\"><Name>name<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV4nameSSvp<\/USR><Declaration>public var name: String<\/Declaration><CommentParts><Abstract><Para>The name of the cookie.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 22,
                "key.doc.name" : "name",
                "key.doc.type" : "Other",
                "key.doclength" : 28,
                "key.docoffset" : 656,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>name<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "name",
                "key.namelength" : 4,
                "key.nameoffset" : 703,
                "key.offset" : 699,
                "key.parsed_declaration" : "public var name: String",
                "key.parsed_scope.end" : 22,
                "key.parsed_scope.start" : 22,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV4nameSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var value: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 763
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The cookie's string value.",
                "key.doc.declaration" : "public var value: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"24\" column=\"20\"><Name>value<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV5valueSSvp<\/USR><Declaration>public var value: String<\/Declaration><CommentParts><Abstract><Para>The cookie’s string value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 24,
                "key.doc.name" : "value",
                "key.doc.type" : "Other",
                "key.doclength" : 31,
                "key.docoffset" : 724,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 17,
                "key.name" : "value",
                "key.namelength" : 5,
                "key.nameoffset" : 774,
                "key.offset" : 770,
                "key.parsed_declaration" : "public var value: String",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV5valueSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var path: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 827
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The cookie's path.",
                "key.doc.declaration" : "public var path: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"26\" column=\"20\"><Name>path<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV4pathSSvp<\/USR><Declaration>public var path: String<\/Declaration><CommentParts><Abstract><Para>The cookie’s path.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 26,
                "key.doc.name" : "path",
                "key.doc.type" : "Other",
                "key.doclength" : 23,
                "key.docoffset" : 796,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 838,
                "key.offset" : 834,
                "key.parsed_declaration" : "public var path: String",
                "key.parsed_scope.end" : 26,
                "key.parsed_scope.start" : 26,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV4pathSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var domain: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 897
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The domain of the cookie.",
                "key.doc.declaration" : "public var domain: String?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"28\" column=\"20\"><Name>domain<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV6domainSSSgvp<\/USR><Declaration>public var domain: String?<\/Declaration><CommentParts><Abstract><Para>The domain of the cookie.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 28,
                "key.doc.name" : "domain",
                "key.doc.type" : "Other",
                "key.doclength" : 30,
                "key.docoffset" : 859,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>domain<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 19,
                "key.name" : "domain",
                "key.namelength" : 6,
                "key.nameoffset" : 908,
                "key.offset" : 904,
                "key.parsed_declaration" : "public var domain: String?",
                "key.parsed_scope.end" : 28,
                "key.parsed_scope.start" : 28,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "String?",
                "key.typeusr" : "$sSSSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV6domainSSSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var expires: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 974
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The cookie's expiration date.",
                "key.doc.declaration" : "public var expires: Date?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"30\" column=\"20\"><Name>expires<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV7expires10Foundation4DateVSgvp<\/USR><Declaration>public var expires: Date?<\/Declaration><CommentParts><Abstract><Para>The cookie’s expiration date.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 30,
                "key.doc.name" : "expires",
                "key.doc.type" : "Other",
                "key.doclength" : 34,
                "key.docoffset" : 932,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>expires<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "expires",
                "key.namelength" : 7,
                "key.nameoffset" : 985,
                "key.offset" : 981,
                "key.parsed_declaration" : "public var expires: Date?",
                "key.parsed_scope.end" : 30,
                "key.parsed_scope.start" : 30,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Date?",
                "key.typeusr" : "$s10Foundation4DateVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV7expires10Foundation4DateVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var maxAge: <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1049
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The cookie's age in seconds.",
                "key.doc.declaration" : "public var maxAge: Int?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"32\" column=\"20\"><Name>maxAge<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV6maxAgeSiSgvp<\/USR><Declaration>public var maxAge: Int?<\/Declaration><CommentParts><Abstract><Para>The cookie’s age in seconds.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 32,
                "key.doc.name" : "maxAge",
                "key.doc.type" : "Other",
                "key.doclength" : 33,
                "key.docoffset" : 1008,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>maxAge<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "maxAge",
                "key.namelength" : 6,
                "key.nameoffset" : 1060,
                "key.offset" : 1056,
                "key.parsed_declaration" : "public var maxAge: Int?",
                "key.parsed_scope.end" : 32,
                "key.parsed_scope.start" : 32,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Int?",
                "key.typeusr" : "$sSiSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV6maxAgeSiSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var httpOnly: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1149
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Whether the cookie should only be sent to HTTP servers.",
                "key.doc.declaration" : "public var httpOnly: Bool",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"34\" column=\"20\"><Name>httpOnly<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV8httpOnlySbvp<\/USR><Declaration>public var httpOnly: Bool<\/Declaration><CommentParts><Abstract><Para>Whether the cookie should only be sent to HTTP servers.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 34,
                "key.doc.name" : "httpOnly",
                "key.doc.type" : "Other",
                "key.doclength" : 60,
                "key.docoffset" : 1081,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>httpOnly<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "httpOnly",
                "key.namelength" : 8,
                "key.nameoffset" : 1160,
                "key.offset" : 1156,
                "key.parsed_declaration" : "public var httpOnly: Bool",
                "key.parsed_scope.end" : 34,
                "key.parsed_scope.start" : 34,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV8httpOnlySbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var secure: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1256
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Whether the cookie should only be sent over secure channels.",
                "key.doc.declaration" : "public var secure: Bool",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"36\" column=\"20\"><Name>secure<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV6secureSbvp<\/USR><Declaration>public var secure: Bool<\/Declaration><CommentParts><Abstract><Para>Whether the cookie should only be sent over secure channels.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 36,
                "key.doc.name" : "secure",
                "key.doc.type" : "Other",
                "key.doclength" : 65,
                "key.docoffset" : 1183,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>secure<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "secure",
                "key.namelength" : 6,
                "key.nameoffset" : 1267,
                "key.offset" : 1263,
                "key.parsed_declaration" : "public var secure: Bool",
                "key.parsed_scope.end" : 36,
                "key.parsed_scope.start" : 36,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV6secureSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init?(header: <Type usr=\"s:SS\">String<\/Type>, defaultDomain: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1614
                  }
                ],
                "key.bodylength" : 2578,
                "key.bodyoffset" : 1667,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create a Cookie by parsing a `Set-Cookie` header.\n\n- parameters:\n    - header: String representation of the `Set-Cookie` response header.\n    - defaultDomain: Default domain to use if cookie was sent without one.\n- returns: nil if the header is invalid.",
                "key.doc.declaration" : "public init?(header: String, defaultDomain: String)",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"44\" column=\"16\"><Name>init(header:defaultDomain:)<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV6header13defaultDomainAESgSS_SStcfc<\/USR><Declaration>public init?(header: String, defaultDomain: String)<\/Declaration><CommentParts><Abstract><Para>Create a Cookie by parsing a <codeVoice>Set-Cookie<\/codeVoice> header.<\/Para><\/Abstract><Parameters><Parameter><Name>header<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>String representation of the <codeVoice>Set-Cookie<\/codeVoice> response header.<\/Para><\/Discussion><\/Parameter><Parameter><Name>defaultDomain<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Default domain to use if cookie was sent without one.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>nil if the header is invalid.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
                "key.doc.line" : 44,
                "key.doc.name" : "init(header:defaultDomain:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "String representation of the `Set-Cookie` response header."
                      }
                    ],
                    "name" : "header"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Default domain to use if cookie was sent without one."
                      }
                    ],
                    "name" : "defaultDomain"
                  }
                ],
                "key.doc.result_discussion" : [
                  {
                    "Para" : "nil if the header is invalid."
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 317,
                "key.docoffset" : 1289,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>header<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>defaultDomain<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 2625,
                "key.name" : "init(header:defaultDomain:)",
                "key.namelength" : 44,
                "key.nameoffset" : 1621,
                "key.offset" : 1621,
                "key.parsed_declaration" : "public init?(header: String, defaultDomain: String)",
                "key.parsed_scope.end" : 118,
                "key.parsed_scope.start" : 44,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C6CookieV4name5value4path6domain7expires6maxAge8httpOnly6secureAESS_S3SSg10Foundation4DateVSgSiSgS2btcfc\">init(name:value:path:domain:expires:maxAge:httpOnly:secure:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let components: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>components<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 128,
                    "key.name" : "components",
                    "key.namelength" : 10,
                    "key.nameoffset" : 1684,
                    "key.offset" : 1680,
                    "key.parsed_declaration" : "let components = header.components(separatedBy: \";\").map {\n    $0.trimmingCharacters(in: .whitespaces)\n}",
                    "key.parsed_scope.end" : 45,
                    "key.parsed_scope.start" : 45,
                    "key.typename" : "[String]",
                    "key.typeusr" : "$sSaySSGD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV6header13defaultDomainAESgSS_SStcfc10componentsL_SaySSGvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let nameAndValue: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>nameAndValue<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 178,
                    "key.name" : "nameAndValue",
                    "key.namelength" : 12,
                    "key.nameoffset" : 1904,
                    "key.offset" : 1900,
                    "key.parsed_declaration" : "let nameAndValue = components[0].split(separator: \"=\", maxSplits: 1, omittingEmptySubsequences: false).map {\n    $0.trimmingCharacters(in: .whitespaces)\n}",
                    "key.parsed_scope.end" : 53,
                    "key.parsed_scope.start" : 53,
                    "key.typename" : "[String]",
                    "key.typeusr" : "$sSaySSGD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV6header13defaultDomainAESgSS_SStcfc12nameAndValueL_SaySSGvp"
                  }
                ],
                "key.typename" : "(HTTPClient.Cookie.Type) -> (String, String) -> HTTPClient.Cookie?",
                "key.typeusr" : "$s6header13defaultDomain15AsyncHTTPClient0E0C6CookieVSgSS_SStcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV6header13defaultDomainAESgSS_SStcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(name: <Type usr=\"s:SS\">String<\/Type>, value: <Type usr=\"s:SS\">String<\/Type>, path: <Type usr=\"s:SS\">String<\/Type> = &quot;\/&quot;, domain: <Type usr=\"s:SS\">String<\/Type>? = nil, expires: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>? = nil, maxAge: <Type usr=\"s:Si\">Int<\/Type>? = nil, httpOnly: <Type usr=\"s:Sb\">Bool<\/Type> = false, secure: <Type usr=\"s:Sb\">Bool<\/Type> = false)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 4896
                  }
                ],
                "key.bodylength" : 269,
                "key.bodyoffset" : 5069,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create HTTP cookie.\n\n- parameters:\n    - name: The name of the cookie.\n    - value: The cookie's string value.\n    - path: The cookie's path.\n    - domain: The domain of the cookie, defaults to nil.\n    - expires: The cookie's expiration date, defaults to nil.\n    - maxAge: The cookie's age in seconds, defaults to nil.\n    - httpOnly: Whether this cookie should be used by HTTP servers only, defaults to false.\n    - secure: Whether this cookie should only be sent using secure channels, defaults to false.",
                "key.doc.declaration" : "public init(name: String, value: String, path: String = \"\/\", domain: String? = nil, expires: Date? = nil, maxAge: Int? = nil, httpOnly: Bool = false, secure: Bool = false)",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"131\" column=\"16\"><Name>init(name:value:path:domain:expires:maxAge:httpOnly:secure:)<\/Name><USR>s:15AsyncHTTPClient0B0C6CookieV4name5value4path6domain7expires6maxAge8httpOnly6secureAESS_S3SSg10Foundation4DateVSgSiSgS2btcfc<\/USR><Declaration>public init(name: String, value: String, path: String = &quot;\/&quot;, domain: String? = nil, expires: Date? = nil, maxAge: Int? = nil, httpOnly: Bool = false, secure: Bool = false)<\/Declaration><CommentParts><Abstract><Para>Create HTTP cookie.<\/Para><\/Abstract><Parameters><Parameter><Name>name<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The name of the cookie.<\/Para><\/Discussion><\/Parameter><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The cookie’s string value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The cookie’s path.<\/Para><\/Discussion><\/Parameter><Parameter><Name>domain<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The domain of the cookie, defaults to nil.<\/Para><\/Discussion><\/Parameter><Parameter><Name>expires<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The cookie’s expiration date, defaults to nil.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxAge<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The cookie’s age in seconds, defaults to nil.<\/Para><\/Discussion><\/Parameter><Parameter><Name>httpOnly<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether this cookie should be used by HTTP servers only, defaults to false.<\/Para><\/Discussion><\/Parameter><Parameter><Name>secure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether this cookie should only be sent using secure channels, defaults to false.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 131,
                "key.doc.name" : "init(name:value:path:domain:expires:maxAge:httpOnly:secure:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The name of the cookie."
                      }
                    ],
                    "name" : "name"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The cookie’s string value."
                      }
                    ],
                    "name" : "value"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The cookie’s path."
                      }
                    ],
                    "name" : "path"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The domain of the cookie, defaults to nil."
                      }
                    ],
                    "name" : "domain"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The cookie’s expiration date, defaults to nil."
                      }
                    ],
                    "name" : "expires"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The cookie’s age in seconds, defaults to nil."
                      }
                    ],
                    "name" : "maxAge"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether this cookie should be used by HTTP servers only, defaults to false."
                      }
                    ],
                    "name" : "httpOnly"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether this cookie should only be sent using secure channels, defaults to false."
                      }
                    ],
                    "name" : "secure"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 632,
                "key.docoffset" : 4256,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>path<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;\/&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>domain<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>expires<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxAge<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>httpOnly<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>secure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 436,
                "key.name" : "init(name:value:path:domain:expires:maxAge:httpOnly:secure:)",
                "key.namelength" : 164,
                "key.nameoffset" : 4903,
                "key.offset" : 4903,
                "key.parsed_declaration" : "public init(name: String, value: String, path: String = \"\/\", domain: String? = nil, expires: Date? = nil, maxAge: Int? = nil, httpOnly: Bool = false, secure: Bool = false)",
                "key.parsed_scope.end" : 140,
                "key.parsed_scope.start" : 131,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C6CookieV6header13defaultDomainAESgSS_SStcfc\">init(header:defaultDomain:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Cookie.Type) -> (String, String, String, String?, Date?, Int?, Bool, Bool) -> HTTPClient.Cookie",
                "key.typeusr" : "$s4name5value4path6domain7expires6maxAge8httpOnly6secure15AsyncHTTPClient0L0C6CookieVSS_S3SSg10Foundation4DateVSgSiSgS2btcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV4name5value4path6domain7expires6maxAge8httpOnly6secureAESS_S3SSg10Foundation4DateVSgSiSgS2btcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func parseComponent(_ component: <Type usr=\"s:SS\">String<\/Type>) -&gt; (<Type usr=\"s:SS\">String<\/Type>?, <Type usr=\"s:SS\">String<\/Type>?)<\/Declaration>",
                "key.bodylength" : 425,
                "key.bodyoffset" : 5413,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>parseComponent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>component<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 490,
                "key.name" : "parseComponent(_:)",
                "key.namelength" : 35,
                "key.nameoffset" : 5354,
                "key.offset" : 5349,
                "key.parsed_declaration" : "func parseComponent(_ component: String) -> (String?, String?)",
                "key.parsed_scope.end" : 152,
                "key.parsed_scope.start" : 142,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let nameAndValue: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>nameAndValue<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 140,
                    "key.name" : "nameAndValue",
                    "key.namelength" : 12,
                    "key.nameoffset" : 5430,
                    "key.offset" : 5426,
                    "key.parsed_declaration" : "let nameAndValue = component.split(separator: \"=\", maxSplits: 1).map {\n    $0.trimmingCharacters(in: .whitespaces)\n}",
                    "key.parsed_scope.end" : 143,
                    "key.parsed_scope.start" : 143,
                    "key.typename" : "[String]",
                    "key.typeusr" : "$sSaySSGD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV14parseComponentySSSg_AGtSSF12nameAndValueL_SaySSGvp"
                  }
                ],
                "key.typename" : "(HTTPClient.Cookie) -> (String) -> (String?, String?)",
                "key.typeusr" : "$sySSSg_AAtSScD",
                "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV14parseComponentySSSg_AGtSSF"
              }
            ],
            "key.typename" : "HTTPClient.Cookie.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C6CookieVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C6CookieV"
          }
        ],
        "key.typename" : "HTTPClient.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0CmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Response<\/Declaration>",
        "key.bodylength" : 219,
        "key.bodyoffset" : 5880,
        "key.doc.column" : 19,
        "key.doc.declaration" : "public struct Response",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"261\" column=\"19\"><Name>Response<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV<\/USR><Declaration>public struct Response<\/Declaration><CommentParts><Abstract><Para>Represent HTTP response.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 261,
        "key.doc.name" : "Response",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Response<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 251,
        "key.name" : "HTTPClient.Response",
        "key.namelength" : 19,
        "key.nameoffset" : 5859,
        "key.offset" : 5849,
        "key.parsed_declaration" : "extension HTTPClient.Response",
        "key.parsed_scope.end" : 161,
        "key.parsed_scope.start" : 156,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var cookies: [<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C6CookieV\">Cookie<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5938
              }
            ],
            "key.bodylength" : 118,
            "key.bodyoffset" : 5979,
            "key.doc.column" : 16,
            "key.doc.comment" : "List of HTTP cookies returned by the server.",
            "key.doc.declaration" : "public var cookies: [HTTPClient.Cookie] { get }",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift\" line=\"158\" column=\"16\"><Name>cookies<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV7cookiesSayAC6CookieVGvp<\/USR><Declaration>public var cookies: [HTTPClient.Cookie] { get }<\/Declaration><CommentParts><Abstract><Para>List of HTTP cookies returned by the server.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 158,
            "key.doc.name" : "cookies",
            "key.doc.type" : "Other",
            "key.doclength" : 49,
            "key.docoffset" : 5885,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient+HTTPCookie.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>cookies<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C6CookieV\">Cookie<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 153,
            "key.name" : "cookies",
            "key.namelength" : 7,
            "key.nameoffset" : 5949,
            "key.offset" : 5945,
            "key.parsed_declaration" : "public var cookies: [HTTPClient.Cookie]",
            "key.parsed_scope.end" : 160,
            "key.parsed_scope.start" : 158,
            "key.typename" : "[HTTPClient.Cookie]",
            "key.typeusr" : "$sSay15AsyncHTTPClient0B0C6CookieVGD",
            "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV7cookiesSayAC6CookieVGvp"
          }
        ],
        "key.typename" : "HTTPClient.Response.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0C8ResponseVmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 46826,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct Logger<\/Declaration>",
        "key.bodylength" : 420,
        "key.bodyoffset" : 709,
        "key.doc.column" : 15,
        "key.doc.declaration" : "struct Logger",
        "key.doc.discussion" : [
          {
            "Para" : "`Logger`s are value types with respect to the `logLevel` and the `metadata` (as well as the immutable `label` and the selected `LogHandler`). Therefore, `Logger`s are suitable to be passed around between libraries if you want to preserve metadata across libraries."
          },
          {
            "Para" : "The most basic usage of a `Logger` is"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-log\/Sources\/Logging\/Logging.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-log\/Sources\/Logging\/Logging.swift\" line=\"34\" column=\"15\"><Name>Logger<\/Name><USR>s:7Logging6LoggerV<\/USR><Declaration>struct Logger<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Logger<\/codeVoice> is the central type in <codeVoice>SwiftLog<\/codeVoice>. Its central function is to emit log messages using one of the methods corresponding to a log level.<\/Para><\/Abstract><Discussion><Para><codeVoice>Logger<\/codeVoice>s are value types with respect to the <codeVoice>logLevel<\/codeVoice> and the <codeVoice>metadata<\/codeVoice> (as well as the immutable <codeVoice>label<\/codeVoice> and the selected <codeVoice>LogHandler<\/codeVoice>). Therefore, <codeVoice>Logger<\/codeVoice>s are suitable to be passed around between libraries if you want to preserve metadata across libraries.<\/Para><Para>The most basic usage of a <codeVoice>Logger<\/codeVoice> is<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[logger.info(\"Hello World!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 34,
        "key.doc.name" : "Logger",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-log\/Sources\/Logging\/Logging.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Logger<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 439,
        "key.modulename" : "Logging",
        "key.name" : "Logger",
        "key.namelength" : 6,
        "key.nameoffset" : 701,
        "key.offset" : 691,
        "key.parsed_declaration" : "extension Logger",
        "key.parsed_scope.end" : 36,
        "key.parsed_scope.start" : 25,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func requestInfo(_ request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>) -&gt; <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>.<Type usr=\"s:7Logging6LoggerV8Metadataa\">Metadata<\/Type>.<Type usr=\"s:SD5Valuea\">Value<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 714
              }
            ],
            "key.bodylength" : 55,
            "key.bodyoffset" : 796,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requestInfo<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct>.<ref.typealias usr=\"s:7Logging6LoggerV8Metadataa\">Metadata<\/ref.typealias>.<ref.typealias usr=\"s:SD5Valuea\">Value<\/ref.typealias><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 130,
            "key.name" : "requestInfo(_:)",
            "key.namelength" : 42,
            "key.nameoffset" : 727,
            "key.offset" : 722,
            "key.parsed_declaration" : "private func requestInfo(_ request: HTTPClient.Request) -> Logger.Metadata.Value",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [

            ],
            "key.typename" : "(Logger) -> (HTTPClient.Request) -> Logger.MetadataValue",
            "key.typeusr" : "$sy7Logging6LoggerV13MetadataValueO15AsyncHTTPClient0F0C7RequestVcD",
            "key.usr" : "s:7Logging6LoggerV15AsyncHTTPClientE11requestInfo33_797EF4A15335F12F4B8BAA3062C343BCLLyAC13MetadataValueOAD0D0C7RequestVF"
          },
          {
            "key.annotated_decl" : "<Declaration>func attachingRequestInformation(_ request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, requestID: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
            "key.bodylength" : 178,
            "key.bodyoffset" : 949,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>attachingRequestInformation<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requestID<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 270,
            "key.name" : "attachingRequestInformation(_:requestID:)",
            "key.namelength" : 74,
            "key.nameoffset" : 863,
            "key.offset" : 858,
            "key.parsed_declaration" : "func attachingRequestInformation(_ request: HTTPClient.Request, requestID: Int) -> Logger",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 30,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var modified: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>modified<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 19,
                "key.name" : "modified",
                "key.namelength" : 8,
                "key.nameoffset" : 962,
                "key.offset" : 958,
                "key.parsed_declaration" : "var modified = self",
                "key.parsed_scope.end" : 31,
                "key.parsed_scope.start" : 31,
                "key.typename" : "Logger",
                "key.typeusr" : "$s7Logging6LoggerVD",
                "key.usr" : "s:7Logging6LoggerV15AsyncHTTPClientE27attachingRequestInformation_9requestIDAcD0D0C0F0V_SitF8modifiedL_ACvp"
              }
            ],
            "key.typename" : "(Logger) -> (HTTPClient.Request, Int) -> Logger",
            "key.typeusr" : "$s_9requestID7Logging6LoggerV15AsyncHTTPClient0F0C7RequestV_SitcD",
            "key.usr" : "s:7Logging6LoggerV15AsyncHTTPClientE27attachingRequestInformation_9requestIDAcD0D0C0F0V_SitF"
          }
        ],
        "key.typename" : "Logger.Type",
        "key.typeusr" : "$s7Logging6LoggerVmD",
        "key.usr" : "s:7Logging6LoggerV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>let globalRequestID: <Type usr=\"s:21NIOConcurrencyHelpers9NIOAtomicC\">NIOAtomic<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;<\/Declaration>",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>globalRequestID<\/decl.name>: <decl.var.type><ref.class usr=\"s:21NIOConcurrencyHelpers9NIOAtomicC\">NIOAtomic<\/ref.class>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 57,
        "key.name" : "globalRequestID",
        "key.namelength" : 15,
        "key.nameoffset" : 1136,
        "key.offset" : 1132,
        "key.parsed_declaration" : "let globalRequestID = NIOAtomic<Int>.makeAtomic(value: 0)",
        "key.parsed_scope.end" : 38,
        "key.parsed_scope.start" : 38,
        "key.typename" : "NIOAtomic<Int>",
        "key.typeusr" : "$s21NIOConcurrencyHelpers9NIOAtomicCySiGD",
        "key.usr" : "s:15AsyncHTTPClient15globalRequestID21NIOConcurrencyHelpers9NIOAtomicCySiGvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public class HTTPClient<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2011
          }
        ],
        "key.bodylength" : 35439,
        "key.bodyoffset" : 2036,
        "key.doc.column" : 14,
        "key.doc.comment" : "HTTPClient class provides API for request execution.\n\nExample:\n\n```swift\n    let client = HTTPClient(eventLoopGroupProvider: .createNew)\n    client.get(url: \"https:\/\/swift.org\", deadline: .now() + .seconds(1)).whenComplete { result in\n        switch result {\n        case .failure(let error):\n            \/\/ process error\n        case .success(let response):\n            if let response.status == .ok {\n                \/\/ handle response\n            } else {\n                \/\/ handle remote error\n            }\n        }\n    }\n```\n\nIt is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO `EventLoopGroup`:\n\n```swift\n    try client.syncShutdown()\n```",
        "key.doc.declaration" : "public class HTTPClient",
        "key.doc.discussion" : [
          {
            "Para" : "Example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO `EventLoopGroup`:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"65\" column=\"14\"><Name>HTTPClient<\/Name><USR>s:15AsyncHTTPClient0B0C<\/USR><Declaration>public class HTTPClient<\/Declaration><CommentParts><Abstract><Para>HTTPClient class provides API for request execution.<\/Para><\/Abstract><Discussion><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    let client = HTTPClient(eventLoopGroupProvider: .createNew)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    client.get(url: \"https:\/\/swift.org\", deadline: .now() + .seconds(1)).whenComplete { result in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        switch result {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .failure(let error):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ process error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .success(let response):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            if let response.status == .ok {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle response]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle remote error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO <codeVoice>EventLoopGroup<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    try client.syncShutdown()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 65,
        "key.doc.name" : "HTTPClient",
        "key.doc.type" : "Class",
        "key.doclength" : 820,
        "key.docoffset" : 1191,
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTPClient<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 35458,
        "key.name" : "HTTPClient",
        "key.namelength" : 10,
        "key.nameoffset" : 2024,
        "key.offset" : 2018,
        "key.parsed_declaration" : "public class HTTPClient",
        "key.parsed_scope.end" : 811,
        "key.parsed_scope.start" : 65,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let eventLoopGroup: <Type usr=\"s:3NIO14EventLoopGroupP\">EventLoopGroup<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2041
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>eventLoopGroup<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO14EventLoopGroupP\">EventLoopGroup<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.name" : "eventLoopGroup",
            "key.namelength" : 14,
            "key.nameoffset" : 2052,
            "key.offset" : 2048,
            "key.parsed_declaration" : "public let eventLoopGroup: EventLoopGroup",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 66,
            "key.typename" : "EventLoopGroup",
            "key.typeusr" : "$s3NIO14EventLoopGroup_pD",
            "key.usr" : "s:15AsyncHTTPClient0B0C14eventLoopGroup3NIO05EventdE0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let eventLoopGroupProvider: <Type usr=\"s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO\">EventLoopGroupProvider<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>eventLoopGroupProvider<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO\">EventLoopGroupProvider<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.name" : "eventLoopGroupProvider",
            "key.namelength" : 22,
            "key.nameoffset" : 2091,
            "key.offset" : 2087,
            "key.parsed_declaration" : "let eventLoopGroupProvider: EventLoopGroupProvider",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 67,
            "key.typename" : "HTTPClient.EventLoopGroupProvider",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C22EventLoopGroupProviderOD",
            "key.usr" : "s:15AsyncHTTPClient0B0C22eventLoopGroupProviderAC05EventdeF0Ovp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let configuration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>configuration<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 2146,
            "key.offset" : 2142,
            "key.parsed_declaration" : "let configuration: Configuration",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 68,
            "key.typename" : "HTTPClient.Configuration",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationVD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13configurationAC13ConfigurationVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let pool: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>pool<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "pool",
            "key.namelength" : 4,
            "key.nameoffset" : 2183,
            "key.offset" : 2179,
            "key.parsed_declaration" : "let pool: ConnectionPool",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 69,
            "key.typename" : "ConnectionPool",
            "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolCD",
            "key.usr" : "s:15AsyncHTTPClient0B0C4poolAA14ConnectionPoolCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var state: <Type usr=\"s:15AsyncHTTPClient0B0C5StateO\">State<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>state<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C5StateO\">State<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "state",
            "key.namelength" : 5,
            "key.nameoffset" : 2212,
            "key.offset" : 2208,
            "key.parsed_declaration" : "var state: State",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 70,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "HTTPClient.State",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C5StateOD",
            "key.usr" : "s:15AsyncHTTPClient0B0C5stateAC5StateOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let stateLock: <Type usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2229
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>stateLock<\/decl.name>: <decl.var.type><ref.class usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "stateLock",
            "key.namelength" : 9,
            "key.nameoffset" : 2241,
            "key.offset" : 2237,
            "key.parsed_declaration" : "private let stateLock = Lock()",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 71,
            "key.typename" : "Lock",
            "key.typeusr" : "$s21NIOConcurrencyHelpers4LockCD",
            "key.usr" : "s:15AsyncHTTPClient0B0C9stateLock33_797EF4A15335F12F4B8BAA3062C343BCLL21NIOConcurrencyHelpers0D0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal static let loggingDisabled: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 2265
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>loggingDisabled<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 104,
            "key.name" : "loggingDisabled",
            "key.namelength" : 15,
            "key.nameoffset" : 2285,
            "key.offset" : 2274,
            "key.parsed_declaration" : "internal static let loggingDisabled = Logger(label: \"AHC-do-not-log\", factory: { _ in SwiftLogNoOpLogHandler() })",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 73,
            "key.typename" : "Logger",
            "key.typeusr" : "$s7Logging6LoggerVD",
            "key.usr" : "s:15AsyncHTTPClient0B0C15loggingDisabled7Logging6LoggerVvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(eventLoopGroupProvider: <Type usr=\"s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO\">EventLoopGroupProvider<\/Type>, configuration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type> = Configuration())<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 2647
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2640
              }
            ],
            "key.bodylength" : 191,
            "key.bodyoffset" : 2789,
            "key.doc.column" : 24,
            "key.doc.comment" : "Create an `HTTPClient` with specified `EventLoopGroup` provider and configuration.\n\n- parameters:\n    - eventLoopGroupProvider: Specify how `EventLoopGroup` will be created.\n    - configuration: Client configuration.",
            "key.doc.declaration" : "public convenience init(eventLoopGroupProvider: EventLoopGroupProvider, configuration: Configuration = Configuration())",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"80\" column=\"24\"><Name>init(eventLoopGroupProvider:configuration:)<\/Name><USR>s:15AsyncHTTPClient0B0C22eventLoopGroupProvider13configurationA2C05EventdeF0O_AC13ConfigurationVtcfc<\/USR><Declaration>public convenience init(eventLoopGroupProvider: EventLoopGroupProvider, configuration: Configuration = Configuration())<\/Declaration><CommentParts><Abstract><Para>Create an <codeVoice>HTTPClient<\/codeVoice> with specified <codeVoice>EventLoopGroup<\/codeVoice> provider and configuration.<\/Para><\/Abstract><Parameters><Parameter><Name>eventLoopGroupProvider<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Specify how <codeVoice>EventLoopGroup<\/codeVoice> will be created.<\/Para><\/Discussion><\/Parameter><Parameter><Name>configuration<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Client configuration.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 80,
            "key.doc.name" : "init(eventLoopGroupProvider:configuration:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Specify how `EventLoopGroup` will be created."
                  }
                ],
                "name" : "eventLoopGroupProvider"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Client configuration."
                  }
                ],
                "name" : "configuration"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 252,
            "key.docoffset" : 2384,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>eventLoopGroupProvider<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO\">EventLoopGroupProvider<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type> = Configuration()<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 322,
            "key.name" : "init(eventLoopGroupProvider:configuration:)",
            "key.namelength" : 128,
            "key.nameoffset" : 2659,
            "key.offset" : 2659,
            "key.parsed_declaration" : "public convenience init(eventLoopGroupProvider: EventLoopGroupProvider,\n                        configuration: Configuration = Configuration())",
            "key.parsed_scope.end" : 85,
            "key.parsed_scope.start" : 80,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C22eventLoopGroupProvider13configuration24backgroundActivityLoggerA2C05EventdeF0O_AC13ConfigurationV7Logging0J0Vtcfc\">init(eventLoopGroupProvider:configuration:backgroundActivityLogger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient.Type) -> (HTTPClient.EventLoopGroupProvider, HTTPClient.Configuration) -> HTTPClient",
            "key.typeusr" : "$s22eventLoopGroupProvider13configuration15AsyncHTTPClient0G0CAE05EventbcD0O_AE13ConfigurationVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C22eventLoopGroupProvider13configurationA2C05EventdeF0O_AC13ConfigurationVtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public required init(eventLoopGroupProvider: <Type usr=\"s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO\">EventLoopGroupProvider<\/Type>, configuration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type> = Configuration(), backgroundActivityLogger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 3250
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3243
              }
            ],
            "key.bodylength" : 884,
            "key.bodyoffset" : 3445,
            "key.doc.column" : 21,
            "key.doc.comment" : "Create an `HTTPClient` with specified `EventLoopGroup` provider and configuration.\n\n- parameters:\n    - eventLoopGroupProvider: Specify how `EventLoopGroup` will be created.\n    - configuration: Client configuration.",
            "key.doc.declaration" : "public required init(eventLoopGroupProvider: EventLoopGroupProvider, configuration: Configuration = Configuration(), backgroundActivityLogger: Logger)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"92\" column=\"21\"><Name>init(eventLoopGroupProvider:configuration:backgroundActivityLogger:)<\/Name><USR>s:15AsyncHTTPClient0B0C22eventLoopGroupProvider13configuration24backgroundActivityLoggerA2C05EventdeF0O_AC13ConfigurationV7Logging0J0Vtcfc<\/USR><Declaration>public required init(eventLoopGroupProvider: EventLoopGroupProvider, configuration: Configuration = Configuration(), backgroundActivityLogger: Logger)<\/Declaration><CommentParts><Abstract><Para>Create an <codeVoice>HTTPClient<\/codeVoice> with specified <codeVoice>EventLoopGroup<\/codeVoice> provider and configuration.<\/Para><\/Abstract><Parameters><Parameter><Name>eventLoopGroupProvider<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Specify how <codeVoice>EventLoopGroup<\/codeVoice> will be created.<\/Para><\/Discussion><\/Parameter><Parameter><Name>configuration<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Client configuration.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 92,
            "key.doc.name" : "init(eventLoopGroupProvider:configuration:backgroundActivityLogger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Specify how `EventLoopGroup` will be created."
                  }
                ],
                "name" : "eventLoopGroupProvider"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Client configuration."
                  }
                ],
                "name" : "configuration"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 252,
            "key.docoffset" : 2987,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>eventLoopGroupProvider<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO\">EventLoopGroupProvider<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type> = Configuration()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>backgroundActivityLogger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1071,
            "key.name" : "init(eventLoopGroupProvider:configuration:backgroundActivityLogger:)",
            "key.namelength" : 184,
            "key.nameoffset" : 3259,
            "key.offset" : 3259,
            "key.parsed_declaration" : "public required init(eventLoopGroupProvider: EventLoopGroupProvider,\n                     configuration: Configuration = Configuration(),\n                     backgroundActivityLogger: Logger)",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 92,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C22eventLoopGroupProvider13configurationA2C05EventdeF0O_AC13ConfigurationVtcfc\">init(eventLoopGroupProvider:configuration:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient.Type) -> (HTTPClient.EventLoopGroupProvider, HTTPClient.Configuration, Logger) -> HTTPClient",
            "key.typeusr" : "$s22eventLoopGroupProvider13configuration24backgroundActivityLogger15AsyncHTTPClient0J0CAF05EventbcD0O_AF13ConfigurationV7Logging0H0VtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C22eventLoopGroupProvider13configuration24backgroundActivityLoggerA2C05EventdeF0O_AC13ConfigurationV7Logging0J0Vtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>deinit<\/Declaration>",
            "key.bodylength" : 182,
            "key.bodyoffset" : 4344,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 191,
            "key.name" : "deinit",
            "key.namelength" : 6,
            "key.nameoffset" : 4336,
            "key.offset" : 4336,
            "key.parsed_declaration" : "deinit",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 116,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:15AsyncHTTPClient0B0Cfd"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func syncShutdown() throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4617
              }
            ],
            "key.bodylength" : 62,
            "key.bodyoffset" : 4652,
            "key.doc.column" : 17,
            "key.doc.comment" : "Shuts down the client and `EventLoopGroup` if it was created by the client.",
            "key.doc.declaration" : "public func syncShutdown() throws",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"122\" column=\"17\"><Name>syncShutdown()<\/Name><USR>s:15AsyncHTTPClient0B0C12syncShutdownyyKF<\/USR><Declaration>public func syncShutdown() throws<\/Declaration><CommentParts><Abstract><Para>Shuts down the client and <codeVoice>EventLoopGroup<\/codeVoice> if it was created by the client.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 122,
            "key.doc.name" : "syncShutdown()",
            "key.doc.type" : "Function",
            "key.doclength" : 80,
            "key.docoffset" : 4533,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>syncShutdown<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 91,
            "key.name" : "syncShutdown()",
            "key.namelength" : 14,
            "key.nameoffset" : 4629,
            "key.offset" : 4624,
            "key.parsed_declaration" : "public func syncShutdown() throws",
            "key.parsed_scope.end" : 124,
            "key.parsed_scope.start" : 122,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C12syncShutdown18requiresCleanCloseySb_tKF\">syncShutdown(requiresCleanClose:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> () throws -> ()",
            "key.typeusr" : "$syyKcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C12syncShutdownyyKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal func syncShutdown(requiresCleanClose: <Type usr=\"s:Sb\">Bool<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 5446
              }
            ],
            "key.bodylength" : 952,
            "key.bodyoffset" : 5507,
            "key.doc.column" : 19,
            "key.doc.comment" : "Shuts down the client and `EventLoopGroup` if it was created by the client.\n\n- parameters:\n    - requiresCleanClose: Determine if the client should throw when it is shutdown in a non-clean state\n\n- Note:\nThe `requiresCleanClose` will let the client do additional checks about its internal consistency on shutdown and\nthrow the appropriate error if needed. For instance, if its internal connection pool has any non-released connections,\nthis indicate shutdown was called too early before tasks were completed or explicitly canceled.\nIn general, setting this parameter to `true` should make it easier and faster to catch related programming errors.",
            "key.doc.declaration" : "internal func syncShutdown(requiresCleanClose: Bool) throws",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"136\" column=\"19\"><Name>syncShutdown(requiresCleanClose:)<\/Name><USR>s:15AsyncHTTPClient0B0C12syncShutdown18requiresCleanCloseySb_tKF<\/USR><Declaration>internal func syncShutdown(requiresCleanClose: Bool) throws<\/Declaration><CommentParts><Abstract><Para>Shuts down the client and <codeVoice>EventLoopGroup<\/codeVoice> if it was created by the client.<\/Para><\/Abstract><Parameters><Parameter><Name>requiresCleanClose<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Determine if the client should throw when it is shutdown in a non-clean state<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para> The <codeVoice>requiresCleanClose<\/codeVoice> will let the client do additional checks about its internal consistency on shutdown and throw the appropriate error if needed. For instance, if its internal connection pool has any non-released connections, this indicate shutdown was called too early before tasks were completed or explicitly canceled. In general, setting this parameter to <codeVoice>true<\/codeVoice> should make it easier and faster to catch related programming errors.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 136,
            "key.doc.name" : "syncShutdown(requiresCleanClose:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Determine if the client should throw when it is shutdown in a non-clean state"
                  }
                ],
                "name" : "requiresCleanClose"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 721,
            "key.docoffset" : 4721,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>syncShutdown<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>requiresCleanClose<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1005,
            "key.name" : "syncShutdown(requiresCleanClose:)",
            "key.namelength" : 38,
            "key.nameoffset" : 5460,
            "key.offset" : 5455,
            "key.parsed_declaration" : "internal func syncShutdown(requiresCleanClose: Bool) throws",
            "key.parsed_scope.end" : 161,
            "key.parsed_scope.start" : 136,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C12syncShutdownyyKF\">syncShutdown()<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let errorStorageLock: <Type usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>errorStorageLock<\/decl.name>: <decl.var.type><ref.class usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "errorStorageLock",
                "key.namelength" : 16,
                "key.nameoffset" : 5858,
                "key.offset" : 5854,
                "key.parsed_declaration" : "let errorStorageLock = Lock()",
                "key.parsed_scope.end" : 144,
                "key.parsed_scope.start" : 144,
                "key.typename" : "Lock",
                "key.typeusr" : "$s21NIOConcurrencyHelpers4LockCD",
                "key.usr" : "s:15AsyncHTTPClient0B0C12syncShutdown18requiresCleanCloseySb_tKF16errorStorageLockL_21NIOConcurrencyHelpers0J0Cvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var errorStorage: <Type usr=\"s:s5ErrorP\">Error<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>errorStorage<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.name" : "errorStorage",
                "key.namelength" : 12,
                "key.nameoffset" : 5896,
                "key.offset" : 5892,
                "key.parsed_declaration" : "var errorStorage: Error?",
                "key.parsed_scope.end" : 145,
                "key.parsed_scope.start" : 145,
                "key.typename" : "Error?",
                "key.typeusr" : "$ss5Error_pSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C12syncShutdown18requiresCleanCloseySb_tKF12errorStorageL_s5Error_pSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let continuation: <Type usr=\"s:8Dispatch0A8WorkItemC\">DispatchWorkItem<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>continuation<\/decl.name>: <decl.var.type><ref.class usr=\"s:8Dispatch0A8WorkItemC\">DispatchWorkItem<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.name" : "continuation",
                "key.namelength" : 12,
                "key.nameoffset" : 5929,
                "key.offset" : 5925,
                "key.parsed_declaration" : "let continuation = DispatchWorkItem {}",
                "key.parsed_scope.end" : 146,
                "key.parsed_scope.start" : 146,
                "key.typename" : "DispatchWorkItem",
                "key.typeusr" : "$s8Dispatch0A8WorkItemCD",
                "key.usr" : "s:15AsyncHTTPClient0B0C12syncShutdown18requiresCleanCloseySb_tKF12continuationL_8Dispatch0I8WorkItemCvp"
              }
            ],
            "key.typename" : "(HTTPClient) -> (Bool) throws -> ()",
            "key.typeusr" : "$s18requiresCleanCloseySb_tKcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C12syncShutdown18requiresCleanCloseySb_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func shutdown(queue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/Type> = .global(), _ callback: @escaping (<Type usr=\"s:s5ErrorP\">Error<\/Type>?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6857
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 6953,
            "key.doc.column" : 17,
            "key.doc.comment" : "Shuts down the client and event loop gracefully. This function is clearly an outlier in that it uses a completion\ncallback instead of an EventLoopFuture. The reason for that is that NIO's EventLoopFutures will call back on an event loop.\nThe virtue of this function is to shut the event loop down. To work around that we call back on a DispatchQueue\ninstead.",
            "key.doc.declaration" : "public func shutdown(queue: DispatchQueue = .global(), _ callback: @escaping (Error?) -> Void)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"167\" column=\"17\"><Name>shutdown(queue:_:)<\/Name><USR>s:15AsyncHTTPClient0B0C8shutdown5queue_ySo012OS_dispatch_D0C_ys5Error_pSgctF<\/USR><Declaration>public func shutdown(queue: DispatchQueue = .global(), _ callback: @escaping (Error?) -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>Shuts down the client and event loop gracefully. This function is clearly an outlier in that it uses a completion callback instead of an EventLoopFuture. The reason for that is that NIO’s EventLoopFutures will call back on an event loop. The virtue of this function is to shut the event loop down. To work around that we call back on a DispatchQueue instead.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 167,
            "key.doc.name" : "shutdown(queue:_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 387,
            "key.docoffset" : 6466,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>shutdown<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>queue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/ref.class><\/decl.var.parameter.type> = .global()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>callback<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 168,
            "key.name" : "shutdown(queue:_:)",
            "key.namelength" : 82,
            "key.nameoffset" : 6869,
            "key.offset" : 6864,
            "key.parsed_declaration" : "public func shutdown(queue: DispatchQueue = .global(), _ callback: @escaping (Error?) -> Void)",
            "key.parsed_scope.end" : 169,
            "key.parsed_scope.start" : 167,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C8shutdown33_797EF4A15335F12F4B8BAA3062C343BCLL18requiresCleanClose5queue_ySb_So012OS_dispatch_O0Cys5Error_pSgctF\">shutdown(requiresCleanClose:queue:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (DispatchQueue, @escaping (Error?) -> ()) -> ()",
            "key.typeusr" : "$s5queue_ySo012OS_dispatch_A0C_ys5Error_pSgctcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C8shutdown5queue_ySo012OS_dispatch_D0C_ys5Error_pSgctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func shutdownEventLoop(queue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/Type>, _ callback: @escaping (<Type usr=\"s:s5ErrorP\">Error<\/Type>?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 7038
              }
            ],
            "key.bodylength" : 595,
            "key.bodyoffset" : 7132,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>shutdownEventLoop<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>queue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>callback<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 682,
            "key.name" : "shutdownEventLoop(queue:_:)",
            "key.namelength" : 79,
            "key.nameoffset" : 7051,
            "key.offset" : 7046,
            "key.parsed_declaration" : "private func shutdownEventLoop(queue: DispatchQueue, _ callback: @escaping (Error?) -> Void)",
            "key.parsed_scope.end" : 187,
            "key.parsed_scope.start" : 171,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (DispatchQueue, @escaping (Error?) -> ()) -> ()",
            "key.typeusr" : "$s5queue_ySo012OS_dispatch_A0C_ys5Error_pSgctcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C17shutdownEventLoop33_797EF4A15335F12F4B8BAA3062C343BCLL5queue_ySo012OS_dispatch_N0C_ys5Error_pSgctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func shutdown(requiresCleanClose: <Type usr=\"s:Sb\">Bool<\/Type>, queue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/Type>, _ callback: @escaping (<Type usr=\"s:s5ErrorP\">Error<\/Type>?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 7734
              }
            ],
            "key.bodylength" : 1083,
            "key.bodyoffset" : 7845,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>shutdown<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>requiresCleanClose<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>queue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>callback<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1187,
            "key.name" : "shutdown(requiresCleanClose:queue:_:)",
            "key.namelength" : 96,
            "key.nameoffset" : 7747,
            "key.offset" : 7742,
            "key.parsed_declaration" : "private func shutdown(requiresCleanClose: Bool, queue: DispatchQueue, _ callback: @escaping (Error?) -> Void)",
            "key.parsed_scope.end" : 222,
            "key.parsed_scope.start" : 189,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C8shutdown5queue_ySo012OS_dispatch_D0C_ys5Error_pSgctF\">shutdown(queue:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (Bool, DispatchQueue, @escaping (Error?) -> ()) -> ()",
            "key.typeusr" : "$s18requiresCleanClose5queue_ySb_So012OS_dispatch_D0Cys5Error_pSgctcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C8shutdown33_797EF4A15335F12F4B8BAA3062C343BCLL18requiresCleanClose5queue_ySb_So012OS_dispatch_O0Cys5Error_pSgctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func get(url: <Type usr=\"s:SS\">String<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9121
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 9210,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `GET` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func get(url: String, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"229\" column=\"17\"><Name>get(url:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C3get3url8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AG11NIODeadlineVSgtF<\/USR><Declaration>public func get(url: String, deadline: NIODeadline? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>GET<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 229,
            "key.doc.name" : "get(url:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 182,
            "key.docoffset" : 8935,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 178,
            "key.name" : "get(url:deadline:)",
            "key.namelength" : 46,
            "key.nameoffset" : 9133,
            "key.offset" : 9128,
            "key.parsed_declaration" : "public func get(url: String, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 231,
            "key.parsed_scope.start" : 229,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C3get3url8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AH11NIODeadlineVSg7Logging6LoggerVtF\">get(url:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, NIODeadline?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url8deadline3NIO15EventLoopFutureCy15AsyncHTTPClient0H0C8ResponseVGSS_AC11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C3get3url8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AG11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func get(url: <Type usr=\"s:SS\">String<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9556
              }
            ],
            "key.bodylength" : 85,
            "key.bodyoffset" : 9661,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `GET` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func get(url: String, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"239\" column=\"17\"><Name>get(url:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C3get3url8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AH11NIODeadlineVSg7Logging6LoggerVtF<\/USR><Declaration>public func get(url: String, deadline: NIODeadline? = nil, logger: Logger) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>GET<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 239,
            "key.doc.name" : "get(url:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 240,
            "key.docoffset" : 9312,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 184,
            "key.name" : "get(url:deadline:logger:)",
            "key.namelength" : 62,
            "key.nameoffset" : 9568,
            "key.offset" : 9563,
            "key.parsed_declaration" : "public func get(url: String, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 241,
            "key.parsed_scope.start" : 239,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C3get3url8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AG11NIODeadlineVSgtF\">get(url:deadline:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, NIODeadline?, Logger) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0I0C8ResponseVGSS_AD11NIODeadlineVSg7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C3get3url8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AH11NIODeadlineVSg7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func post(url: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9974
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 10083,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `POST` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func post(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"249\" column=\"17\"><Name>post(url:body:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C4post3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF<\/USR><Declaration>public func post(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>POST<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 249,
            "key.doc.name" : "post(url:body:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 217,
            "key.docoffset" : 9753,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>post<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 211,
            "key.name" : "post(url:body:deadline:)",
            "key.namelength" : 66,
            "key.nameoffset" : 9986,
            "key.offset" : 9981,
            "key.parsed_declaration" : "public func post(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 251,
            "key.parsed_scope.start" : 249,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C4post3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF\">post(url:body:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, HTTPClient.Body?, NIODeadline?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url4body8deadline3NIO15EventLoopFutureCy15AsyncHTTPClient0I0C8ResponseVGSS_AI4BodyVSgAD11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C4post3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func post(url: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10477
              }
            ],
            "key.bodylength" : 98,
            "key.bodyoffset" : 10602,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `POST` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func post(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"260\" column=\"17\"><Name>post(url:body:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C4post3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF<\/USR><Declaration>public func post(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>POST<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 260,
            "key.doc.name" : "post(url:body:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 275,
            "key.docoffset" : 10198,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>post<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 217,
            "key.name" : "post(url:body:deadline:logger:)",
            "key.namelength" : 82,
            "key.nameoffset" : 10489,
            "key.offset" : 10484,
            "key.parsed_declaration" : "public func post(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 262,
            "key.parsed_scope.start" : 260,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C4post3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF\">post(url:body:deadline:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, HTTPClient.Body?, NIODeadline?, Logger) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url4body8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0J0C8ResponseVGSS_AJ4BodyVSgAE11NIODeadlineVSg7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C4post3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func patch(url: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10929
              }
            ],
            "key.bodylength" : 109,
            "key.bodyoffset" : 11039,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `PATCH` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func patch(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"270\" column=\"17\"><Name>patch(url:body:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C5patch3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF<\/USR><Declaration>public func patch(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>PATCH<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 270,
            "key.doc.name" : "patch(url:body:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 218,
            "key.docoffset" : 10707,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>patch<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 213,
            "key.name" : "patch(url:body:deadline:)",
            "key.namelength" : 67,
            "key.nameoffset" : 10941,
            "key.offset" : 10936,
            "key.parsed_declaration" : "public func patch(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 272,
            "key.parsed_scope.start" : 270,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C5patch3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF\">patch(url:body:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, HTTPClient.Body?, NIODeadline?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url4body8deadline3NIO15EventLoopFutureCy15AsyncHTTPClient0I0C8ResponseVGSS_AI4BodyVSgAD11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C5patch3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func patch(url: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11435
              }
            ],
            "key.bodylength" : 99,
            "key.bodyoffset" : 11561,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `PATCH` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func patch(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"281\" column=\"17\"><Name>patch(url:body:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C5patch3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF<\/USR><Declaration>public func patch(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>PATCH<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 281,
            "key.doc.name" : "patch(url:body:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 276,
            "key.docoffset" : 11155,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>patch<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 219,
            "key.name" : "patch(url:body:deadline:logger:)",
            "key.namelength" : 83,
            "key.nameoffset" : 11447,
            "key.offset" : 11442,
            "key.parsed_declaration" : "public func patch(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 283,
            "key.parsed_scope.start" : 281,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C5patch3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF\">patch(url:body:deadline:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, HTTPClient.Body?, NIODeadline?, Logger) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url4body8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0J0C8ResponseVGSS_AJ4BodyVSgAE11NIODeadlineVSg7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C5patch3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func put(url: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11887
              }
            ],
            "key.bodylength" : 107,
            "key.bodyoffset" : 11995,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `PUT` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func put(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"291\" column=\"17\"><Name>put(url:body:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C3put3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF<\/USR><Declaration>public func put(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>PUT<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 291,
            "key.doc.name" : "put(url:body:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 216,
            "key.docoffset" : 11667,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>put<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 209,
            "key.name" : "put(url:body:deadline:)",
            "key.namelength" : 65,
            "key.nameoffset" : 11899,
            "key.offset" : 11894,
            "key.parsed_declaration" : "public func put(url: String, body: Body? = nil, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 293,
            "key.parsed_scope.start" : 291,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C3put3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF\">put(url:body:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, HTTPClient.Body?, NIODeadline?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url4body8deadline3NIO15EventLoopFutureCy15AsyncHTTPClient0I0C8ResponseVGSS_AI4BodyVSgAD11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C3put3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func put(url: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12387
              }
            ],
            "key.bodylength" : 97,
            "key.bodyoffset" : 12511,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `PUT` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func put(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"302\" column=\"17\"><Name>put(url:body:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C3put3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF<\/USR><Declaration>public func put(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>PUT<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 302,
            "key.doc.name" : "put(url:body:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 274,
            "key.docoffset" : 12109,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>put<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 215,
            "key.name" : "put(url:body:deadline:logger:)",
            "key.namelength" : 81,
            "key.nameoffset" : 12399,
            "key.offset" : 12394,
            "key.parsed_declaration" : "public func put(url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 304,
            "key.parsed_scope.start" : 302,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C3put3url4body8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAH11NIODeadlineVSgtF\">put(url:body:deadline:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, HTTPClient.Body?, NIODeadline?, Logger) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url4body8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0J0C8ResponseVGSS_AJ4BodyVSgAE11NIODeadlineVSg7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C3put3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func delete(url: <Type usr=\"s:SS\">String<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12809
              }
            ],
            "key.bodylength" : 98,
            "key.bodyoffset" : 12901,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `DELETE` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - deadline: The time when the request must have been completed by.",
            "key.doc.declaration" : "public func delete(url: String, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"311\" column=\"17\"><Name>delete(url:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C6delete3url8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AG11NIODeadlineVSgtF<\/USR><Declaration>public func delete(url: String, deadline: NIODeadline? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>DELETE<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The time when the request must have been completed by.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 311,
            "key.doc.name" : "delete(url:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The time when the request must have been completed by."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 190,
            "key.docoffset" : 12615,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delete<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 184,
            "key.name" : "delete(url:deadline:)",
            "key.namelength" : 49,
            "key.nameoffset" : 12821,
            "key.offset" : 12816,
            "key.parsed_declaration" : "public func delete(url: String, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 313,
            "key.parsed_scope.start" : 311,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C6delete3url8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AH11NIODeadlineVSg7Logging6LoggerVtF\">delete(url:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, NIODeadline?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url8deadline3NIO15EventLoopFutureCy15AsyncHTTPClient0H0C8ResponseVGSS_AC11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C6delete3url8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AG11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func delete(url: <Type usr=\"s:SS\">String<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13258
              }
            ],
            "key.bodylength" : 88,
            "key.bodyoffset" : 13366,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute `DELETE` request using specified URL.\n\n- parameters:\n    - url: Remote URL.\n    - deadline: The time when the request must have been completed by.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func delete(url: String, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"321\" column=\"17\"><Name>delete(url:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C6delete3url8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AH11NIODeadlineVSg7Logging6LoggerVtF<\/USR><Declaration>public func delete(url: String, deadline: NIODeadline? = nil, logger: Logger) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute <codeVoice>DELETE<\/codeVoice> request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote URL.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The time when the request must have been completed by.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 321,
            "key.doc.name" : "delete(url:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Remote URL."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The time when the request must have been completed by."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 248,
            "key.docoffset" : 13006,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delete<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 190,
            "key.name" : "delete(url:deadline:logger:)",
            "key.namelength" : 65,
            "key.nameoffset" : 13270,
            "key.offset" : 13265,
            "key.parsed_declaration" : "public func delete(url: String, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 323,
            "key.parsed_scope.start" : 321,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C6delete3url8deadline3NIO15EventLoopFutureCyAC8ResponseVGSS_AG11NIODeadlineVSgtF\">delete(url:deadline:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (String, NIODeadline?, Logger) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s3url8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0I0C8ResponseVGSS_AD11NIODeadlineVSg7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C6delete3url8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGSS_AH11NIODeadlineVSg7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type> = .GET, url: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13787
              }
            ],
            "key.bodylength" : 308,
            "key.bodyoffset" : 13951,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request using specified URL.\n\n- parameters:\n    - method: Request method.\n    - url: Request url.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func execute(_ method: HTTPMethod = .GET, url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"333\" column=\"17\"><Name>execute(_:url:body:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF<\/USR><Declaration>public func execute(_ method: HTTPMethod = .GET, url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request method.<\/Para><\/Discussion><\/Parameter><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request url.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 333,
            "key.doc.name" : "execute(_:url:body:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Request method."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request url."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 322,
            "key.docoffset" : 13461,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type> = .GET<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 466,
            "key.name" : "execute(_:url:body:deadline:logger:)",
            "key.namelength" : 121,
            "key.nameoffset" : 13799,
            "key.offset" : 13794,
            "key.parsed_declaration" : "public func execute(_ method: HTTPMethod = .GET, url: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 340,
            "key.parsed_scope.start" : 333,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (HTTPMethod, String, HTTPClient.Body?, NIODeadline?, Logger?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s_3url4body8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0J0C8ResponseVG8NIOHTTP110HTTPMethodO_SSAJ4BodyVSgAE11NIODeadlineVSg7Logging6LoggerVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type> = .GET, socketPath: <Type usr=\"s:SS\">String<\/Type>, urlPath: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14791
              }
            ],
            "key.bodylength" : 459,
            "key.bodyoffset" : 14979,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP+UNIX request to a unix domain socket path, using the specified URL as the request to send to the server.\n\n- parameters:\n    - method: Request method.\n    - socketPath: The path to the unix domain socket to connect to.\n    - urlPath: The URL path and query that will be sent to the server.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func execute(_ method: HTTPMethod = .GET, socketPath: String, urlPath: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"351\" column=\"17\"><Name>execute(_:socketPath:urlPath:body:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF<\/USR><Declaration>public func execute(_ method: HTTPMethod = .GET, socketPath: String, urlPath: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP+UNIX request to a unix domain socket path, using the specified URL as the request to send to the server.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request method.<\/Para><\/Discussion><\/Parameter><Parameter><Name>socketPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The path to the unix domain socket to connect to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>urlPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The URL path and query that will be sent to the server.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 351,
            "key.doc.name" : "execute(_:socketPath:urlPath:body:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Request method."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The path to the unix domain socket to connect to."
                  }
                ],
                "name" : "socketPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The URL path and query that will be sent to the server."
                  }
                ],
                "name" : "urlPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 521,
            "key.docoffset" : 14266,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type> = .GET<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>socketPath<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>urlPath<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 641,
            "key.name" : "execute(_:socketPath:urlPath:body:deadline:logger:)",
            "key.namelength" : 145,
            "key.nameoffset" : 14803,
            "key.offset" : 14798,
            "key.parsed_declaration" : "public func execute(_ method: HTTPMethod = .GET, socketPath: String, urlPath: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 361,
            "key.parsed_scope.start" : 351,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (HTTPMethod, String, String, HTTPClient.Body?, NIODeadline?, Logger?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s_10socketPath03urlB04body8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0L0C8ResponseVG8NIOHTTP110HTTPMethodO_S2SAK4BodyVSgAF11NIODeadlineVSg7Logging6LoggerVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type> = .GET, secureSocketPath: <Type usr=\"s:SS\">String<\/Type>, urlPath: <Type usr=\"s:SS\">String<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15986
              }
            ],
            "key.bodylength" : 466,
            "key.bodyoffset" : 16180,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTPS+UNIX request to a unix domain socket path over TLS, using the specified URL as the request to send to the server.\n\n- parameters:\n    - method: Request method.\n    - secureSocketPath: The path to the unix domain socket to connect to.\n    - urlPath: The URL path and query that will be sent to the server.\n    - body: Request body.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func execute(_ method: HTTPMethod = .GET, secureSocketPath: String, urlPath: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"372\" column=\"17\"><Name>execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF<\/USR><Declaration>public func execute(_ method: HTTPMethod = .GET, secureSocketPath: String, urlPath: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTPS+UNIX request to a unix domain socket path over TLS, using the specified URL as the request to send to the server.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request method.<\/Para><\/Discussion><\/Parameter><Parameter><Name>secureSocketPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The path to the unix domain socket to connect to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>urlPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The URL path and query that will be sent to the server.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 372,
            "key.doc.name" : "execute(_:secureSocketPath:urlPath:body:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Request method."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The path to the unix domain socket to connect to."
                  }
                ],
                "name" : "secureSocketPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The URL path and query that will be sent to the server."
                  }
                ],
                "name" : "urlPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body."
                  }
                ],
                "name" : "body"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 537,
            "key.docoffset" : 15445,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type> = .GET<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>secureSocketPath<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>urlPath<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 654,
            "key.name" : "execute(_:secureSocketPath:urlPath:body:deadline:logger:)",
            "key.namelength" : 151,
            "key.nameoffset" : 15998,
            "key.offset" : 15993,
            "key.parsed_declaration" : "public func execute(_ method: HTTPMethod = .GET, secureSocketPath: String, urlPath: String, body: Body? = nil, deadline: NIODeadline? = nil, logger: Logger? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 382,
            "key.parsed_scope.start" : 372,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (HTTPMethod, String, String, HTTPClient.Body?, NIODeadline?, Logger?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s_16secureSocketPath03urlC04body8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0M0C8ResponseVG8NIOHTTP110HTTPMethodO_S2SAK4BodyVSgAF11NIODeadlineVSg7Logging6LoggerVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 16865
              }
            ],
            "key.bodylength" : 107,
            "key.bodyoffset" : 16963,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request using specified URL.\n\n- parameters:\n    - request: HTTP request to execute.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func execute(request: Request, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"389\" column=\"17\"><Name>execute(request:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF<\/USR><Declaration>public func execute(request: Request, deadline: NIODeadline? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 389,
            "key.doc.name" : "execute(request:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 208,
            "key.docoffset" : 16653,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 199,
            "key.name" : "execute(request:deadline:)",
            "key.namelength" : 55,
            "key.nameoffset" : 16877,
            "key.offset" : 16872,
            "key.parsed_declaration" : "public func execute(request: Request, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 391,
            "key.parsed_scope.start" : 389,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (HTTPClient.Request, NIODeadline?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s7request8deadline3NIO15EventLoopFutureCy15AsyncHTTPClient0H0C8ResponseVGAH7RequestV_AC11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 17347
              }
            ],
            "key.bodylength" : 187,
            "key.bodyoffset" : 17461,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request using specified URL.\n\n- parameters:\n    - request: HTTP request to execute.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func execute(request: Request, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"399\" column=\"17\"><Name>execute(request:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF<\/USR><Declaration>public func execute(request: Request, deadline: NIODeadline? = nil, logger: Logger) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 399,
            "key.doc.name" : "execute(request:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 266,
            "key.docoffset" : 17077,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 295,
            "key.name" : "execute(request:deadline:logger:)",
            "key.namelength" : 71,
            "key.nameoffset" : 17359,
            "key.offset" : 17354,
            "key.parsed_declaration" : "public func execute(request: Request, deadline: NIODeadline? = nil, logger: Logger) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 402,
            "key.parsed_scope.start" : 399,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let accumulator: <Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>accumulator<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 55,
                "key.name" : "accumulator",
                "key.namelength" : 11,
                "key.nameoffset" : 17474,
                "key.offset" : 17470,
                "key.parsed_declaration" : "let accumulator = ResponseAccumulator(request: request)",
                "key.parsed_scope.end" : 400,
                "key.parsed_scope.start" : 400,
                "key.typename" : "ResponseAccumulator",
                "key.typeusr" : "$s15AsyncHTTPClient19ResponseAccumulatorCD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF11accumulatorL_AA0K11AccumulatorCvp"
              }
            ],
            "key.typename" : "(HTTPClient) -> (HTTPClient.Request, NIODeadline?, Logger) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s7request8deadline6logger3NIO15EventLoopFutureCy15AsyncHTTPClient0I0C8ResponseVGAI7RequestV_AD11NIODeadlineVSg7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, eventLoop: <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 17919
              }
            ],
            "key.bodylength" : 213,
            "key.bodyoffset" : 18049,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request using specified URL.\n\n- parameters:\n    - request: HTTP request to execute.\n    - eventLoop: NIO Event Loop preference.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func execute(request: Request, eventLoop: EventLoopPreference, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"410\" column=\"17\"><Name>execute(request:eventLoop:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF<\/USR><Declaration>public func execute(request: Request, eventLoop: EventLoopPreference, deadline: NIODeadline? = nil) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request using specified URL.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>eventLoop<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>NIO Event Loop preference.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 410,
            "key.doc.name" : "execute(request:eventLoop:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "NIO Event Loop preference."
                  }
                ],
                "name" : "eventLoop"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 260,
            "key.docoffset" : 17655,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 337,
            "key.name" : "execute(request:eventLoop:deadline:)",
            "key.namelength" : 87,
            "key.nameoffset" : 17931,
            "key.offset" : 17926,
            "key.parsed_declaration" : "public func execute(request: Request, eventLoop: EventLoopPreference, deadline: NIODeadline? = nil) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 415,
            "key.parsed_scope.start" : 410,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (HTTPClient.Request, HTTPClient.EventLoopPreference, NIODeadline?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s7request9eventLoop8deadline3NIO05EventC6FutureCy15AsyncHTTPClient0I0C8ResponseVGAI7RequestV_AI0fC10PreferenceVAD11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, eventLoop eventLoopPreference: <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>?) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18626
              }
            ],
            "key.bodylength" : 219,
            "key.bodyoffset" : 18865,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request and handle response processing using provided delegate.\n\n- parameters:\n    - request: HTTP request to execute.\n    - eventLoop: NIO Event Loop preference.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func execute(request: Request, eventLoop eventLoopPreference: EventLoopPreference, deadline: NIODeadline? = nil, logger: Logger?) -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"424\" column=\"17\"><Name>execute(request:eventLoop:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF<\/USR><Declaration>public func execute(request: Request, eventLoop eventLoopPreference: EventLoopPreference, deadline: NIODeadline? = nil, logger: Logger?) -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request and handle response processing using provided delegate.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>eventLoop<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>NIO Event Loop preference.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 424,
            "key.doc.name" : "execute(request:eventLoop:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "NIO Event Loop preference."
                  }
                ],
                "name" : "eventLoop"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 353,
            "key.docoffset" : 18269,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoopPreference<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 452,
            "key.name" : "execute(request:eventLoop:deadline:logger:)",
            "key.namelength" : 196,
            "key.nameoffset" : 18638,
            "key.offset" : 18633,
            "key.parsed_declaration" : "public func execute(request: Request,\n                    eventLoop eventLoopPreference: EventLoopPreference,\n                    deadline: NIODeadline? = nil,\n                    logger: Logger?) -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 430,
            "key.parsed_scope.start" : 424,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let accumulator: <Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>accumulator<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 55,
                "key.name" : "accumulator",
                "key.namelength" : 11,
                "key.nameoffset" : 18878,
                "key.offset" : 18874,
                "key.parsed_declaration" : "let accumulator = ResponseAccumulator(request: request)",
                "key.parsed_scope.end" : 428,
                "key.parsed_scope.start" : 428,
                "key.typename" : "ResponseAccumulator",
                "key.typeusr" : "$s15AsyncHTTPClient19ResponseAccumulatorCD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF11accumulatorL_AA0L11AccumulatorCvp"
              }
            ],
            "key.typename" : "(HTTPClient) -> (HTTPClient.Request, HTTPClient.EventLoopPreference, NIODeadline?, Logger?) -> EventLoopFuture<HTTPClient.Response>",
            "key.typeusr" : "$s7request9eventLoop8deadline6logger3NIO05EventC6FutureCy15AsyncHTTPClient0J0C8ResponseVGAJ7RequestV_AJ0gC10PreferenceVAE11NIODeadlineVSg7Logging6LoggerVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute&lt;Delegate&gt;(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, delegate: <Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF0L0L_xmfp\">Delegate<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF0L0L_xmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt; where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 19398
              }
            ],
            "key.bodylength" : 127,
            "key.bodyoffset" : 19676,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request and handle response processing using provided delegate.\n\n- parameters:\n    - request: HTTP request to execute.\n    - delegate: Delegate to process response parts.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func execute<Delegate>(request: Request, delegate: Delegate, deadline: NIODeadline? = nil) -> Task<Delegate.Response> where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"438\" column=\"17\"><Name>execute(request:delegate:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF<\/USR><Declaration>public func execute&lt;Delegate&gt;(request: Request, delegate: Delegate, deadline: NIODeadline? = nil) -&gt; Task&lt;Delegate.Response&gt; where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request and handle response processing using provided delegate.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>delegate<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Delegate to process response parts.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 438,
            "key.doc.name" : "execute(request:delegate:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Delegate to process response parts."
                  }
                ],
                "name" : "delegate"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 303,
            "key.docoffset" : 19091,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF0L0L_xmfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegate<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF0L0L_xmfp\">Delegate<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF0L0L_xmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 399,
            "key.name" : "execute(request:delegate:deadline:)",
            "key.namelength" : 237,
            "key.nameoffset" : 19410,
            "key.offset" : 19405,
            "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate>(request: Request,\n                                                          delegate: Delegate,\n                                                          deadline: NIODeadline? = nil) -> Task<Delegate.Response>",
            "key.parsed_scope.end" : 442,
            "key.parsed_scope.start" : 438,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 26,
                    "key.offset" : 19428
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "HTTPClientResponseDelegate"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 36,
                "key.name" : "Delegate",
                "key.namelength" : 8,
                "key.nameoffset" : 19418,
                "key.offset" : 19418,
                "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate",
                "key.parsed_scope.end" : 438,
                "key.parsed_scope.start" : 438,
                "key.typename" : "Delegate.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF0L0L_xmfp"
              }
            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (HTTPClient) -> (HTTPClient.Request, Delegate, NIODeadline?) -> HTTPClient.Task<Delegate.Response>",
            "key.typeusr" : "$s7request8delegate8deadline15AsyncHTTPClient0E0C4TaskCy_8ResponseQzGAF7RequestV_x3NIO11NIODeadlineVSgtcAD0eG8DelegateRzluD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute&lt;Delegate&gt;(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, delegate: <Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF0O0L_xmfp\">Delegate<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF0O0L_xmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt; where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 20175
              }
            ],
            "key.bodylength" : 132,
            "key.bodyoffset" : 20531,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request and handle response processing using provided delegate.\n\n- parameters:\n    - request: HTTP request to execute.\n    - delegate: Delegate to process response parts.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func execute<Delegate>(request: Request, delegate: Delegate, deadline: NIODeadline? = nil, logger: Logger) -> Task<Delegate.Response> where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"451\" column=\"17\"><Name>execute(request:delegate:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF<\/USR><Declaration>public func execute&lt;Delegate&gt;(request: Request, delegate: Delegate, deadline: NIODeadline? = nil, logger: Logger) -&gt; Task&lt;Delegate.Response&gt; where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request and handle response processing using provided delegate.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>delegate<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Delegate to process response parts.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 451,
            "key.doc.name" : "execute(request:delegate:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Delegate to process response parts."
                  }
                ],
                "name" : "delegate"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 361,
            "key.docoffset" : 19810,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF0O0L_xmfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegate<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF0O0L_xmfp\">Delegate<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF0O0L_xmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 482,
            "key.name" : "execute(request:delegate:deadline:logger:)",
            "key.namelength" : 315,
            "key.nameoffset" : 20187,
            "key.offset" : 20182,
            "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate>(request: Request,\n                                                          delegate: Delegate,\n                                                          deadline: NIODeadline? = nil,\n                                                          logger: Logger) -> Task<Delegate.Response>",
            "key.parsed_scope.end" : 456,
            "key.parsed_scope.start" : 451,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 26,
                    "key.offset" : 20205
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "HTTPClientResponseDelegate"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 36,
                "key.name" : "Delegate",
                "key.namelength" : 8,
                "key.nameoffset" : 20195,
                "key.offset" : 20195,
                "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate",
                "key.parsed_scope.end" : 451,
                "key.parsed_scope.start" : 451,
                "key.typename" : "Delegate.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF0O0L_xmfp"
              }
            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (HTTPClient) -> (HTTPClient.Request, Delegate, NIODeadline?, Logger) -> HTTPClient.Task<Delegate.Response>",
            "key.typeusr" : "$s7request8delegate8deadline6logger15AsyncHTTPClient0F0C4TaskCy_8ResponseQzGAG7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtcAE0fH8DelegateRzluD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute&lt;Delegate&gt;(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, delegate: <Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp\">Delegate<\/Type>, eventLoop eventLoopPreference: <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt; where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 21087
              }
            ],
            "key.bodylength" : 271,
            "key.bodyoffset" : 21479,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request and handle response processing using provided delegate.\n\n- parameters:\n    - request: HTTP request to execute.\n    - delegate: Delegate to process response parts.\n    - eventLoop: NIO Event Loop preference.\n    - deadline: Point in time by which the request must complete.\n    - logger: The logger to use for this request.",
            "key.doc.declaration" : "public func execute<Delegate>(request: Request, delegate: Delegate, eventLoop eventLoopPreference: EventLoopPreference, deadline: NIODeadline? = nil) -> Task<Delegate.Response> where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"466\" column=\"17\"><Name>execute(request:delegate:eventLoop:deadline:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF<\/USR><Declaration>public func execute&lt;Delegate&gt;(request: Request, delegate: Delegate, eventLoop eventLoopPreference: EventLoopPreference, deadline: NIODeadline? = nil) -&gt; Task&lt;Delegate.Response&gt; where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request and handle response processing using provided delegate.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>delegate<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Delegate to process response parts.<\/Para><\/Discussion><\/Parameter><Parameter><Name>eventLoop<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>NIO Event Loop preference.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logger<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The logger to use for this request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 466,
            "key.doc.name" : "execute(request:delegate:eventLoop:deadline:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Delegate to process response parts."
                  }
                ],
                "name" : "delegate"
              },
              {
                "discussion" : [
                  {
                    "Para" : "NIO Event Loop preference."
                  }
                ],
                "name" : "eventLoop"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The logger to use for this request."
                  }
                ],
                "name" : "logger"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 413,
            "key.docoffset" : 20670,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegate<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp\">Delegate<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoopPreference<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 657,
            "key.name" : "execute(request:delegate:eventLoop:deadline:)",
            "key.namelength" : 351,
            "key.nameoffset" : 21099,
            "key.offset" : 21094,
            "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate>(request: Request,\n                                                          delegate: Delegate,\n                                                          eventLoop eventLoopPreference: EventLoopPreference,\n                                                          deadline: NIODeadline? = nil) -> Task<Delegate.Response>",
            "key.parsed_scope.end" : 475,
            "key.parsed_scope.start" : 466,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:logger:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 26,
                    "key.offset" : 21117
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "HTTPClientResponseDelegate"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 36,
                "key.name" : "Delegate",
                "key.namelength" : 8,
                "key.nameoffset" : 21107,
                "key.offset" : 21107,
                "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate",
                "key.parsed_scope.end" : 466,
                "key.parsed_scope.start" : 466,
                "key.typename" : "Delegate.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF0P0L_xmfp"
              }
            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (HTTPClient) -> (HTTPClient.Request, Delegate, HTTPClient.EventLoopPreference, NIODeadline?) -> HTTPClient.Task<Delegate.Response>",
            "key.typeusr" : "$s7request8delegate9eventLoop8deadline15AsyncHTTPClient0G0C4TaskCy_8ResponseQzGAG7RequestV_xAG05EventD10PreferenceV3NIO11NIODeadlineVSgtcAE0gI8DelegateRzluD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute&lt;Delegate&gt;(request: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, delegate: <Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/Type>, eventLoop eventLoopPreference: <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>? = nil, logger originalLogger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>?) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt; where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 22116
              }
            ],
            "key.bodylength" : 5596,
            "key.bodyoffset" : 22602,
            "key.doc.column" : 17,
            "key.doc.comment" : "Execute arbitrary HTTP request and handle response processing using provided delegate.\n\n- parameters:\n    - request: HTTP request to execute.\n    - delegate: Delegate to process response parts.\n    - eventLoop: NIO Event Loop preference.\n    - deadline: Point in time by which the request must complete.",
            "key.doc.declaration" : "public func execute<Delegate>(request: Request, delegate: Delegate, eventLoop eventLoopPreference: EventLoopPreference, deadline: NIODeadline? = nil, logger originalLogger: Logger?) -> Task<Delegate.Response> where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"484\" column=\"17\"><Name>execute(request:delegate:eventLoop:deadline:logger:)<\/Name><USR>s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF<\/USR><Declaration>public func execute&lt;Delegate&gt;(request: Request, delegate: Delegate, eventLoop eventLoopPreference: EventLoopPreference, deadline: NIODeadline? = nil, logger originalLogger: Logger?) -&gt; Task&lt;Delegate.Response&gt; where Delegate : AsyncHTTPClient.HTTPClientResponseDelegate<\/Declaration><CommentParts><Abstract><Para>Execute arbitrary HTTP request and handle response processing using provided delegate.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP request to execute.<\/Para><\/Discussion><\/Parameter><Parameter><Name>delegate<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Delegate to process response parts.<\/Para><\/Discussion><\/Parameter><Parameter><Name>eventLoop<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>NIO Event Loop preference.<\/Para><\/Discussion><\/Parameter><Parameter><Name>deadline<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Point in time by which the request must complete.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 484,
            "key.doc.name" : "execute(request:delegate:eventLoop:deadline:logger:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP request to execute."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Delegate to process response parts."
                  }
                ],
                "name" : "delegate"
              },
              {
                "discussion" : [
                  {
                    "Para" : "NIO Event Loop preference."
                  }
                ],
                "name" : "eventLoop"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Point in time by which the request must complete."
                  }
                ],
                "name" : "deadline"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 355,
            "key.docoffset" : 21757,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegate<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoopPreference<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label> <decl.var.parameter.name>originalLogger<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 6076,
            "key.name" : "execute(request:delegate:eventLoop:deadline:logger:)",
            "key.namelength" : 445,
            "key.nameoffset" : 22128,
            "key.offset" : 22123,
            "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate>(request: Request,\n                                                          delegate: Delegate,\n                                                          eventLoop eventLoopPreference: EventLoopPreference,\n                                                          deadline: NIODeadline? = nil,\n                                                          logger originalLogger: Logger?) -> Task<Delegate.Response>",
            "key.parsed_scope.end" : 603,
            "key.parsed_scope.start" : 484,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_3url4body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_SSAC4BodyVSgAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:url:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_10socketPath03urlE04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:socketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute_16secureSocketPath03urlF04body8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVG8NIOHTTP110HTTPMethodO_S2SAC4BodyVSgAJ11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(_:secureSocketPath:urlPath:body:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AG11NIODeadlineVSgtF\">execute(request:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8deadline6logger3NIO15EventLoopFutureCyAC8ResponseVGAC7RequestV_AH11NIODeadlineVSg7Logging6LoggerVtF\">execute(request:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0iF10PreferenceVAH11NIODeadlineVSgtF\">execute(request:eventLoop:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request9eventLoop8deadline6logger3NIO05EventF6FutureCyAC8ResponseVGAC7RequestV_AC0jF10PreferenceVAI11NIODeadlineVSg7Logging6LoggerVSgtF\">execute(request:eventLoop:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSgtAA0bH8DelegateRzlF\">execute(request:delegate:deadline:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_x3NIO11NIODeadlineVSg7Logging6LoggerVtAA0bI8DelegateRzlF\">execute(request:delegate:deadline:logger:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadlineAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSgtAA0bJ8DelegateRzlF\">execute(request:delegate:eventLoop:deadline:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 26,
                    "key.offset" : 22146
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "HTTPClientResponseDelegate"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 36,
                "key.name" : "Delegate",
                "key.namelength" : 8,
                "key.nameoffset" : 22136,
                "key.offset" : 22136,
                "key.parsed_declaration" : "public func execute<Delegate: HTTPClientResponseDelegate",
                "key.parsed_scope.end" : 484,
                "key.parsed_scope.start" : 484,
                "key.typename" : "Delegate.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logger<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 131,
                "key.name" : "logger",
                "key.namelength" : 6,
                "key.nameoffset" : 22615,
                "key.offset" : 22611,
                "key.parsed_declaration" : "let logger = (originalLogger ?? HTTPClient.loggingDisabled).attachingRequestInformation(request, requestID: globalRequestID.add(1))",
                "key.parsed_scope.end" : 489,
                "key.parsed_scope.start" : 489,
                "key.typename" : "Logger",
                "key.typeusr" : "$s7Logging6LoggerVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlFAIL_AYvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let taskEL: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>taskEL<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "taskEL",
                "key.namelength" : 6,
                "key.nameoffset" : 22755,
                "key.offset" : 22751,
                "key.parsed_declaration" : "let taskEL: EventLoop",
                "key.parsed_scope.end" : 490,
                "key.parsed_scope.start" : 490,
                "key.typename" : "EventLoop",
                "key.typeusr" : "$s3NIO9EventLoop_pD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF6taskELL_AS0mG0_pvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let failedTask: <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>failedTask<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 543,
                "key.name" : "failedTask",
                "key.namelength" : 10,
                "key.nameoffset" : 23758,
                "key.offset" : 23754,
                "key.parsed_declaration" : "let failedTask: Task<Delegate.Response>? = self.stateLock.withLock {\n    switch state {\n    case .upAndRunning:\n        return nil\n    case .shuttingDown, .shutDown:\n        logger.debug(\"client is shutting down, failing request\")\n        return Task<Delegate.Response>.failedTask(eventLoop: taskEL,\n                                                  error: HTTPClientError.alreadyShutdown,\n                                                  logger: logger)\n    }\n}",
                "key.parsed_scope.end" : 507,
                "key.parsed_scope.start" : 507,
                "key.typename" : "HTTPClient.Task<Delegate.Response>?",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C4TaskCy_8ResponseAA0bD8DelegatePQzGSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF06failedJ0L_ANSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let redirectHandler: <Type usr=\"s:15AsyncHTTPClient15RedirectHandlerV\">RedirectHandler<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>redirectHandler<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient15RedirectHandlerV\">RedirectHandler<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF0S0L_xmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 56,
                "key.name" : "redirectHandler",
                "key.namelength" : 15,
                "key.nameoffset" : 24393,
                "key.offset" : 24389,
                "key.parsed_declaration" : "let redirectHandler: RedirectHandler<Delegate.Response>?",
                "key.parsed_scope.end" : 523,
                "key.parsed_scope.start" : 523,
                "key.typename" : "RedirectHandler<Delegate.Response>?",
                "key.typeusr" : "$s15AsyncHTTPClient15RedirectHandlerVy8ResponseAA0bE8DelegatePQzGSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF15redirectHandlerL_AA08RedirectU0VyAMGSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;Delegate.Response&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;Delegate.Response&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 69,
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 25157,
                "key.offset" : 25153,
                "key.parsed_declaration" : "let task = Task<Delegate.Response>(eventLoop: taskEL, logger: logger)",
                "key.parsed_scope.end" : 540,
                "key.parsed_scope.start" : 540,
                "key.typename" : "HTTPClient.Task<Delegate.Response>",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C4TaskCy_8ResponseAA0bD8DelegatePQzGD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF4taskL_ANvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let setupComplete: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>setupComplete<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 53,
                "key.name" : "setupComplete",
                "key.namelength" : 13,
                "key.nameoffset" : 25235,
                "key.offset" : 25231,
                "key.parsed_declaration" : "let setupComplete = taskEL.makePromise(of: Void.self)",
                "key.parsed_scope.end" : 541,
                "key.parsed_scope.start" : 541,
                "key.typename" : "EventLoopPromise<()>",
                "key.typeusr" : "$s3NIO16EventLoopPromiseVyytGD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF13setupCompleteL_AS0mG7PromiseVyytGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let connection: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>connection<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 429,
                "key.name" : "connection",
                "key.namelength" : 10,
                "key.nameoffset" : 25297,
                "key.offset" : 25293,
                "key.parsed_declaration" : "let connection = self.pool.getConnection(request,\n                                         preference: eventLoopPreference,\n                                         taskEventLoop: taskEL,\n                                         deadline: deadline,\n                                         setupComplete: setupComplete.futureResult,\n                                         logger: logger)",
                "key.parsed_scope.end" : 542,
                "key.parsed_scope.start" : 542,
                "key.typename" : "EventLoopFuture<Connection>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCy15AsyncHTTPClient10ConnectionCGD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF10connectionL_AS0mG6FutureCyAA10ConnectionCGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let taskHandler: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/Type>&lt;Delegate&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>taskHandler<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/ref.class>&lt;Delegate&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 392,
                "key.name" : "taskHandler",
                "key.namelength" : 11,
                "key.nameoffset" : 25736,
                "key.offset" : 25732,
                "key.parsed_declaration" : "let taskHandler = TaskHandler(task: task,\n                              kind: request.kind,\n                              delegate: delegate,\n                              redirectHandler: redirectHandler,\n                              ignoreUncleanSSLShutdown: self.configuration.ignoreUncleanSSLShutdown,\n                              logger: logger)",
                "key.parsed_scope.end" : 549,
                "key.parsed_scope.start" : 549,
                "key.typename" : "TaskHandler<Delegate>",
                "key.typeusr" : "$s15AsyncHTTPClient11TaskHandlerCyxGD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF11taskHandlerL_AA0jU0CyxGvp"
              }
            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (HTTPClient) -> (HTTPClient.Request, Delegate, HTTPClient.EventLoopPreference, NIODeadline?, Logger?) -> HTTPClient.Task<Delegate.Response>",
            "key.typeusr" : "$s7request8delegate9eventLoop8deadline6logger15AsyncHTTPClient0H0C4TaskCy_8ResponseQzGAH7RequestV_xAH05EventD10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtcAF0hJ8DelegateRzluD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7execute7request8delegate9eventLoop8deadline6loggerAC4TaskCy_8ResponseQzGAC7RequestV_xAC05EventG10PreferenceV3NIO11NIODeadlineVSg7Logging6LoggerVSgtAA0bK8DelegateRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func resolve(timeout: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type>?, deadline: <Type usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/Type>?) -&gt; <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 28205
              }
            ],
            "key.bodylength" : 360,
            "key.bodyoffset" : 28288,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>resolve<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>timeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>deadline<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO11NIODeadlineV\">NIODeadline<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 436,
            "key.name" : "resolve(timeout:deadline:)",
            "key.namelength" : 53,
            "key.nameoffset" : 28218,
            "key.offset" : 28213,
            "key.parsed_declaration" : "private func resolve(timeout: TimeAmount?, deadline: NIODeadline?) -> TimeAmount?",
            "key.parsed_scope.end" : 616,
            "key.parsed_scope.start" : 605,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient) -> (TimeAmount?, NIODeadline?) -> TimeAmount?",
            "key.typeusr" : "$s7timeout8deadline3NIO10TimeAmountVSgAF_AC11NIODeadlineVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7resolve33_797EF4A15335F12F4B8BAA3062C343BCLL7timeout8deadline3NIO10TimeAmountVSgAK_AH11NIODeadlineVSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static func resolveAddress(host: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>, proxy: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type>?) -&gt; (host: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.bodylength" : 165,
            "key.bodyoffset" : 28766,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>resolveAddress<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>proxy<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>host<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>port<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 277,
            "key.name" : "resolveAddress(host:port:proxy:)",
            "key.namelength" : 68,
            "key.nameoffset" : 28667,
            "key.offset" : 28655,
            "key.parsed_declaration" : "static func resolveAddress(host: String, port: Int, proxy: Configuration.Proxy?) -> (host: String, port: Int)",
            "key.parsed_scope.end" : 625,
            "key.parsed_scope.start" : 618,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClient.Type) -> (String, Int, HTTPClient.Configuration.Proxy?) -> (host: String, port: Int)",
            "key.typeusr" : "$s4host4port5proxySSAA_SiABtSS_Si15AsyncHTTPClient0E0C13ConfigurationV5ProxyVSgtcD",
            "key.usr" : "s:15AsyncHTTPClient0B0C14resolveAddress4host4port5proxySSAE_SiAFtSS_SiAC13ConfigurationV5ProxyVSgtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.Configuration<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 28974
              }
            ],
            "key.bodylength" : 5344,
            "key.bodyoffset" : 29003,
            "key.doc.column" : 19,
            "key.doc.comment" : "`HTTPClient` configuration.",
            "key.doc.declaration" : "public struct AsyncHTTPClient.HTTPClient.Configuration",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"628\" column=\"19\"><Name>Configuration<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV<\/USR><Declaration>public struct AsyncHTTPClient.HTTPClient.Configuration<\/Declaration><CommentParts><Abstract><Para><codeVoice>HTTPClient<\/codeVoice> configuration.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 628,
            "key.doc.name" : "Configuration",
            "key.doc.type" : "Class",
            "key.doclength" : 32,
            "key.docoffset" : 28938,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>Configuration<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 5367,
            "key.name" : "Configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 28988,
            "key.offset" : 28981,
            "key.parsed_declaration" : "public struct Configuration",
            "key.parsed_scope.end" : 735,
            "key.parsed_scope.start" : 628,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var tlsConfiguration: <Type usr=\"s:Sq\">Optional<\/Type>&lt;<Type usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 29087
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "TLS configuration, defaults to `TLSConfiguration.forClient()`.",
                "key.doc.declaration" : "public var tlsConfiguration: Optional<TLSConfiguration>",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"630\" column=\"20\"><Name>tlsConfiguration<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC06NIOSSL16TLSConfigurationVSgvp<\/USR><Declaration>public var tlsConfiguration: Optional&lt;TLSConfiguration&gt;<\/Declaration><CommentParts><Abstract><Para>TLS configuration, defaults to <codeVoice>TLSConfiguration.forClient()<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 630,
                "key.doc.name" : "tlsConfiguration",
                "key.doc.type" : "Other",
                "key.doclength" : 67,
                "key.docoffset" : 29012,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>tlsConfiguration<\/decl.name>: <decl.var.type><ref.enum usr=\"s:Sq\">Optional<\/ref.enum>&lt;<ref.struct usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 48,
                "key.name" : "tlsConfiguration",
                "key.namelength" : 16,
                "key.nameoffset" : 29098,
                "key.offset" : 29094,
                "key.parsed_declaration" : "public var tlsConfiguration: Optional<TLSConfiguration>",
                "key.parsed_scope.end" : 630,
                "key.parsed_scope.start" : 630,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Optional<TLSConfiguration>",
                "key.typeusr" : "$s6NIOSSL16TLSConfigurationVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC06NIOSSL16TLSConfigurationVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var redirectConfiguration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 29557
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Enables following 3xx redirects automatically, defaults to `RedirectConfiguration()`.\n\nFollowing redirects are supported:\n - `301: Moved Permanently`\n - `302: Found`\n - `303: See Other`\n - `304: Not Modified`\n - `305: Use Proxy`\n - `307: Temporary Redirect`\n - `308: Permanent Redirect`",
                "key.doc.declaration" : "public var redirectConfiguration: RedirectConfiguration",
                "key.doc.discussion" : [
                  {
                    "Para" : "Following redirects are supported:"
                  },
                  {
                    "List-Bullet" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"641\" column=\"20\"><Name>redirectConfiguration<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV08redirectC0AE08RedirectC0Vvp<\/USR><Declaration>public var redirectConfiguration: RedirectConfiguration<\/Declaration><CommentParts><Abstract><Para>Enables following 3xx redirects automatically, defaults to <codeVoice>RedirectConfiguration()<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Following redirects are supported:<\/Para><List-Bullet><Item><Para><codeVoice>301: Moved Permanently<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>302: Found<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>303: See Other<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>304: Not Modified<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>305: Use Proxy<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>307: Temporary Redirect<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>308: Permanent Redirect<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 641,
                "key.doc.name" : "redirectConfiguration",
                "key.doc.type" : "Other",
                "key.doclength" : 398,
                "key.docoffset" : 29151,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>redirectConfiguration<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 48,
                "key.name" : "redirectConfiguration",
                "key.namelength" : 21,
                "key.nameoffset" : 29568,
                "key.offset" : 29564,
                "key.parsed_declaration" : "public var redirectConfiguration: RedirectConfiguration",
                "key.parsed_scope.end" : 641,
                "key.parsed_scope.start" : 641,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPClient.Configuration.RedirectConfiguration",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08redirectC0AE08RedirectC0Vvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var timeout: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 29721
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Default client timeout, defaults to no `read` timeout and 10 seconds `connect` timeout.",
                "key.doc.declaration" : "public var timeout: Timeout",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"643\" column=\"20\"><Name>timeout<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV7timeoutAE7TimeoutVvp<\/USR><Declaration>public var timeout: Timeout<\/Declaration><CommentParts><Abstract><Para>Default client timeout, defaults to no <codeVoice>read<\/codeVoice> timeout and 10 seconds <codeVoice>connect<\/codeVoice> timeout.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 643,
                "key.doc.name" : "timeout",
                "key.doc.type" : "Other",
                "key.doclength" : 92,
                "key.docoffset" : 29621,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>timeout<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 20,
                "key.name" : "timeout",
                "key.namelength" : 7,
                "key.nameoffset" : 29732,
                "key.offset" : 29728,
                "key.parsed_declaration" : "public var timeout: Timeout",
                "key.parsed_scope.end" : 643,
                "key.parsed_scope.start" : 643,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPClient.Configuration.Timeout",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV7TimeoutVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV7timeoutAE7TimeoutVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var connectionPool: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV\">ConnectionPool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 29800
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Connection pool configuration.",
                "key.doc.declaration" : "public var connectionPool: ConnectionPool",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"645\" column=\"20\"><Name>connectionPool<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV14connectionPoolAE010ConnectionE0Vvp<\/USR><Declaration>public var connectionPool: ConnectionPool<\/Declaration><CommentParts><Abstract><Para>Connection pool configuration.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 645,
                "key.doc.name" : "connectionPool",
                "key.doc.type" : "Other",
                "key.doclength" : 35,
                "key.docoffset" : 29757,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>connectionPool<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV\">ConnectionPool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 34,
                "key.name" : "connectionPool",
                "key.namelength" : 14,
                "key.nameoffset" : 29811,
                "key.offset" : 29807,
                "key.parsed_declaration" : "public var connectionPool: ConnectionPool",
                "key.parsed_scope.end" : 645,
                "key.parsed_scope.start" : 645,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPClient.Configuration.ConnectionPool",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV14connectionPoolAE010ConnectionE0Vvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var proxy: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 29900
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Upstream proxy, defaults to no proxy.",
                "key.doc.declaration" : "public var proxy: Proxy?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"647\" column=\"20\"><Name>proxy<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV5proxyAE5ProxyVSgvp<\/USR><Declaration>public var proxy: Proxy?<\/Declaration><CommentParts><Abstract><Para>Upstream proxy, defaults to no proxy.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 647,
                "key.doc.name" : "proxy",
                "key.doc.type" : "Other",
                "key.doclength" : 42,
                "key.docoffset" : 29850,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>proxy<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 17,
                "key.name" : "proxy",
                "key.namelength" : 5,
                "key.nameoffset" : 29911,
                "key.offset" : 29907,
                "key.parsed_declaration" : "public var proxy: Proxy?",
                "key.parsed_scope.end" : 647,
                "key.parsed_scope.start" : 647,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPClient.Configuration.Proxy?",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV5ProxyVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV5proxyAE5ProxyVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var decompression: <Type usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 30026
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Enables automatic body decompression. Supported algorithms are gzip and deflate.",
                "key.doc.declaration" : "public var decompression: Decompression",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"649\" column=\"20\"><Name>decompression<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV13decompressionAC13DecompressionOvp<\/USR><Declaration>public var decompression: Decompression<\/Declaration><CommentParts><Abstract><Para>Enables automatic body decompression. Supported algorithms are gzip and deflate.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 649,
                "key.doc.name" : "decompression",
                "key.doc.type" : "Other",
                "key.doclength" : 85,
                "key.docoffset" : 29933,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>decompression<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 32,
                "key.name" : "decompression",
                "key.namelength" : 13,
                "key.nameoffset" : 30037,
                "key.offset" : 30033,
                "key.parsed_declaration" : "public var decompression: Decompression",
                "key.parsed_scope.end" : 649,
                "key.parsed_scope.start" : 649,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPClient.Decompression",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13DecompressionOD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV13decompressionAC13DecompressionOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 30142
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Ignore TLS unclean shutdown error, defaults to `false`.",
                "key.doc.declaration" : "public var ignoreUncleanSSLShutdown: Bool",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"651\" column=\"20\"><Name>ignoreUncleanSSLShutdown<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV24ignoreUncleanSSLShutdownSbvp<\/USR><Declaration>public var ignoreUncleanSSLShutdown: Bool<\/Declaration><CommentParts><Abstract><Para>Ignore TLS unclean shutdown error, defaults to <codeVoice>false<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 651,
                "key.doc.name" : "ignoreUncleanSSLShutdown",
                "key.doc.type" : "Other",
                "key.doclength" : 60,
                "key.docoffset" : 30074,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>ignoreUncleanSSLShutdown<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 34,
                "key.name" : "ignoreUncleanSSLShutdown",
                "key.namelength" : 24,
                "key.nameoffset" : 30153,
                "key.offset" : 30149,
                "key.parsed_declaration" : "public var ignoreUncleanSSLShutdown: Bool",
                "key.parsed_scope.end" : 651,
                "key.parsed_scope.start" : 651,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV24ignoreUncleanSSLShutdownSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(tlsConfiguration: <Type usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/Type>? = nil, redirectConfiguration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type>? = nil, timeout: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/Type> = Timeout(), connectionPool: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV\">ConnectionPool<\/Type> = ConnectionPool(), proxy: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type>? = nil, ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type> = false, decompression: <Type usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/Type> = .disabled)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 30193
                  }
                ],
                "key.bodylength" : 383,
                "key.bodyoffset" : 30606,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>tlsConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>redirectConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>timeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/ref.struct><\/decl.var.parameter.type> = Timeout()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>connectionPool<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV\">ConnectionPool<\/ref.struct><\/decl.var.parameter.type> = ConnectionPool()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>proxy<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ignoreUncleanSSLShutdown<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>decompression<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/ref.enum><\/decl.var.parameter.type> = .disabled<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 790,
                "key.name" : "init(tlsConfiguration:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)",
                "key.namelength" : 404,
                "key.nameoffset" : 30200,
                "key.offset" : 30200,
                "key.parsed_declaration" : "public init(tlsConfiguration: TLSConfiguration? = nil,\n            redirectConfiguration: RedirectConfiguration? = nil,\n            timeout: Timeout = Timeout(),\n            connectionPool: ConnectionPool = ConnectionPool(),\n            proxy: Proxy? = nil,\n            ignoreUncleanSSLShutdown: Bool = false,\n            decompression: Decompression = .disabled)",
                "key.parsed_scope.end" : 667,
                "key.parsed_scope.start" : 653,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout38maximumAllowedIdleTimeInConnectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO0K6AmountVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:maximumAllowedIdleTimeInConnectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompression24backgroundActivityLoggerAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO10TimeAmountVAE5ProxyVSgSbAC13DecompressionO7Logging0Q0VSgtcfc\">init(certificateVerification:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:backgroundActivityLogger:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Type) -> (TLSConfiguration?, HTTPClient.Configuration.RedirectConfiguration?, HTTPClient.Configuration.Timeout, HTTPClient.Configuration.ConnectionPool, HTTPClient.Configuration.Proxy?, Bool, HTTPClient.Decompression) -> HTTPClient.Configuration",
                "key.typeusr" : "$s16tlsConfiguration08redirectB07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompression15AsyncHTTPClient0M0C0B0V6NIOSSL16TLSConfigurationVSg_AL08RedirectB0VSgAL7TimeoutVAL010ConnectionF0VAL5ProxyVSgSbAJ13DecompressionOtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE010ConnectionH0VAE5ProxyVSgSbAC13DecompressionOtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(tlsConfiguration: <Type usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/Type>? = nil, redirectConfiguration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type>? = nil, timeout: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/Type> = Timeout(), proxy: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type>? = nil, ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type> = false, decompression: <Type usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/Type> = .disabled)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 31000
                  }
                ],
                "key.bodylength" : 387,
                "key.bodyoffset" : 31342,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>tlsConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>redirectConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>timeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/ref.struct><\/decl.var.parameter.type> = Timeout()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>proxy<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ignoreUncleanSSLShutdown<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>decompression<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/ref.enum><\/decl.var.parameter.type> = .disabled<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 723,
                "key.name" : "init(tlsConfiguration:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)",
                "key.namelength" : 333,
                "key.nameoffset" : 31007,
                "key.offset" : 31007,
                "key.parsed_declaration" : "public init(tlsConfiguration: TLSConfiguration? = nil,\n            redirectConfiguration: RedirectConfiguration? = nil,\n            timeout: Timeout = Timeout(),\n            proxy: Proxy? = nil,\n            ignoreUncleanSSLShutdown: Bool = false,\n            decompression: Decompression = .disabled)",
                "key.parsed_scope.end" : 684,
                "key.parsed_scope.start" : 669,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE010ConnectionH0VAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout38maximumAllowedIdleTimeInConnectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO0K6AmountVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:maximumAllowedIdleTimeInConnectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompression24backgroundActivityLoggerAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO10TimeAmountVAE5ProxyVSgSbAC13DecompressionO7Logging0Q0VSgtcfc\">init(certificateVerification:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:backgroundActivityLogger:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Type) -> (TLSConfiguration?, HTTPClient.Configuration.RedirectConfiguration?, HTTPClient.Configuration.Timeout, HTTPClient.Configuration.Proxy?, Bool, HTTPClient.Decompression) -> HTTPClient.Configuration",
                "key.typeusr" : "$s16tlsConfiguration08redirectB07timeout5proxy24ignoreUncleanSSLShutdown13decompression15AsyncHTTPClient0K0C0B0V6NIOSSL16TLSConfigurationVSg_AK08RedirectB0VSgAK7TimeoutVAK5ProxyVSgSbAI13DecompressionOtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(certificateVerification: <Type usr=\"s:6NIOSSL23CertificateVerificationO\">CertificateVerification<\/Type>, redirectConfiguration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type>? = nil, timeout: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/Type> = Timeout(), maximumAllowedIdleTimeInConnectionPool: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type> = .seconds(60), proxy: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type>? = nil, ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type> = false, decompression: <Type usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/Type> = .disabled)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 31740
                  }
                ],
                "key.bodylength" : 453,
                "key.bodyoffset" : 32176,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>certificateVerification<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:6NIOSSL23CertificateVerificationO\">CertificateVerification<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>redirectConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>timeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/ref.struct><\/decl.var.parameter.type> = Timeout()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maximumAllowedIdleTimeInConnectionPool<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct><\/decl.var.parameter.type> = .seconds(60)<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>proxy<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ignoreUncleanSSLShutdown<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>decompression<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/ref.enum><\/decl.var.parameter.type> = .disabled<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 883,
                "key.name" : "init(certificateVerification:redirectConfiguration:timeout:maximumAllowedIdleTimeInConnectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)",
                "key.namelength" : 427,
                "key.nameoffset" : 31747,
                "key.offset" : 31747,
                "key.parsed_declaration" : "public init(certificateVerification: CertificateVerification,\n            redirectConfiguration: RedirectConfiguration? = nil,\n            timeout: Timeout = Timeout(),\n            maximumAllowedIdleTimeInConnectionPool: TimeAmount = .seconds(60),\n            proxy: Proxy? = nil,\n            ignoreUncleanSSLShutdown: Bool = false,\n            decompression: Decompression = .disabled)",
                "key.parsed_scope.end" : 700,
                "key.parsed_scope.start" : 686,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE010ConnectionH0VAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompression24backgroundActivityLoggerAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO10TimeAmountVAE5ProxyVSgSbAC13DecompressionO7Logging0Q0VSgtcfc\">init(certificateVerification:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:backgroundActivityLogger:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Type) -> (CertificateVerification, HTTPClient.Configuration.RedirectConfiguration?, HTTPClient.Configuration.Timeout, TimeAmount, HTTPClient.Configuration.Proxy?, Bool, HTTPClient.Decompression) -> HTTPClient.Configuration",
                "key.typeusr" : "$s23certificateVerification21redirectConfiguration7timeout38maximumAllowedIdleTimeInConnectionPool5proxy24ignoreUncleanSSLShutdown13decompression15AsyncHTTPClient0S0C0D0V6NIOSSL011CertificateB0O_AL08RedirectD0VSgAL7TimeoutV3NIO0I6AmountVAL5ProxyVSgSbAJ13DecompressionOtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout38maximumAllowedIdleTimeInConnectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO0K6AmountVAE5ProxyVSgSbAC13DecompressionOtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(certificateVerification: <Type usr=\"s:6NIOSSL23CertificateVerificationO\">CertificateVerification<\/Type>, redirectConfiguration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type>? = nil, timeout: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/Type> = Timeout(), connectionPool: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type> = .seconds(60), proxy: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type>? = nil, ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type> = false, decompression: <Type usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/Type> = .disabled, backgroundActivityLogger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>?)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 32640
                  }
                ],
                "key.bodylength" : 453,
                "key.bodyoffset" : 33107,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>certificateVerification<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:6NIOSSL23CertificateVerificationO\">CertificateVerification<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>redirectConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>timeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/ref.struct><\/decl.var.parameter.type> = Timeout()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>connectionPool<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct><\/decl.var.parameter.type> = .seconds(60)<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>proxy<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ignoreUncleanSSLShutdown<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>decompression<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/ref.enum><\/decl.var.parameter.type> = .disabled<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>backgroundActivityLogger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 914,
                "key.name" : "init(certificateVerification:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:backgroundActivityLogger:)",
                "key.namelength" : 458,
                "key.nameoffset" : 32647,
                "key.offset" : 32647,
                "key.parsed_declaration" : "public init(certificateVerification: CertificateVerification,\n            redirectConfiguration: RedirectConfiguration? = nil,\n            timeout: Timeout = Timeout(),\n            connectionPool: TimeAmount = .seconds(60),\n            proxy: Proxy? = nil,\n            ignoreUncleanSSLShutdown: Bool = false,\n            decompression: Decompression = .disabled,\n            backgroundActivityLogger: Logger?)",
                "key.parsed_scope.end" : 717,
                "key.parsed_scope.start" : 702,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE010ConnectionH0VAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout38maximumAllowedIdleTimeInConnectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO0K6AmountVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:maximumAllowedIdleTimeInConnectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Type) -> (CertificateVerification, HTTPClient.Configuration.RedirectConfiguration?, HTTPClient.Configuration.Timeout, TimeAmount, HTTPClient.Configuration.Proxy?, Bool, HTTPClient.Decompression, Logger?) -> HTTPClient.Configuration",
                "key.typeusr" : "$s23certificateVerification21redirectConfiguration7timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompression24backgroundActivityLogger15AsyncHTTPClient0Q0C0D0V6NIOSSL011CertificateB0O_AM08RedirectD0VSgAM7TimeoutV3NIO10TimeAmountVAM5ProxyVSgSbAK13DecompressionO7Logging0O0VSgtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompression24backgroundActivityLoggerAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO10TimeAmountVAE5ProxyVSgSbAC13DecompressionO7Logging0Q0VSgtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(certificateVerification: <Type usr=\"s:6NIOSSL23CertificateVerificationO\">CertificateVerification<\/Type>, redirectConfiguration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type>? = nil, timeout: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/Type> = Timeout(), proxy: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type>? = nil, ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type> = false, decompression: <Type usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/Type> = .disabled)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 33571
                  }
                ],
                "key.bodylength" : 421,
                "key.bodyoffset" : 33920,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>certificateVerification<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:6NIOSSL23CertificateVerificationO\">CertificateVerification<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>redirectConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>timeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV\">Timeout<\/ref.struct><\/decl.var.parameter.type> = Timeout()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>proxy<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ignoreUncleanSSLShutdown<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>decompression<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13DecompressionO\">Decompression<\/ref.enum><\/decl.var.parameter.type> = .disabled<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 764,
                "key.name" : "init(certificateVerification:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)",
                "key.namelength" : 340,
                "key.nameoffset" : 33578,
                "key.offset" : 33578,
                "key.parsed_declaration" : "public init(certificateVerification: CertificateVerification,\n            redirectConfiguration: RedirectConfiguration? = nil,\n            timeout: Timeout = Timeout(),\n            proxy: Proxy? = nil,\n            ignoreUncleanSSLShutdown: Bool = false,\n            decompression: Decompression = .disabled)",
                "key.parsed_scope.end" : 734,
                "key.parsed_scope.start" : 719,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE010ConnectionH0VAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV03tlsC008redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL16TLSConfigurationVSg_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(tlsConfiguration:redirectConfiguration:timeout:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout38maximumAllowedIdleTimeInConnectionPool5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO0K6AmountVAE5ProxyVSgSbAC13DecompressionOtcfc\">init(certificateVerification:redirectConfiguration:timeout:maximumAllowedIdleTimeInConnectionPool:proxy:ignoreUncleanSSLShutdown:decompression:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout14connectionPool5proxy24ignoreUncleanSSLShutdown13decompression24backgroundActivityLoggerAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutV3NIO10TimeAmountVAE5ProxyVSgSbAC13DecompressionO7Logging0Q0VSgtcfc\">init(certificateVerification:redirectConfiguration:timeout:connectionPool:proxy:ignoreUncleanSSLShutdown:decompression:backgroundActivityLogger:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Type) -> (CertificateVerification, HTTPClient.Configuration.RedirectConfiguration?, HTTPClient.Configuration.Timeout, HTTPClient.Configuration.Proxy?, Bool, HTTPClient.Decompression) -> HTTPClient.Configuration",
                "key.typeusr" : "$s23certificateVerification21redirectConfiguration7timeout5proxy24ignoreUncleanSSLShutdown13decompression15AsyncHTTPClient0L0C0D0V6NIOSSL011CertificateB0O_AK08RedirectD0VSgAK7TimeoutVAK5ProxyVSgSbAI13DecompressionOtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV23certificateVerification08redirectC07timeout5proxy24ignoreUncleanSSLShutdown13decompressionAE6NIOSSL011CertificateE0O_AE08RedirectC0VSgAE7TimeoutVAE5ProxyVSgSbAC13DecompressionOtcfc"
              }
            ],
            "key.typename" : "HTTPClient.Configuration.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.EventLoopGroupProvider<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 34446
              }
            ],
            "key.bodylength" : 320,
            "key.bodyoffset" : 34482,
            "key.doc.column" : 17,
            "key.doc.comment" : "Specifies how `EventLoopGroup` will be created and establishes lifecycle ownership.",
            "key.doc.declaration" : "public enum AsyncHTTPClient.HTTPClient.EventLoopGroupProvider",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"738\" column=\"17\"><Name>EventLoopGroupProvider<\/Name><USR>s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO<\/USR><Declaration>public enum AsyncHTTPClient.HTTPClient.EventLoopGroupProvider<\/Declaration><CommentParts><Abstract><Para>Specifies how <codeVoice>EventLoopGroup<\/codeVoice> will be created and establishes lifecycle ownership.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 738,
            "key.doc.name" : "EventLoopGroupProvider",
            "key.doc.type" : "Other",
            "key.doclength" : 88,
            "key.docoffset" : 34354,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>EventLoopGroupProvider<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 350,
            "key.name" : "EventLoopGroupProvider",
            "key.namelength" : 22,
            "key.nameoffset" : 34458,
            "key.offset" : 34453,
            "key.parsed_declaration" : "public enum EventLoopGroupProvider",
            "key.parsed_scope.end" : 743,
            "key.parsed_scope.start" : 738,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 27,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 34604,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case shared(<Type usr=\"s:3NIO14EventLoopGroupP\">EventLoopGroup<\/Type>)<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "`EventLoopGroup` will be provided by the user. Owner of this group is responsible for its lifecycle.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"740\" column=\"14\"><Name>shared(_:)<\/Name><USR>s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO6sharedyAE3NIO0cdE0_pcAEmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>EventLoopGroup<\/codeVoice> will be provided by the user. Owner of this group is responsible for its lifecycle.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 740,
                    "key.doc.name" : "shared(_:)",
                    "key.doc.type" : "Other",
                    "key.doclength" : 105,
                    "key.docoffset" : 34491,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>shared<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:3NIO14EventLoopGroupP\">EventLoopGroup<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 22,
                    "key.name" : "shared(_:)",
                    "key.namelength" : 22,
                    "key.nameoffset" : 34609,
                    "key.offset" : 34609,
                    "key.parsed_declaration" : "case shared(EventLoopGroup)",
                    "key.parsed_scope.end" : 740,
                    "key.parsed_scope.start" : 740,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.EventLoopGroupProvider.Type) -> (EventLoopGroup) -> HTTPClient.EventLoopGroupProvider",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B0C22EventLoopGroupProviderO3NIO0cdE0_pcAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO6sharedyAE3NIO0cdE0_pcAEmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 14,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 34783,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case createNew<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "`EventLoopGroup` will be created by the client. When `syncShutdown` is called, created `EventLoopGroup` will be shut down as well.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"742\" column=\"14\"><Name>createNew<\/Name><USR>s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO9createNewyA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>EventLoopGroup<\/codeVoice> will be created by the client. When <codeVoice>syncShutdown<\/codeVoice> is called, created <codeVoice>EventLoopGroup<\/codeVoice> will be shut down as well.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 742,
                    "key.doc.name" : "createNew",
                    "key.doc.type" : "Other",
                    "key.doclength" : 135,
                    "key.docoffset" : 34640,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>createNew<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 9,
                    "key.name" : "createNew",
                    "key.namelength" : 9,
                    "key.nameoffset" : 34788,
                    "key.offset" : 34788,
                    "key.parsed_declaration" : "case createNew",
                    "key.parsed_scope.end" : 742,
                    "key.parsed_scope.start" : 742,
                    "key.typename" : "(HTTPClient.EventLoopGroupProvider.Type) -> HTTPClient.EventLoopGroupProvider",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B0C22EventLoopGroupProviderOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO9createNewyA2EmF"
                  }
                ]
              }
            ],
            "key.typename" : "HTTPClient.EventLoopGroupProvider.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C22EventLoopGroupProviderOmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C22EventLoopGroupProviderO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.EventLoopPreference<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 34885
              }
            ],
            "key.bodylength" : 2206,
            "key.bodyoffset" : 34920,
            "key.doc.column" : 19,
            "key.doc.comment" : "Specifies how the library will treat event loop passed by the user.",
            "key.doc.declaration" : "public struct AsyncHTTPClient.HTTPClient.EventLoopPreference",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"746\" column=\"19\"><Name>EventLoopPreference<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV<\/USR><Declaration>public struct AsyncHTTPClient.HTTPClient.EventLoopPreference<\/Declaration><CommentParts><Abstract><Para>Specifies how the library will treat event loop passed by the user.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 746,
            "key.doc.name" : "EventLoopPreference",
            "key.doc.type" : "Class",
            "key.doclength" : 72,
            "key.docoffset" : 34809,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>EventLoopPreference<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 2235,
            "key.name" : "EventLoopPreference",
            "key.namelength" : 19,
            "key.nameoffset" : 34899,
            "key.offset" : 34892,
            "key.parsed_declaration" : "public struct EventLoopPreference",
            "key.parsed_scope.end" : 796,
            "key.parsed_scope.start" : 746,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>.Preference<\/Declaration>",
                "key.bodylength" : 454,
                "key.bodyoffset" : 34946,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct>.<decl.name>Preference<\/decl.name><\/decl.enum>",
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 472,
                "key.name" : "Preference",
                "key.namelength" : 10,
                "key.nameoffset" : 34934,
                "key.offset" : 34929,
                "key.parsed_declaration" : "enum Preference",
                "key.parsed_scope.end" : 756,
                "key.parsed_scope.start" : 747,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 16,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 35019,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case indifferent<\/Declaration>",
                        "key.doc.column" : 18,
                        "key.doc.comment" : "Event Loop will be selected by the library.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"749\" column=\"18\"><Name>indifferent<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O11indifferentyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Event Loop will be selected by the library.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 749,
                        "key.doc.name" : "indifferent",
                        "key.doc.type" : "Other",
                        "key.doclength" : 48,
                        "key.docoffset" : 34959,
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>indifferent<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 11,
                        "key.name" : "indifferent",
                        "key.namelength" : 11,
                        "key.nameoffset" : 35024,
                        "key.offset" : 35024,
                        "key.parsed_declaration" : "case indifferent",
                        "key.parsed_scope.end" : 749,
                        "key.parsed_scope.start" : 749,
                        "key.typename" : "(HTTPClient.EventLoopPreference.Preference.Type) -> HTTPClient.EventLoopPreference.Preference",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0OAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O11indifferentyA2GmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 28,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 35147,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case delegate(on: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>)<\/Declaration>",
                        "key.doc.column" : 18,
                        "key.doc.comment" : "The delegate will be run on the specified EventLoop (and the Channel if possible).",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"751\" column=\"18\"><Name>delegate(on:)<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O8delegateyAG3NIO0cD0_p_tcAGmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The delegate will be run on the specified EventLoop (and the Channel if possible).<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 751,
                        "key.doc.name" : "delegate(on:)",
                        "key.doc.type" : "Other",
                        "key.doclength" : 87,
                        "key.docoffset" : 35048,
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>delegate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 23,
                        "key.name" : "delegate(on:)",
                        "key.namelength" : 23,
                        "key.nameoffset" : 35152,
                        "key.offset" : 35152,
                        "key.parsed_declaration" : "case delegate(on: EventLoop)",
                        "key.parsed_scope.end" : 751,
                        "key.parsed_scope.start" : 751,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(HTTPClient.EventLoopPreference.Preference.Type) -> (EventLoop) -> HTTPClient.EventLoopPreference.Preference",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O3NIO0cD0_p_tcAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O8delegateyAG3NIO0cD0_p_tcAGmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 38,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 35275,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case delegateAndChannel(on: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>)<\/Declaration>",
                        "key.doc.column" : 18,
                        "key.doc.comment" : "The delegate and the `Channel` will be run on the specified EventLoop.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"753\" column=\"18\"><Name>delegateAndChannel(on:)<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O18delegateAndChannelyAG3NIO0cD0_p_tcAGmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The delegate and the <codeVoice>Channel<\/codeVoice> will be run on the specified EventLoop.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 753,
                        "key.doc.name" : "delegateAndChannel(on:)",
                        "key.doc.type" : "Other",
                        "key.doclength" : 75,
                        "key.docoffset" : 35188,
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>delegateAndChannel<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 33,
                        "key.name" : "delegateAndChannel(on:)",
                        "key.namelength" : 33,
                        "key.nameoffset" : 35280,
                        "key.offset" : 35280,
                        "key.parsed_declaration" : "case delegateAndChannel(on: EventLoop)",
                        "key.parsed_scope.end" : 753,
                        "key.parsed_scope.start" : 753,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(HTTPClient.EventLoopPreference.Preference.Type) -> (EventLoop) -> HTTPClient.EventLoopPreference.Preference",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O3NIO0cD0_p_tcAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O18delegateAndChannelyAG3NIO0cD0_p_tcAGmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 64,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 35327,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case testOnly_exact(channelOn: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, delegateOn: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>)<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>testOnly_exact<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>channelOn<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegateOn<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 59,
                        "key.name" : "testOnly_exact(channelOn:delegateOn:)",
                        "key.namelength" : 59,
                        "key.nameoffset" : 35332,
                        "key.offset" : 35332,
                        "key.parsed_declaration" : "case testOnly_exact(channelOn: EventLoop, delegateOn: EventLoop)",
                        "key.parsed_scope.end" : 755,
                        "key.parsed_scope.start" : 755,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(HTTPClient.EventLoopPreference.Preference.Type) -> (EventLoop, EventLoop) -> HTTPClient.EventLoopPreference.Preference",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O3NIO0cD0_p_AhI_ptcAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O14testOnly_exactyAG3NIO0cD0_p_AiJ_ptcAGmF"
                      }
                    ]
                  }
                ],
                "key.typename" : "HTTPClient.EventLoopPreference.Preference.Type",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0OmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var preference: <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O\">Preference<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>preference<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O\">Preference<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "preference",
                "key.namelength" : 10,
                "key.nameoffset" : 35415,
                "key.offset" : 35411,
                "key.parsed_declaration" : "var preference: Preference",
                "key.parsed_scope.end" : 758,
                "key.parsed_scope.start" : 758,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "HTTPClient.EventLoopPreference.Preference",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0OD",
                "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV10preferenceAE0E0Ovp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(_ preference: <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O\">Preference<\/Type>)<\/Declaration>",
                "key.bodylength" : 50,
                "key.bodyoffset" : 35479,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>preference<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV0E0O\">Preference<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 83,
                "key.name" : "init(_:)",
                "key.namelength" : 30,
                "key.nameoffset" : 35447,
                "key.offset" : 35447,
                "key.parsed_declaration" : "init(_ preference: Preference)",
                "key.parsed_scope.end" : 762,
                "key.parsed_scope.start" : 760,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.EventLoopPreference.Type) -> (HTTPClient.EventLoopPreference.Preference) -> HTTPClient.EventLoopPreference",
                "key.typeusr" : "$sy15AsyncHTTPClient0B0C19EventLoopPreferenceVAE0E0OcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceVyA2E0E0Ocfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static let indifferent: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 35596
                  }
                ],
                "key.doc.column" : 27,
                "key.doc.comment" : "Event Loop will be selected by the library.",
                "key.doc.declaration" : "public static let indifferent: AsyncHTTPClient.HTTPClient.EventLoopPreference",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"765\" column=\"27\"><Name>indifferent<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV11indifferentAEvpZ<\/USR><Declaration>public static let indifferent: AsyncHTTPClient.HTTPClient.EventLoopPreference<\/Declaration><CommentParts><Abstract><Para>Event Loop will be selected by the library.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 765,
                "key.doc.name" : "indifferent",
                "key.doc.type" : "Other",
                "key.doclength" : 48,
                "key.docoffset" : 35540,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>indifferent<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                "key.kind" : "source.lang.swift.decl.var.static",
                "key.length" : 58,
                "key.name" : "indifferent",
                "key.namelength" : 11,
                "key.nameoffset" : 35614,
                "key.offset" : 35603,
                "key.parsed_declaration" : "public static let indifferent = EventLoopPreference(.indifferent)",
                "key.parsed_scope.end" : 765,
                "key.parsed_scope.start" : 765,
                "key.typename" : "HTTPClient.EventLoopPreference",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C19EventLoopPreferenceVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV11indifferentAEvpZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func delegate(on eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 36118
                  }
                ],
                "key.bodylength" : 74,
                "key.bodyoffset" : 36195,
                "key.doc.column" : 28,
                "key.doc.comment" : "The delegate will be run on the specified EventLoop (and the Channel if possible).\n\nThis will call the configured delegate on `eventLoop` and will try to use a `Channel` on the same\n`EventLoop` but will not establish a new network connection just to satisfy the `EventLoop` preference if\nanother existing connection on a different `EventLoop` is readily available from a connection pool.",
                "key.doc.declaration" : "public static func delegate(on eventLoop: EventLoop) -> EventLoopPreference",
                "key.doc.discussion" : [
                  {
                    "Para" : "This will call the configured delegate on `eventLoop` and will try to use a `Channel` on the same `EventLoop` but will not establish a new network connection just to satisfy the `EventLoop` preference if another existing connection on a different `EventLoop` is readily available from a connection pool."
                  }
                ],
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"772\" column=\"28\"><Name>delegate(on:)<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV8delegate2onAE3NIO0cD0_p_tFZ<\/USR><Declaration>public static func delegate(on eventLoop: EventLoop) -&gt; EventLoopPreference<\/Declaration><CommentParts><Abstract><Para>The delegate will be run on the specified EventLoop (and the Channel if possible).<\/Para><\/Abstract><Discussion><Para>This will call the configured delegate on <codeVoice>eventLoop<\/codeVoice> and will try to use a <codeVoice>Channel<\/codeVoice> on the same <codeVoice>EventLoop<\/codeVoice> but will not establish a new network connection just to satisfy the <codeVoice>EventLoop<\/codeVoice> preference if another existing connection on a different <codeVoice>EventLoop<\/codeVoice> is readily available from a connection pool.<\/Para><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 772,
                "key.doc.name" : "delegate(on:)",
                "key.doc.type" : "Function",
                "key.doclength" : 439,
                "key.docoffset" : 35671,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delegate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoop<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 145,
                "key.name" : "delegate(on:)",
                "key.namelength" : 33,
                "key.nameoffset" : 36137,
                "key.offset" : 36125,
                "key.parsed_declaration" : "public static func delegate(on eventLoop: EventLoop) -> EventLoopPreference",
                "key.parsed_scope.end" : 774,
                "key.parsed_scope.start" : 772,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.EventLoopPreference.Type) -> (EventLoop) -> HTTPClient.EventLoopPreference",
                "key.typeusr" : "$s2on15AsyncHTTPClient0C0C19EventLoopPreferenceV3NIO0dE0_p_tcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV8delegate2onAE3NIO0cD0_p_tFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func delegateAndChannel(on eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 36553
                  }
                ],
                "key.bodylength" : 84,
                "key.bodyoffset" : 36640,
                "key.doc.column" : 28,
                "key.doc.comment" : "The delegate and the `Channel` will be run on the specified EventLoop.\n\nUse this for use-cases where you prefer a new connection to be established over re-using an existing\nconnection that might be on a different `EventLoop`.",
                "key.doc.declaration" : "public static func delegateAndChannel(on eventLoop: EventLoop) -> EventLoopPreference",
                "key.doc.discussion" : [
                  {
                    "Para" : "Use this for use-cases where you prefer a new connection to be established over re-using an existing connection that might be on a different `EventLoop`."
                  }
                ],
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"780\" column=\"28\"><Name>delegateAndChannel(on:)<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV18delegateAndChannel2onAE3NIO0cD0_p_tFZ<\/USR><Declaration>public static func delegateAndChannel(on eventLoop: EventLoop) -&gt; EventLoopPreference<\/Declaration><CommentParts><Abstract><Para>The delegate and the <codeVoice>Channel<\/codeVoice> will be run on the specified EventLoop.<\/Para><\/Abstract><Discussion><Para>Use this for use-cases where you prefer a new connection to be established over re-using an existing connection that might be on a different <codeVoice>EventLoop<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 780,
                "key.doc.name" : "delegateAndChannel(on:)",
                "key.doc.type" : "Function",
                "key.doclength" : 265,
                "key.docoffset" : 36280,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delegateAndChannel<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoop<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 165,
                "key.name" : "delegateAndChannel(on:)",
                "key.namelength" : 43,
                "key.nameoffset" : 36572,
                "key.offset" : 36560,
                "key.parsed_declaration" : "public static func delegateAndChannel(on eventLoop: EventLoop) -> EventLoopPreference",
                "key.parsed_scope.end" : 782,
                "key.parsed_scope.start" : 780,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.EventLoopPreference.Type) -> (EventLoop) -> HTTPClient.EventLoopPreference",
                "key.typeusr" : "$s2on15AsyncHTTPClient0C0C19EventLoopPreferenceV3NIO0dE0_p_tcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV18delegateAndChannel2onAE3NIO0cD0_p_tFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var bestEventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>? { get }<\/Declaration>",
                "key.bodylength" : 354,
                "key.bodyoffset" : 36766,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bestEventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 386,
                "key.name" : "bestEventLoop",
                "key.namelength" : 13,
                "key.nameoffset" : 36739,
                "key.offset" : 36735,
                "key.parsed_declaration" : "var bestEventLoop: EventLoop?",
                "key.parsed_scope.end" : 795,
                "key.parsed_scope.start" : 784,
                "key.typename" : "EventLoop?",
                "key.typeusr" : "$s3NIO9EventLoop_pSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV04bestcD03NIO0cD0_pSgvp"
              }
            ],
            "key.typename" : "HTTPClient.EventLoopPreference.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C19EventLoopPreferenceVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.Decompression<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 37175
              }
            ],
            "key.bodylength" : 173,
            "key.bodyoffset" : 37202,
            "key.doc.column" : 17,
            "key.doc.comment" : "Specifies decompression settings.",
            "key.doc.declaration" : "public enum AsyncHTTPClient.HTTPClient.Decompression",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"799\" column=\"17\"><Name>Decompression<\/Name><USR>s:15AsyncHTTPClient0B0C13DecompressionO<\/USR><Declaration>public enum AsyncHTTPClient.HTTPClient.Decompression<\/Declaration><CommentParts><Abstract><Para>Specifies decompression settings.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 799,
            "key.doc.name" : "Decompression",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 37133,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>Decompression<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 194,
            "key.name" : "Decompression",
            "key.namelength" : 13,
            "key.nameoffset" : 37187,
            "key.offset" : 37182,
            "key.parsed_declaration" : "public enum Decompression",
            "key.parsed_scope.end" : 804,
            "key.parsed_scope.start" : 799,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 13,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 37250,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case disabled<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Decompression is disabled.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"801\" column=\"14\"><Name>disabled<\/Name><USR>s:15AsyncHTTPClient0B0C13DecompressionO8disabledyA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Decompression is disabled.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 801,
                    "key.doc.name" : "disabled",
                    "key.doc.type" : "Other",
                    "key.doclength" : 31,
                    "key.docoffset" : 37211,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>disabled<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 8,
                    "key.name" : "disabled",
                    "key.namelength" : 8,
                    "key.nameoffset" : 37255,
                    "key.offset" : 37255,
                    "key.parsed_declaration" : "case disabled",
                    "key.parsed_scope.end" : 801,
                    "key.parsed_scope.start" : 801,
                    "key.typename" : "(HTTPClient.Decompression.Type) -> HTTPClient.Decompression",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B0C13DecompressionOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C13DecompressionO8disabledyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 60,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 37310,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case enabled(limit: <Type usr=\"s:18NIOHTTPCompression20NIOHTTPDecompressionO\">NIOHTTPDecompression<\/Type>.<Type usr=\"s:18NIOHTTPCompression20NIOHTTPDecompressionO18DecompressionLimitV\">DecompressionLimit<\/Type>)<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Decompression is enabled.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"803\" column=\"14\"><Name>enabled(limit:)<\/Name><USR>s:15AsyncHTTPClient0B0C13DecompressionO7enabledyAE18NIOHTTPCompression20NIOHTTPDecompressionO0C5LimitV_tcAEmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Decompression is enabled.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 803,
                    "key.doc.name" : "enabled(limit:)",
                    "key.doc.type" : "Other",
                    "key.doclength" : 30,
                    "key.docoffset" : 37272,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>enabled<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>limit<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:18NIOHTTPCompression20NIOHTTPDecompressionO\">NIOHTTPDecompression<\/ref.enum>.<ref.struct usr=\"s:18NIOHTTPCompression20NIOHTTPDecompressionO18DecompressionLimitV\">DecompressionLimit<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 55,
                    "key.name" : "enabled(limit:)",
                    "key.namelength" : 55,
                    "key.nameoffset" : 37315,
                    "key.offset" : 37315,
                    "key.parsed_declaration" : "case enabled(limit: NIOHTTPDecompression.DecompressionLimit)",
                    "key.parsed_scope.end" : 803,
                    "key.parsed_scope.start" : 803,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Decompression.Type) -> (NIOHTTPDecompression.DecompressionLimit) -> HTTPClient.Decompression",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B0C13DecompressionO18NIOHTTPCompression20NIOHTTPDecompressionO0C5LimitV_tcAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C13DecompressionO7enabledyAE18NIOHTTPCompression20NIOHTTPDecompressionO0C5LimitV_tcAEmF"
                  }
                ]
              }
            ],
            "key.typename" : "HTTPClient.Decompression.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13DecompressionOmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13DecompressionO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.State<\/Declaration>",
            "key.bodylength" : 79,
            "key.bodyoffset" : 37394,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>State<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 92,
            "key.name" : "State",
            "key.namelength" : 5,
            "key.nameoffset" : 37387,
            "key.offset" : 37382,
            "key.parsed_declaration" : "enum State",
            "key.parsed_scope.end" : 810,
            "key.parsed_scope.start" : 806,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 17,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 37403,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case upAndRunning<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>upAndRunning<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 12,
                    "key.name" : "upAndRunning",
                    "key.namelength" : 12,
                    "key.nameoffset" : 37408,
                    "key.offset" : 37408,
                    "key.parsed_declaration" : "case upAndRunning",
                    "key.parsed_scope.end" : 807,
                    "key.parsed_scope.start" : 807,
                    "key.typename" : "(HTTPClient.State.Type) -> HTTPClient.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B0C5StateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C5StateO12upAndRunningyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 17,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 37429,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case shuttingDown<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>shuttingDown<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 12,
                    "key.name" : "shuttingDown",
                    "key.namelength" : 12,
                    "key.nameoffset" : 37434,
                    "key.offset" : 37434,
                    "key.parsed_declaration" : "case shuttingDown",
                    "key.parsed_scope.end" : 808,
                    "key.parsed_scope.start" : 808,
                    "key.typename" : "(HTTPClient.State.Type) -> HTTPClient.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B0C5StateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C5StateO12shuttingDownyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 13,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 37455,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case shutDown<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>shutDown<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 8,
                    "key.name" : "shutDown",
                    "key.namelength" : 8,
                    "key.nameoffset" : 37460,
                    "key.offset" : 37460,
                    "key.parsed_declaration" : "case shutDown",
                    "key.parsed_scope.end" : 809,
                    "key.parsed_scope.start" : 809,
                    "key.typename" : "(HTTPClient.State.Type) -> HTTPClient.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B0C5StateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C5StateO8shutDownyA2EmF"
                  }
                ]
              }
            ],
            "key.typename" : "HTTPClient.State.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C5StateOmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C5StateO"
          }
        ],
        "key.typename" : "HTTPClient.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0CmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.Configuration<\/Declaration>",
        "key.bodylength" : 2086,
        "key.bodyoffset" : 37514,
        "key.doc.column" : 19,
        "key.doc.declaration" : "public struct AsyncHTTPClient.HTTPClient.Configuration",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"628\" column=\"19\"><Name>Configuration<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV<\/USR><Declaration>public struct AsyncHTTPClient.HTTPClient.Configuration<\/Declaration><CommentParts><Abstract><Para><codeVoice>HTTPClient<\/codeVoice> configuration.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 628,
        "key.doc.name" : "Configuration",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>Configuration<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2123,
        "key.name" : "HTTPClient.Configuration",
        "key.namelength" : 24,
        "key.nameoffset" : 37488,
        "key.offset" : 37478,
        "key.parsed_declaration" : "extension HTTPClient.Configuration",
        "key.parsed_scope.end" : 873,
        "key.parsed_scope.start" : 813,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Timeout<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 37550
              }
            ],
            "key.bodylength" : 459,
            "key.bodyoffset" : 37573,
            "key.doc.column" : 19,
            "key.doc.comment" : "Timeout configuration.",
            "key.doc.declaration" : "public struct Timeout",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"815\" column=\"19\"><Name>Timeout<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV<\/USR><Declaration>public struct Timeout<\/Declaration><CommentParts><Abstract><Para>Timeout configuration.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 815,
            "key.doc.name" : "Timeout",
            "key.doc.type" : "Class",
            "key.doclength" : 27,
            "key.docoffset" : 37519,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Timeout<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 476,
            "key.name" : "Timeout",
            "key.namelength" : 7,
            "key.nameoffset" : 37564,
            "key.offset" : 37557,
            "key.parsed_declaration" : "public struct Timeout",
            "key.parsed_scope.end" : 830,
            "key.parsed_scope.start" : 815,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var connect: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 37621
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Specifies connect timeout.",
                "key.doc.declaration" : "public var connect: TimeAmount?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"817\" column=\"20\"><Name>connect<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV7connect3NIO10TimeAmountVSgvp<\/USR><Declaration>public var connect: TimeAmount?<\/Declaration><CommentParts><Abstract><Para>Specifies connect timeout.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 817,
                "key.doc.name" : "connect",
                "key.doc.type" : "Other",
                "key.doclength" : 31,
                "key.docoffset" : 37582,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>connect<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 24,
                "key.name" : "connect",
                "key.namelength" : 7,
                "key.nameoffset" : 37632,
                "key.offset" : 37628,
                "key.parsed_declaration" : "public var connect: TimeAmount?",
                "key.parsed_scope.end" : 817,
                "key.parsed_scope.start" : 817,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "TimeAmount?",
                "key.typeusr" : "$s3NIO10TimeAmountVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV7connect3NIO10TimeAmountVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var read: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 37697
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Specifies read timeout.",
                "key.doc.declaration" : "public var read: TimeAmount?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"819\" column=\"20\"><Name>read<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV4read3NIO10TimeAmountVSgvp<\/USR><Declaration>public var read: TimeAmount?<\/Declaration><CommentParts><Abstract><Para>Specifies read timeout.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 819,
                "key.doc.name" : "read",
                "key.doc.type" : "Other",
                "key.doclength" : 28,
                "key.docoffset" : 37661,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>read<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 21,
                "key.name" : "read",
                "key.namelength" : 4,
                "key.nameoffset" : 37708,
                "key.offset" : 37704,
                "key.parsed_declaration" : "public var read: TimeAmount?",
                "key.parsed_scope.end" : 819,
                "key.parsed_scope.start" : 819,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "TimeAmount?",
                "key.typeusr" : "$s3NIO10TimeAmountVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV4read3NIO10TimeAmountVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(connect: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type>? = nil, read: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type>? = nil)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 37887
                  }
                ],
                "key.bodylength" : 73,
                "key.bodyoffset" : 37953,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create timeout.\n\n- parameters:\n    - connect: `connect` timeout.\n    - read: `read` timeout.",
                "key.doc.declaration" : "public init(connect: TimeAmount? = nil, read: TimeAmount? = nil)",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"826\" column=\"16\"><Name>init(connect:read:)<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV7connect4readAG3NIO10TimeAmountVSg_AMtcfc<\/USR><Declaration>public init(connect: TimeAmount? = nil, read: TimeAmount? = nil)<\/Declaration><CommentParts><Abstract><Para>Create timeout.<\/Para><\/Abstract><Parameters><Parameter><Name>connect<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>connect<\/codeVoice> timeout.<\/Para><\/Discussion><\/Parameter><Parameter><Name>read<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>read<\/codeVoice> timeout.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 826,
                "key.doc.name" : "init(connect:read:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "`connect` timeout."
                      }
                    ],
                    "name" : "connect"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "`read` timeout."
                      }
                    ],
                    "name" : "read"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 144,
                "key.docoffset" : 37735,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>connect<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>read<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 133,
                "key.name" : "init(connect:read:)",
                "key.namelength" : 57,
                "key.nameoffset" : 37894,
                "key.offset" : 37894,
                "key.parsed_declaration" : "public init(connect: TimeAmount? = nil, read: TimeAmount? = nil)",
                "key.parsed_scope.end" : 829,
                "key.parsed_scope.start" : 826,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Timeout.Type) -> (TimeAmount?, TimeAmount?) -> HTTPClient.Configuration.Timeout",
                "key.typeusr" : "$s7connect4read15AsyncHTTPClient0D0C13ConfigurationV7TimeoutV3NIO10TimeAmountVSg_AMtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV7connect4readAG3NIO10TimeAmountVSg_AMtcfc"
              }
            ],
            "key.typename" : "HTTPClient.Configuration.Timeout.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV7TimeoutVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV7TimeoutV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct RedirectConfiguration<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 38087
              }
            ],
            "key.bodylength" : 1149,
            "key.bodyoffset" : 38124,
            "key.doc.column" : 19,
            "key.doc.comment" : "Specifies redirect processing settings.",
            "key.doc.declaration" : "public struct RedirectConfiguration",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"833\" column=\"19\"><Name>RedirectConfiguration<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V<\/USR><Declaration>public struct RedirectConfiguration<\/Declaration><CommentParts><Abstract><Para>Specifies redirect processing settings.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 833,
            "key.doc.name" : "RedirectConfiguration",
            "key.doc.type" : "Class",
            "key.doclength" : 44,
            "key.docoffset" : 38039,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>RedirectConfiguration<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 1180,
            "key.name" : "RedirectConfiguration",
            "key.namelength" : 21,
            "key.nameoffset" : 38101,
            "key.offset" : 38094,
            "key.parsed_declaration" : "public struct RedirectConfiguration",
            "key.parsed_scope.end" : 862,
            "key.parsed_scope.start" : 833,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type>.Configuration<\/Declaration>",
                "key.bodylength" : 195,
                "key.bodyoffset" : 38153,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct>.<decl.name>Configuration<\/decl.name><\/decl.enum>",
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 216,
                "key.name" : "Configuration",
                "key.namelength" : 13,
                "key.nameoffset" : 38138,
                "key.offset" : 38133,
                "key.parsed_declaration" : "enum Configuration",
                "key.parsed_scope.end" : 839,
                "key.parsed_scope.start" : 834,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 13,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 38210,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case disallow<\/Declaration>",
                        "key.doc.column" : 18,
                        "key.doc.comment" : "Redirects are not followed.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"836\" column=\"18\"><Name>disallow<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO8disallowyA2HmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Redirects are not followed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 836,
                        "key.doc.name" : "disallow",
                        "key.doc.type" : "Other",
                        "key.doclength" : 32,
                        "key.docoffset" : 38166,
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>disallow<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 8,
                        "key.name" : "disallow",
                        "key.namelength" : 8,
                        "key.nameoffset" : 38215,
                        "key.offset" : 38215,
                        "key.parsed_declaration" : "case disallow",
                        "key.parsed_scope.end" : 836,
                        "key.parsed_scope.start" : 836,
                        "key.typename" : "(HTTPClient.Configuration.RedirectConfiguration.Configuration.Type) -> HTTPClient.Configuration.RedirectConfiguration.Configuration",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADOAHmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO8disallowyA2HmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 40,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 38299,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case follow(max: <Type usr=\"s:Si\">Int<\/Type>, allowCycles: <Type usr=\"s:Sb\">Bool<\/Type>)<\/Declaration>",
                        "key.doc.column" : 18,
                        "key.doc.comment" : "Redirects are followed with a specified limit.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"838\" column=\"18\"><Name>follow(max:allowCycles:)<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO6followyAHSi_SbtcAHmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Redirects are followed with a specified limit.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 838,
                        "key.doc.name" : "follow(max:allowCycles:)",
                        "key.doc.type" : "Other",
                        "key.doclength" : 51,
                        "key.docoffset" : 38236,
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>follow<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>max<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>allowCycles<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 35,
                        "key.name" : "follow(max:allowCycles:)",
                        "key.namelength" : 35,
                        "key.nameoffset" : 38304,
                        "key.offset" : 38304,
                        "key.parsed_declaration" : "case follow(max: Int, allowCycles: Bool)",
                        "key.parsed_scope.end" : 838,
                        "key.parsed_scope.start" : 838,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(HTTPClient.Configuration.RedirectConfiguration.Configuration.Type) -> (Int, Bool) -> HTTPClient.Configuration.RedirectConfiguration.Configuration",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADOSi_SbtcAHmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO6followyAHSi_SbtcAHmF"
                      }
                    ]
                  }
                ],
                "key.typename" : "HTTPClient.Configuration.RedirectConfiguration.Configuration.Type",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADOmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var configuration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO\">Configuration<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>configuration<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO\">Configuration<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 32,
                "key.name" : "configuration",
                "key.namelength" : 13,
                "key.nameoffset" : 38363,
                "key.offset" : 38359,
                "key.parsed_declaration" : "var configuration: Configuration",
                "key.parsed_scope.end" : 841,
                "key.parsed_scope.start" : 841,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "HTTPClient.Configuration.RedirectConfiguration.Configuration",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADOD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V13configurationAgDOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init()<\/Declaration>",
                "key.bodylength" : 78,
                "key.bodyoffset" : 38409,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 87,
                "key.name" : "init()",
                "key.namelength" : 6,
                "key.nameoffset" : 38401,
                "key.offset" : 38401,
                "key.parsed_declaration" : "init()",
                "key.parsed_scope.end" : 845,
                "key.parsed_scope.start" : 843,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V13configurationA2gDO_tcfc\">init(configuration:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.RedirectConfiguration.Type) -> () -> HTTPClient.Configuration.RedirectConfiguration",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VycD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VAGycfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(configuration: <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO\">Configuration<\/Type>)<\/Declaration>",
                "key.bodylength" : 56,
                "key.bodyoffset" : 38534,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VADO\">Configuration<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 93,
                "key.name" : "init(configuration:)",
                "key.namelength" : 34,
                "key.nameoffset" : 38498,
                "key.offset" : 38498,
                "key.parsed_declaration" : "init(configuration: Configuration)",
                "key.parsed_scope.end" : 849,
                "key.parsed_scope.start" : 847,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VAGycfc\">init()<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.RedirectConfiguration.Type) -> (HTTPClient.Configuration.RedirectConfiguration.Configuration) -> HTTPClient.Configuration.RedirectConfiguration",
                "key.typeusr" : "$s13configuration15AsyncHTTPClient0C0C13ConfigurationV08RedirectD0VAhEO_tcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V13configurationA2gDO_tcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static let disallow: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 38641
                  }
                ],
                "key.doc.column" : 27,
                "key.doc.comment" : "Redirects are not followed.",
                "key.doc.declaration" : "public static let disallow: AsyncHTTPClient.HTTPClient.Configuration.RedirectConfiguration",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"852\" column=\"27\"><Name>disallow<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V8disallowAGvpZ<\/USR><Declaration>public static let disallow: AsyncHTTPClient.HTTPClient.Configuration.RedirectConfiguration<\/Declaration><CommentParts><Abstract><Para>Redirects are not followed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 852,
                "key.doc.name" : "disallow",
                "key.doc.type" : "Other",
                "key.doclength" : 32,
                "key.docoffset" : 38601,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>disallow<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                "key.kind" : "source.lang.swift.decl.var.static",
                "key.length" : 69,
                "key.name" : "disallow",
                "key.namelength" : 8,
                "key.nameoffset" : 38659,
                "key.offset" : 38648,
                "key.parsed_declaration" : "public static let disallow = RedirectConfiguration(configuration: .disallow)",
                "key.parsed_scope.end" : 852,
                "key.parsed_scope.start" : 852,
                "key.typename" : "HTTPClient.Configuration.RedirectConfiguration",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V8disallowAGvpZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func follow(max: <Type usr=\"s:Si\">Int<\/Type>, allowCycles: <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 39112
                  }
                ],
                "key.bodylength" : 74,
                "key.bodyoffset" : 39193,
                "key.doc.column" : 28,
                "key.doc.comment" : "Redirects are followed with a specified limit.\n\n- parameters:\n    - max: The maximum number of allowed redirects.\n    - allowCycles: Whether cycles are allowed.\n\n- warning: Cycle detection will keep all visited URLs in memory which means a malicious server could use this as a denial-of-service vector.",
                "key.doc.declaration" : "public static func follow(max: Int, allowCycles: Bool) -> RedirectConfiguration",
                "key.doc.discussion" : [
                  {
                    "Warning" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"861\" column=\"28\"><Name>follow(max:allowCycles:)<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V6follow3max11allowCyclesAGSi_SbtFZ<\/USR><Declaration>public static func follow(max: Int, allowCycles: Bool) -&gt; RedirectConfiguration<\/Declaration><CommentParts><Abstract><Para>Redirects are followed with a specified limit.<\/Para><\/Abstract><Parameters><Parameter><Name>max<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The maximum number of allowed redirects.<\/Para><\/Discussion><\/Parameter><Parameter><Name>allowCycles<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether cycles are allowed.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Warning><Para>Cycle detection will keep all visited URLs in memory which means a malicious server could use this as a denial-of-service vector.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 861,
                "key.doc.name" : "follow(max:allowCycles:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The maximum number of allowed redirects."
                      }
                    ],
                    "name" : "max"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether cycles are allowed."
                      }
                    ],
                    "name" : "allowCycles"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 377,
                "key.docoffset" : 38727,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>follow<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>max<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>allowCycles<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V\">RedirectConfiguration<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 149,
                "key.name" : "follow(max:allowCycles:)",
                "key.namelength" : 35,
                "key.nameoffset" : 39131,
                "key.offset" : 39119,
                "key.parsed_declaration" : "public static func follow(max: Int, allowCycles: Bool) -> RedirectConfiguration",
                "key.parsed_scope.end" : 861,
                "key.parsed_scope.start" : 861,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.RedirectConfiguration.Type) -> (Int, Bool) -> HTTPClient.Configuration.RedirectConfiguration",
                "key.typeusr" : "$s3max11allowCycles15AsyncHTTPClient0E0C13ConfigurationV08RedirectF0VSi_SbtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V6follow3max11allowCyclesAGSi_SbtFZ"
              }
            ],
            "key.typename" : "HTTPClient.Configuration.RedirectConfiguration.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0VmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV08RedirectC0V"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct ConnectionPool : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 39319
              }
            ],
            "key.bodylength" : 239,
            "key.bodyoffset" : 39359,
            "key.doc.column" : 19,
            "key.doc.comment" : "Connection pool configuration.",
            "key.doc.declaration" : "public struct ConnectionPool : Hashable",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"865\" column=\"19\"><Name>ConnectionPool<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV<\/USR><Declaration>public struct ConnectionPool : Hashable<\/Declaration><CommentParts><Abstract><Para>Connection pool configuration.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 865,
            "key.doc.name" : "ConnectionPool",
            "key.doc.type" : "Class",
            "key.doclength" : 35,
            "key.docoffset" : 39280,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 39349
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ConnectionPool<\/decl.name> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.struct>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Hashable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 273,
            "key.name" : "ConnectionPool",
            "key.namelength" : 14,
            "key.nameoffset" : 39333,
            "key.offset" : 39326,
            "key.parsed_declaration" : "public struct ConnectionPool: Hashable",
            "key.parsed_scope.end" : 872,
            "key.parsed_scope.start" : 865,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var idleTimeout: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 39443
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>idleTimeout<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 27,
                "key.name" : "idleTimeout",
                "key.namelength" : 11,
                "key.nameoffset" : 39454,
                "key.offset" : 39450,
                "key.parsed_declaration" : "public var idleTimeout: TimeAmount",
                "key.parsed_scope.end" : 867,
                "key.parsed_scope.start" : 867,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "TimeAmount",
                "key.typeusr" : "$s3NIO10TimeAmountVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV11idleTimeout3NIO10TimeAmountVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(idleTimeout: <Type usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/Type> = .seconds(60))<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 39487
                  }
                ],
                "key.bodylength" : 52,
                "key.bodyoffset" : 39540,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>idleTimeout<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10TimeAmountV\">TimeAmount<\/ref.struct><\/decl.var.parameter.type> = .seconds(60)<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 99,
                "key.name" : "init(idleTimeout:)",
                "key.namelength" : 44,
                "key.nameoffset" : 39494,
                "key.offset" : 39494,
                "key.parsed_declaration" : "public init(idleTimeout: TimeAmount = .seconds(60))",
                "key.parsed_scope.end" : 871,
                "key.parsed_scope.start" : 869,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.ConnectionPool.Type) -> (TimeAmount) -> HTTPClient.Configuration.ConnectionPool",
                "key.typeusr" : "$s11idleTimeout15AsyncHTTPClient0D0C13ConfigurationV14ConnectionPoolV3NIO10TimeAmountV_tcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV11idleTimeoutAG3NIO10TimeAmountV_tcfc"
              }
            ],
            "key.typename" : "HTTPClient.Configuration.ConnectionPool.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV14ConnectionPoolV"
          }
        ],
        "key.typename" : "HTTPClient.Configuration.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationVmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV"
      },
      {
        "key.annotated_decl" : "<Declaration>final class ChannelPipeline : <Type usr=\"s:3NIO14ChannelInvokerP\">ChannelInvoker<\/Type><\/Declaration>",
        "key.bodylength" : 1816,
        "key.bodyoffset" : 39630,
        "key.doc.column" : 20,
        "key.doc.declaration" : "final class ChannelPipeline : NIO.ChannelInvoker",
        "key.doc.discussion" : [
          {
            "Para" : "Each `Channel` has its own `ChannelPipeline` and it is created automatically when a new `Channel` is created."
          },
          {
            "Para" : "The following diagram describes how I\/O events are typically processed by `ChannelHandler`s in a `ChannelPipeline`. An I\/O event is handled by either a `ChannelInboundHandler` or a `ChannelOutboundHandler` and is forwarded to the next handler in the `ChannelPipeline` by calling the event propagation methods defined in `ChannelHandlerContext`, such as `ChannelHandlerContext.fireChannelRead` and `ChannelHandlerContext.write`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "An inbound event is handled by the inbound handlers in the head-to-tail direction as shown on the left side of the diagram. An inbound handler usually handles the inbound data generated by the I\/O thread on the bottom of the diagram. The inbound data is often read from a remote peer via the actual input operation such as `Socket.read`. If an inbound event goes beyond the tail inbound handler, it is discarded silently, or logged if it needs your attention."
          },
          {
            "Para" : "An outbound event is handled by the outbound handlers in the tail-to-head direction as shown on the right side of the diagram. An outbound handler usually generates or transforms the outbound traffic such as write requests. If an outbound event goes beyond the head outbound handler, it is handled by an I\/O thread associated with the `Channel`. The I\/O thread often performs the actual output operation such as `Socket.write`."
          },
          {
            "Para" : "For example, let us assume that we created the following pipeline:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In the example above, a class whose name starts with `Inbound` is an inbound handler. A class whose name starts with `Outbound` is an outbound handler."
          },
          {
            "Para" : "In the given example configuration, the handler evaluation order is 1, 2, 3, 4, 5 when an event goes inbound. When an event goes outbound, the order is 5, 4, 3, 2, 1.  On top of this principle, `ChannelPipeline` skips the evaluation of certain handlers to shorten the stack depth:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "Note:   Handlers may choose not to propagate messages down the pipeline immediately.  For example a handler may need to wait for additional data before sending a protocol event to the next handler in the pipeline.  Due to this you can’t assume that later handlers in the pipeline will receive the same number of events as were sent, or that events of different types will arrive in the same order. For example - a user event could overtake a data event if a handler is aggregating data events before propagating but immediately propagating user events."
          },
          {
            "Para" : "As you might noticed in the diagram above, a handler has to invoke the event propagation methods in `ChannelHandlerContext` to forward an event to its next handler. Those methods include:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "A user is supposed to have one or more `ChannelHandler`s in a `ChannelPipeline` to receive I\/O events (e.g. read) and to request I\/O operations (e.g. write and close).  For example, a typical server will have the following handlers in each channel’s pipeline, but your mileage may vary depending on the complexity and characteristics of the protocol and business logic:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "A `ChannelHandler` can be added or removed at any time because a `ChannelPipeline` is thread safe."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelPipeline.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelPipeline.swift\" line=\"141\" column=\"20\"><Name>ChannelPipeline<\/Name><USR>s:3NIO15ChannelPipelineC<\/USR><Declaration>final class ChannelPipeline : NIO.ChannelInvoker<\/Declaration><CommentParts><Abstract><Para>A list of <codeVoice>ChannelHandler<\/codeVoice>s that handle or intercept inbound events and outbound operations of a <codeVoice>Channel<\/codeVoice>. <codeVoice>ChannelPipeline<\/codeVoice> implements an advanced form of the Intercepting Filter pattern to give a user full control over how an event is handled and how the <codeVoice>ChannelHandler<\/codeVoice>s in a pipeline interact with each other.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h1>]]><\/rawHTML>Creation of a pipeline<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each <codeVoice>Channel<\/codeVoice> has its own <codeVoice>ChannelPipeline<\/codeVoice> and it is created automatically when a new <codeVoice>Channel<\/codeVoice> is created.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>How an event flows in a pipeline<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The following diagram describes how I\/O events are typically processed by <codeVoice>ChannelHandler<\/codeVoice>s in a <codeVoice>ChannelPipeline<\/codeVoice>. An I\/O event is handled by either a <codeVoice>ChannelInboundHandler<\/codeVoice> or a <codeVoice>ChannelOutboundHandler<\/codeVoice> and is forwarded to the next handler in the <codeVoice>ChannelPipeline<\/codeVoice> by calling the event propagation methods defined in <codeVoice>ChannelHandlerContext<\/codeVoice>, such as <codeVoice>ChannelHandlerContext.fireChannelRead<\/codeVoice> and <codeVoice>ChannelHandlerContext.write<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[                                                   I\/O Request]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                                                   via `Channel` or]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                                                   `ChannelHandlerContext`]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                                                     |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ +---------------------------------------------------+---------------+]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |                           ChannelPipeline         |               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |                                TAIL              \\|\/              |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +---------------------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    | Inbound Handler  N  |            | Outbound Handler  1  |    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +----------+----------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |              \/|\\                                  |               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |               |                                  \\|\/              |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +----------+----------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    | Inbound Handler N-1 |            | Outbound Handler  2  |    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +----------+----------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |              \/|\\                                  .               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |               .                                   .               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ | ChannelHandlerContext.fireIN_EVT() ChannelHandlerContext.OUT_EVT()|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |        [ method call]                       [method call]         |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |               .                                   .               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |               .                                  \\|\/              |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +----------+----------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    | Inbound Handler  2  |            | Outbound Handler M-1 |    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +----------+----------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |              \/|\\                                  |               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |               |                                  \\|\/              |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +----------+----------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    | Inbound Handler  1  |            | Outbound Handler  M  |    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |    +----------+----------+            +-----------+----------+    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |              \/|\\             HEAD                 |               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ +---------------+-----------------------------------+---------------+]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                 |                                  \\|\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ +---------------+-----------------------------------+---------------+]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |               |                                   |               |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |       [ Socket.read ]                    [ Socket.write ]         |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |                                                                   |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ |  SwiftNIO Internal I\/O Threads (Transport Implementation)         |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ +-------------------------------------------------------------------+]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>An inbound event is handled by the inbound handlers in the head-to-tail direction as shown on the left side of the diagram. An inbound handler usually handles the inbound data generated by the I\/O thread on the bottom of the diagram. The inbound data is often read from a remote peer via the actual input operation such as <codeVoice>Socket.read<\/codeVoice>. If an inbound event goes beyond the tail inbound handler, it is discarded silently, or logged if it needs your attention.<\/Para><Para>An outbound event is handled by the outbound handlers in the tail-to-head direction as shown on the right side of the diagram. An outbound handler usually generates or transforms the outbound traffic such as write requests. If an outbound event goes beyond the head outbound handler, it is handled by an I\/O thread associated with the <codeVoice>Channel<\/codeVoice>. The I\/O thread often performs the actual output operation such as <codeVoice>Socket.write<\/codeVoice>.<\/Para><Para>For example, let us assume that we created the following pipeline:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[ChannelPipeline p = ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let future = p.add(name: \"1\", handler: InboundHandlerA()).flatMap {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[  p.add(name: \"2\", handler: InboundHandlerB())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}.flatMap {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[  p.add(name: \"3\", handler: OutboundHandlerA())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}.flatMap {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[  p.add(name: \"4\", handler: OutboundHandlerB())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}.flatMap {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[  p.add(name: \"5\", handler: InboundOutboundHandlerX())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Handle the future as well ....]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In the example above, a class whose name starts with <codeVoice>Inbound<\/codeVoice> is an inbound handler. A class whose name starts with <codeVoice>Outbound<\/codeVoice> is an outbound handler.<\/Para><Para>In the given example configuration, the handler evaluation order is 1, 2, 3, 4, 5 when an event goes inbound. When an event goes outbound, the order is 5, 4, 3, 2, 1.  On top of this principle, <codeVoice>ChannelPipeline<\/codeVoice> skips the evaluation of certain handlers to shorten the stack depth:<\/Para><List-Bullet><Item><Para>3 and 4 don’t implement <codeVoice>ChannelInboundHandler<\/codeVoice>, and therefore the actual evaluation order of an inbound event will be: 1, 2, and 5.<\/Para><\/Item><Item><Para>1 and 2 don’t implement <codeVoice>ChannelOutboundHandler<\/codeVoice>, and therefore the actual evaluation order of a outbound event will be: 5, 4, and 3.<\/Para><\/Item><Item><Para>If 5 implements both <codeVoice>ChannelInboundHandler<\/codeVoice> and <codeVoice>ChannelOutboundHandler<\/codeVoice>, the evaluation order of an inbound and a outbound event could be 125 and 543 respectively.<\/Para><\/Item><\/List-Bullet><Para>Note:   Handlers may choose not to propagate messages down the pipeline immediately.  For example a handler may need to wait for additional data before sending a protocol event to the next handler in the pipeline.  Due to this you can’t assume that later handlers in the pipeline will receive the same number of events as were sent, or that events of different types will arrive in the same order. For example - a user event could overtake a data event if a handler is aggregating data events before propagating but immediately propagating user events.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Forwarding an event to the next handler<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>As you might noticed in the diagram above, a handler has to invoke the event propagation methods in <codeVoice>ChannelHandlerContext<\/codeVoice> to forward an event to its next handler. Those methods include:<\/Para><List-Bullet><Item><Para>Inbound event propagation methods defined in <codeVoice>ChannelInboundInvoker<\/codeVoice><\/Para><\/Item><Item><Para>Outbound event propagation methods defined in <codeVoice>ChannelOutboundInvoker<\/codeVoice>.<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h1>]]><\/rawHTML>Building a pipeline<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A user is supposed to have one or more <codeVoice>ChannelHandler<\/codeVoice>s in a <codeVoice>ChannelPipeline<\/codeVoice> to receive I\/O events (e.g. read) and to request I\/O operations (e.g. write and close).  For example, a typical server will have the following handlers in each channel’s pipeline, but your mileage may vary depending on the complexity and characteristics of the protocol and business logic:<\/Para><List-Bullet><Item><Para>Protocol Decoder - translates binary data (e.g. <codeVoice>ByteBuffer<\/codeVoice>) into a struct \/ class<\/Para><\/Item><Item><Para>Protocol Encoder - translates a struct \/ class into binary data (e.g. <codeVoice>ByteBuffer<\/codeVoice>)<\/Para><\/Item><Item><Para>Business Logic Handler - performs the actual business logic (e.g. database access)<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h1>]]><\/rawHTML>Thread safety<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A <codeVoice>ChannelHandler<\/codeVoice> can be added or removed at any time because a <codeVoice>ChannelPipeline<\/codeVoice> is thread safe.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 141,
        "key.doc.name" : "ChannelPipeline",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelPipeline.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ChannelPipeline<\/decl.name> : <ref.protocol usr=\"s:3NIO14ChannelInvokerP\">ChannelInvoker<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1844,
        "key.modulename" : "NIO",
        "key.name" : "ChannelPipeline",
        "key.namelength" : 15,
        "key.nameoffset" : 39613,
        "key.offset" : 39603,
        "key.parsed_declaration" : "extension ChannelPipeline",
        "key.parsed_scope.end" : 912,
        "key.parsed_scope.start" : 875,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func addProxyHandler(host: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>, authorization: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type>?) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 632,
            "key.bodyoffset" : 39749,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addProxyHandler<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>authorization<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 747,
            "key.name" : "addProxyHandler(host:port:authorization:)",
            "key.namelength" : 82,
            "key.nameoffset" : 39640,
            "key.offset" : 39635,
            "key.parsed_declaration" : "func addProxyHandler(host: String, port: Int, authorization: HTTPClient.Authorization?) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 887,
            "key.parsed_scope.start" : 876,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let encoder: <Type usr=\"s:8NIOHTTP118HTTPRequestEncoderC\">HTTPRequestEncoder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>encoder<\/decl.name>: <decl.var.type><ref.class usr=\"s:8NIOHTTP118HTTPRequestEncoderC\">HTTPRequestEncoder<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 34,
                "key.name" : "encoder",
                "key.namelength" : 7,
                "key.nameoffset" : 39762,
                "key.offset" : 39758,
                "key.parsed_declaration" : "let encoder = HTTPRequestEncoder()",
                "key.parsed_scope.end" : 877,
                "key.parsed_scope.start" : 877,
                "key.typename" : "HTTPRequestEncoder",
                "key.typeusr" : "$s8NIOHTTP118HTTPRequestEncoderCD",
                "key.usr" : "s:3NIO15ChannelPipelineC15AsyncHTTPClientE15addProxyHandler4host4port13authorizationAA15EventLoopFutureCyytGSS_SiAD0E0C13AuthorizationVSgtF7encoderL_8NIOHTTP118HTTPRequestEncoderCvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let decoder: <Type usr=\"s:3NIO20ByteToMessageHandlerC\">ByteToMessageHandler<\/Type>&lt;<Type usr=\"s:8NIOHTTP119HTTPResponseDecodera\">HTTPResponseDecoder<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decoder<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO20ByteToMessageHandlerC\">ByteToMessageHandler<\/ref.class>&lt;<ref.typealias usr=\"s:8NIOHTTP119HTTPResponseDecodera\">HTTPResponseDecoder<\/ref.typealias>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 93,
                "key.name" : "decoder",
                "key.namelength" : 7,
                "key.nameoffset" : 39805,
                "key.offset" : 39801,
                "key.parsed_declaration" : "let decoder = ByteToMessageHandler(HTTPResponseDecoder(leftOverBytesStrategy: .forwardBytes))",
                "key.parsed_scope.end" : 878,
                "key.parsed_scope.start" : 878,
                "key.typename" : "ByteToMessageHandler<HTTPDecoder<HTTPPart<HTTPResponseHead, ByteBuffer>, HTTPPart<HTTPRequestHead, IOData>>>",
                "key.typeusr" : "$s3NIO20ByteToMessageHandlerCy8NIOHTTP111HTTPDecoderCyAD8HTTPPartOyAD16HTTPResponseHeadVAA0B6BufferVGAHyAD011HTTPRequestJ0VAA6IODataOGGGD",
                "key.usr" : "s:3NIO15ChannelPipelineC15AsyncHTTPClientE15addProxyHandler4host4port13authorizationAA15EventLoopFutureCyytGSS_SiAD0E0C13AuthorizationVSgtF7decoderL_AA013ByteToMessageH0Cy8NIOHTTP111HTTPDecoderCyAT8HTTPPartOyAT16HTTPResponseHeadVAA0Q6BufferVGAXyAT011HTTPRequestX0VAA6IODataOGGGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let handler: <Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>handler<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 417,
                "key.name" : "handler",
                "key.namelength" : 7,
                "key.nameoffset" : 39907,
                "key.offset" : 39903,
                "key.parsed_declaration" : "let handler = HTTPClientProxyHandler(host: host, port: port, authorization: authorization) { channel in\n    let encoderRemovePromise = self.eventLoop.next().makePromise(of: Void.self)\n    channel.pipeline.removeHandler(encoder, promise: encoderRemovePromise)\n    return encoderRemovePromise.futureResult.flatMap {\n        channel.pipeline.removeHandler(decoder)\n    }\n}",
                "key.parsed_scope.end" : 879,
                "key.parsed_scope.start" : 879,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:3NIO15ChannelPipelineC7handler4typeAA15EventLoopFutureCyxGxm_tAA0B7HandlerRzlF\">handler(type:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "HTTPClientProxyHandler",
                "key.typeusr" : "$s15AsyncHTTPClient0B12ProxyHandlerCD",
                "key.usr" : "s:3NIO15ChannelPipelineC15AsyncHTTPClientE15addProxyHandler4host4port13authorizationAA15EventLoopFutureCyytGSS_SiAD0E0C13AuthorizationVSgtF7handlerL_AD0egH0Cvp"
              }
            ],
            "key.typename" : "(ChannelPipeline) -> (String, Int, HTTPClient.Authorization?) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4host4port13authorization3NIO15EventLoopFutureCyytGSS_Si15AsyncHTTPClient0I0C13AuthorizationVSgtcD",
            "key.usr" : "s:3NIO15ChannelPipelineC15AsyncHTTPClientE15addProxyHandler4host4port13authorizationAA15EventLoopFutureCyytGSS_SiAD0E0C13AuthorizationVSgtF"
          },
          {
            "key.annotated_decl" : "<Declaration>func addSSLHandlerIfNeeded(for key: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type>, tlsConfiguration: <Type usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/Type>?, addSSLClient: <Type usr=\"s:Sb\">Bool<\/Type>, handshakePromise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 900,
            "key.bodyoffset" : 40544,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addSSLHandlerIfNeeded<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tlsConfiguration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:6NIOSSL16TLSConfigurationV\">TLSConfiguration<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>addSSLClient<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>handshakePromise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1057,
            "key.name" : "addSSLHandlerIfNeeded(for:tlsConfiguration:addSSLClient:handshakePromise:)",
            "key.namelength" : 149,
            "key.nameoffset" : 40393,
            "key.offset" : 40388,
            "key.parsed_declaration" : "func addSSLHandlerIfNeeded(for key: ConnectionPool.Key, tlsConfiguration: TLSConfiguration?, addSSLClient: Bool, handshakePromise: EventLoopPromise<Void>)",
            "key.parsed_scope.end" : 911,
            "key.parsed_scope.start" : 889,
            "key.substructure" : [

            ],
            "key.typename" : "(ChannelPipeline) -> (ConnectionPool.Key, TLSConfiguration?, Bool, EventLoopPromise<()>) -> ()",
            "key.typeusr" : "$s3for16tlsConfiguration12addSSLClient16handshakePromisey15AsyncHTTPClient14ConnectionPoolC3KeyV_6NIOSSL16TLSConfigurationVSgSb3NIO09EventLoopG0VyytGtcD",
            "key.usr" : "s:3NIO15ChannelPipelineC15AsyncHTTPClientE21addSSLHandlerIfNeeded3for16tlsConfiguration0F9SSLClient16handshakePromiseyAD14ConnectionPoolC3KeyV_6NIOSSL16TLSConfigurationVSgSbAA09EventLoopO0VyytGtF"
          }
        ],
        "key.typename" : "ChannelPipeline.Type",
        "key.typeusr" : "$s3NIO15ChannelPipelineCmD",
        "key.usr" : "s:3NIO15ChannelPipelineC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class TLSEventsHandler : <Type usr=\"s:3NIO21ChannelInboundHandlerP\">ChannelInboundHandler<\/Type>, <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type><\/Declaration>",
        "key.bodylength" : 1108,
        "key.bodyoffset" : 41521,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 41473
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 41496
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TLSEventsHandler<\/decl.name> : <ref.protocol usr=\"s:3NIO21ChannelInboundHandlerP\">ChannelInboundHandler<\/ref.protocol>, <ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ChannelInboundHandler"
          },
          {
            "key.name" : "RemovableChannelHandler"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1181,
        "key.name" : "TLSEventsHandler",
        "key.namelength" : 16,
        "key.nameoffset" : 41455,
        "key.offset" : 41449,
        "key.parsed_declaration" : "class TLSEventsHandler: ChannelInboundHandler, RemovableChannelHandler",
        "key.parsed_scope.end" : 948,
        "key.parsed_scope.start" : 914,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:15AsyncHTTPClient16TLSEventsHandlerC\">TLSEventsHandler<\/Type>.InboundIn = <Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype InboundIn",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"40\" column=\"20\"><Name>InboundIn<\/Name><USR>s:3NIO21ChannelInboundHandlerP0C2InQa<\/USR><Declaration>associatedtype InboundIn<\/Declaration><CommentParts><Abstract><Para>The type of the inbound data which is wrapped in <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "InboundIn",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient16TLSEventsHandlerC\">TLSEventsHandler<\/ref.class>.<decl.name>InboundIn<\/decl.name> = <ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 28,
            "key.name" : "InboundIn",
            "key.namelength" : 9,
            "key.nameoffset" : 41536,
            "key.offset" : 41526,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
              }
            ],
            "key.parsed_declaration" : "typealias InboundIn = NIOAny",
            "key.parsed_scope.end" : 915,
            "key.parsed_scope.start" : 915,
            "key.typename" : "NIOAny.Type",
            "key.typeusr" : "$s3NIO6NIOAnyVmD",
            "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var completionPromise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;?<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>completionPromise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 46,
            "key.name" : "completionPromise",
            "key.namelength" : 17,
            "key.nameoffset" : 41564,
            "key.offset" : 41560,
            "key.parsed_declaration" : "var completionPromise: EventLoopPromise<Void>?",
            "key.parsed_scope.end" : 917,
            "key.parsed_scope.start" : 917,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "EventLoopPromise<()>?",
            "key.typeusr" : "$s3NIO16EventLoopPromiseVyytGSgD",
            "key.usr" : "s:15AsyncHTTPClient16TLSEventsHandlerC17completionPromise3NIO09EventLoopF0VyytGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(completionPromise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 56,
            "key.bodyoffset" : 41661,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>completionPromise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 106,
            "key.name" : "init(completionPromise:)",
            "key.namelength" : 47,
            "key.nameoffset" : 41612,
            "key.offset" : 41612,
            "key.parsed_declaration" : "init(completionPromise: EventLoopPromise<Void>)",
            "key.parsed_scope.end" : 921,
            "key.parsed_scope.start" : 919,
            "key.substructure" : [

            ],
            "key.typename" : "(TLSEventsHandler.Type) -> (EventLoopPromise<()>) -> TLSEventsHandler",
            "key.typeusr" : "$s17completionPromise15AsyncHTTPClient16TLSEventsHandlerC3NIO09EventLoopB0VyytG_tcD",
            "key.usr" : "s:15AsyncHTTPClient16TLSEventsHandlerC17completionPromiseAC3NIO09EventLoopF0VyytG_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func userInboundEventTriggered(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, event: Any)<\/Declaration>",
            "key.bodylength" : 424,
            "key.bodyoffset" : 41800,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func userInboundEventTriggered(context: NIO.ChannelHandlerContext, event: Any)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireUserInboundEventTriggered` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"206\" column=\"10\"><Name>userInboundEventTriggered(context:event:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF<\/USR><Declaration>func userInboundEventTriggered(context: NIO.ChannelHandlerContext, event: Any)<\/Declaration><CommentParts><Abstract><Para>Called when a user inbound event has been triggered.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>event<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The event.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireUserInboundEventTriggered<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 206,
            "key.doc.name" : "userInboundEventTriggered(context:event:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The event."
                  }
                ],
                "name" : "event"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>userInboundEventTriggered<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>event<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 501,
            "key.name" : "userInboundEventTriggered(context:event:)",
            "key.namelength" : 69,
            "key.nameoffset" : 41729,
            "key.offset" : 41724,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF"
              }
            ],
            "key.parsed_declaration" : "func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)",
            "key.parsed_scope.end" : 935,
            "key.parsed_scope.start" : 923,
            "key.substructure" : [

            ],
            "key.typename" : "(TLSEventsHandler) -> (ChannelHandlerContext, Any) -> ()",
            "key.typeusr" : "$s7context5eventy3NIO21ChannelHandlerContextC_yptcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func errorCaught(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, error: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
            "key.bodylength" : 184,
            "key.bodyoffset" : 42295,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func errorCaught(context: NIO.ChannelHandlerContext, error: Error)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireErrorCaught` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the error."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"215\" column=\"10\"><Name>errorCaught(context:error:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF<\/USR><Declaration>func errorCaught(context: NIO.ChannelHandlerContext, error: Error)<\/Declaration><CommentParts><Abstract><Para>An error was encountered earlier in the inbound <codeVoice>ChannelPipeline<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Error<\/codeVoice> that was encountered.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireErrorCaught<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the error.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 215,
            "key.doc.name" : "errorCaught(context:error:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `Error` that was encountered."
                  }
                ],
                "name" : "error"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>errorCaught<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 249,
            "key.name" : "errorCaught(context:error:)",
            "key.namelength" : 57,
            "key.nameoffset" : 42236,
            "key.offset" : 42231,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF"
              }
            ],
            "key.parsed_declaration" : "func errorCaught(context: ChannelHandlerContext, error: Error)",
            "key.parsed_scope.end" : 942,
            "key.parsed_scope.start" : 937,
            "key.substructure" : [

            ],
            "key.typename" : "(TLSEventsHandler) -> (ChannelHandlerContext, Error) -> ()",
            "key.typeusr" : "$s7context5errory3NIO21ChannelHandlerContextC_s5Error_ptcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func handlerRemoved(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.bodylength" : 88,
            "key.bodyoffset" : 42539,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func handlerRemoved(context: NIO.ChannelHandlerContext)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"31\" column=\"10\"><Name>handlerRemoved(context:)<\/Name><USR>s:3NIO14ChannelHandlerP14handlerRemoved7contextyAA0bC7ContextC_tF<\/USR><Declaration>func handlerRemoved(context: NIO.ChannelHandlerContext)<\/Declaration><CommentParts><Abstract><Para>Called when this <codeVoice>ChannelHandler<\/codeVoice> is removed from the <codeVoice>ChannelPipeline<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "handlerRemoved(context:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>handlerRemoved<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.name" : "handlerRemoved(context:)",
            "key.namelength" : 46,
            "key.nameoffset" : 42491,
            "key.offset" : 42486,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO14ChannelHandlerP14handlerRemoved7contextyAA0bC7ContextC_tF"
              }
            ],
            "key.parsed_declaration" : "func handlerRemoved(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 947,
            "key.parsed_scope.start" : 944,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>struct NoResult : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
                "key.bodylength" : 0,
                "key.bodyoffset" : 42572,
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 5,
                    "key.offset" : 42565
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NoResult<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.struct>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Error"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 25,
                "key.name" : "NoResult",
                "key.namelength" : 8,
                "key.nameoffset" : 42555,
                "key.offset" : 42548,
                "key.parsed_declaration" : "struct NoResult: Error",
                "key.parsed_scope.end" : 945,
                "key.parsed_scope.start" : 945,
                "key.typename" : "NoResult.Type",
                "key.typeusr" : "$s15AsyncHTTPClient16TLSEventsHandlerC14handlerRemoved7contexty3NIO07ChannelD7ContextC_tF8NoResultL_VmD",
                "key.usr" : "s:15AsyncHTTPClient16TLSEventsHandlerC14handlerRemoved7contexty3NIO07ChannelD7ContextC_tF8NoResultL_V"
              }
            ],
            "key.typename" : "(TLSEventsHandler) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:3NIO14ChannelHandlerP14handlerRemoved7contextyAA0bC7ContextC_tF"
          }
        ],
        "key.typename" : "TLSEventsHandler.Type",
        "key.typeusr" : "$s15AsyncHTTPClient16TLSEventsHandlerCmD",
        "key.usr" : "s:15AsyncHTTPClient16TLSEventsHandlerC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct HTTPClientError : <Type usr=\"s:s5ErrorP\">Error<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 42660
          }
        ],
        "key.bodylength" : 4090,
        "key.bodyoffset" : 42734,
        "key.doc.column" : 15,
        "key.doc.comment" : "Possible client errors.",
        "key.doc.declaration" : "public struct HTTPClientError : Error, Equatable, CustomStringConvertible",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"951\" column=\"15\"><Name>HTTPClientError<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV<\/USR><Declaration>public struct HTTPClientError : Error, Equatable, CustomStringConvertible<\/Declaration><CommentParts><Abstract><Para>Possible client errors.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 951,
        "key.doc.name" : "HTTPClientError",
        "key.doc.type" : "Class",
        "key.doclength" : 28,
        "key.docoffset" : 42632,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 42691
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 42698
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 42709
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>HTTPClientError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Error"
          },
          {
            "key.name" : "Equatable"
          },
          {
            "key.name" : "CustomStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 4158,
        "key.name" : "HTTPClientError",
        "key.namelength" : 15,
        "key.nameoffset" : 42674,
        "key.offset" : 42667,
        "key.parsed_declaration" : "public struct HTTPClientError: Error, Equatable, CustomStringConvertible",
        "key.parsed_scope.end" : 1031,
        "key.parsed_scope.start" : 951,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private enum <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type>.Code : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 42739
              }
            ],
            "key.bodylength" : 737,
            "key.bodyoffset" : 42769,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 9,
                "key.offset" : 42758
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct>.<decl.name>Code<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Equatable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 760,
            "key.name" : "Code",
            "key.namelength" : 4,
            "key.nameoffset" : 42752,
            "key.offset" : 42747,
            "key.parsed_declaration" : "private enum Code: Equatable",
            "key.parsed_scope.end" : 975,
            "key.parsed_scope.start" : 952,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 15,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42778,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case invalidURL<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>invalidURL<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 10,
                    "key.name" : "invalidURL",
                    "key.namelength" : 10,
                    "key.nameoffset" : 42783,
                    "key.offset" : 42783,
                    "key.parsed_declaration" : "case invalidURL",
                    "key.parsed_scope.end" : 953,
                    "key.parsed_scope.start" : 953,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO10invalidURLyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 14,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42802,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case emptyHost<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>emptyHost<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 9,
                    "key.name" : "emptyHost",
                    "key.namelength" : 9,
                    "key.nameoffset" : 42807,
                    "key.offset" : 42807,
                    "key.parsed_declaration" : "case emptyHost",
                    "key.parsed_scope.end" : 954,
                    "key.parsed_scope.start" : 954,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO9emptyHostyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 22,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42825,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case missingSocketPath<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>missingSocketPath<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 17,
                    "key.name" : "missingSocketPath",
                    "key.namelength" : 17,
                    "key.nameoffset" : 42830,
                    "key.offset" : 42830,
                    "key.parsed_declaration" : "case missingSocketPath",
                    "key.parsed_scope.end" : 955,
                    "key.parsed_scope.start" : 955,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO17missingSocketPathyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 20,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42856,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case alreadyShutdown<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>alreadyShutdown<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 15,
                    "key.name" : "alreadyShutdown",
                    "key.namelength" : 15,
                    "key.nameoffset" : 42861,
                    "key.offset" : 42861,
                    "key.parsed_declaration" : "case alreadyShutdown",
                    "key.parsed_scope.end" : 956,
                    "key.parsed_scope.start" : 956,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO15alreadyShutdownyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 16,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42885,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case emptyScheme<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>emptyScheme<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 11,
                    "key.name" : "emptyScheme",
                    "key.namelength" : 11,
                    "key.nameoffset" : 42890,
                    "key.offset" : 42890,
                    "key.parsed_declaration" : "case emptyScheme",
                    "key.parsed_scope.end" : 957,
                    "key.parsed_scope.start" : 957,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO11emptySchemeyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 30,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42910,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case unsupportedScheme(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>unsupportedScheme<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 25,
                    "key.name" : "unsupportedScheme(_:)",
                    "key.namelength" : 25,
                    "key.nameoffset" : 42915,
                    "key.offset" : 42915,
                    "key.parsed_declaration" : "case unsupportedScheme(String)",
                    "key.parsed_scope.end" : 958,
                    "key.parsed_scope.start" : 958,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClientError.Code.Type) -> (String) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOSScAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO17unsupportedSchemeyAFSScAFmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 16,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42949,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case readTimeout<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>readTimeout<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 11,
                    "key.name" : "readTimeout",
                    "key.namelength" : 11,
                    "key.nameoffset" : 42954,
                    "key.offset" : 42954,
                    "key.parsed_declaration" : "case readTimeout",
                    "key.parsed_scope.end" : 959,
                    "key.parsed_scope.start" : 959,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO11readTimeoutyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 27,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 42974,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case remoteConnectionClosed<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>remoteConnectionClosed<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 22,
                    "key.name" : "remoteConnectionClosed",
                    "key.namelength" : 22,
                    "key.nameoffset" : 42979,
                    "key.offset" : 42979,
                    "key.parsed_declaration" : "case remoteConnectionClosed",
                    "key.parsed_scope.end" : 960,
                    "key.parsed_scope.start" : 960,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO22remoteConnectionClosedyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 14,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43010,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case cancelled<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>cancelled<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 9,
                    "key.name" : "cancelled",
                    "key.namelength" : 9,
                    "key.nameoffset" : 43015,
                    "key.offset" : 43015,
                    "key.parsed_declaration" : "case cancelled",
                    "key.parsed_scope.end" : 961,
                    "key.parsed_scope.start" : 961,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO9cancelledyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 37,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43033,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case identityCodingIncorrectlyPresent<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>identityCodingIncorrectlyPresent<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 32,
                    "key.name" : "identityCodingIncorrectlyPresent",
                    "key.namelength" : 32,
                    "key.nameoffset" : 43038,
                    "key.offset" : 43038,
                    "key.parsed_declaration" : "case identityCodingIncorrectlyPresent",
                    "key.parsed_scope.end" : 962,
                    "key.parsed_scope.start" : 962,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO32identityCodingIncorrectlyPresentyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 34,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43079,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case chunkedSpecifiedMultipleTimes<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>chunkedSpecifiedMultipleTimes<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 29,
                    "key.name" : "chunkedSpecifiedMultipleTimes",
                    "key.namelength" : 29,
                    "key.nameoffset" : 43084,
                    "key.offset" : 43084,
                    "key.parsed_declaration" : "case chunkedSpecifiedMultipleTimes",
                    "key.parsed_scope.end" : 963,
                    "key.parsed_scope.start" : 963,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO29chunkedSpecifiedMultipleTimesyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 25,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43122,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case invalidProxyResponse<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>invalidProxyResponse<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 20,
                    "key.name" : "invalidProxyResponse",
                    "key.namelength" : 20,
                    "key.nameoffset" : 43127,
                    "key.offset" : 43127,
                    "key.parsed_declaration" : "case invalidProxyResponse",
                    "key.parsed_scope.end" : 964,
                    "key.parsed_scope.start" : 964,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO20invalidProxyResponseyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 25,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43156,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case contentLengthMissing<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>contentLengthMissing<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 20,
                    "key.name" : "contentLengthMissing",
                    "key.namelength" : 20,
                    "key.nameoffset" : 43161,
                    "key.offset" : 43161,
                    "key.parsed_declaration" : "case contentLengthMissing",
                    "key.parsed_scope.end" : 965,
                    "key.parsed_scope.start" : 965,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO20contentLengthMissingyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 32,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43190,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case proxyAuthenticationRequired<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>proxyAuthenticationRequired<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 27,
                    "key.name" : "proxyAuthenticationRequired",
                    "key.namelength" : 27,
                    "key.nameoffset" : 43195,
                    "key.offset" : 43195,
                    "key.parsed_declaration" : "case proxyAuthenticationRequired",
                    "key.parsed_scope.end" : 966,
                    "key.parsed_scope.start" : 966,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO27proxyAuthenticationRequiredyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 25,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43231,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case redirectLimitReached<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>redirectLimitReached<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 20,
                    "key.name" : "redirectLimitReached",
                    "key.namelength" : 20,
                    "key.nameoffset" : 43236,
                    "key.offset" : 43236,
                    "key.parsed_declaration" : "case redirectLimitReached",
                    "key.parsed_scope.end" : 967,
                    "key.parsed_scope.start" : 967,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO20redirectLimitReachedyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 26,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43265,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case redirectCycleDetected<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>redirectCycleDetected<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 21,
                    "key.name" : "redirectCycleDetected",
                    "key.namelength" : 21,
                    "key.nameoffset" : 43270,
                    "key.offset" : 43270,
                    "key.parsed_declaration" : "case redirectCycleDetected",
                    "key.parsed_scope.end" : 968,
                    "key.parsed_scope.start" : 968,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO21redirectCycleDetectedyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 20,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43300,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case uncleanShutdown<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>uncleanShutdown<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 15,
                    "key.name" : "uncleanShutdown",
                    "key.namelength" : 15,
                    "key.nameoffset" : 43305,
                    "key.offset" : 43305,
                    "key.parsed_declaration" : "case uncleanShutdown",
                    "key.parsed_scope.end" : 969,
                    "key.parsed_scope.start" : 969,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO15uncleanShutdownyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 25,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43329,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case traceRequestWithBody<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>traceRequestWithBody<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 20,
                    "key.name" : "traceRequestWithBody",
                    "key.namelength" : 20,
                    "key.nameoffset" : 43334,
                    "key.offset" : 43334,
                    "key.parsed_declaration" : "case traceRequestWithBody",
                    "key.parsed_scope.end" : 970,
                    "key.parsed_scope.start" : 970,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO20traceRequestWithBodyyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 38,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43363,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case invalidHeaderFieldNames([<Type usr=\"s:SS\">String<\/Type>])<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>invalidHeaderFieldNames<\/decl.name>(<decl.var.parameter><decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 33,
                    "key.name" : "invalidHeaderFieldNames(_:)",
                    "key.namelength" : 33,
                    "key.nameoffset" : 43368,
                    "key.offset" : 43368,
                    "key.parsed_declaration" : "case invalidHeaderFieldNames([String])",
                    "key.parsed_scope.end" : 971,
                    "key.parsed_scope.start" : 971,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClientError.Code.Type) -> ([String]) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOSaySSGcAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO23invalidHeaderFieldNamesyAFSaySSGcAFmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 23,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43410,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case bodyLengthMismatch<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>bodyLengthMismatch<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 18,
                    "key.name" : "bodyLengthMismatch",
                    "key.namelength" : 18,
                    "key.nameoffset" : 43415,
                    "key.offset" : 43415,
                    "key.parsed_declaration" : "case bodyLengthMismatch",
                    "key.parsed_scope.end" : 972,
                    "key.parsed_scope.start" : 972,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO18bodyLengthMismatchyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 26,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43442,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case writeAfterRequestSent<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>writeAfterRequestSent<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 21,
                    "key.name" : "writeAfterRequestSent",
                    "key.namelength" : 21,
                    "key.nameoffset" : 43447,
                    "key.offset" : 43447,
                    "key.parsed_declaration" : "case writeAfterRequestSent",
                    "key.parsed_scope.end" : 973,
                    "key.parsed_scope.start" : 973,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO21writeAfterRequestSentyA2FmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 24,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 43477,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case incompatibleHeaders<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>incompatibleHeaders<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 19,
                    "key.name" : "incompatibleHeaders",
                    "key.namelength" : 19,
                    "key.nameoffset" : 43482,
                    "key.offset" : 43482,
                    "key.parsed_declaration" : "case incompatibleHeaders",
                    "key.parsed_scope.end" : 974,
                    "key.parsed_scope.start" : 974,
                    "key.typename" : "(HTTPClientError.Code.Type) -> HTTPClientError.Code",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOAFmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO19incompatibleHeadersyA2FmF"
                  }
                ]
              }
            ],
            "key.typename" : "HTTPClientError.Code.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOmD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var code: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO\">Code<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 43513
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>code<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO\">Code<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 14,
            "key.name" : "code",
            "key.namelength" : 4,
            "key.nameoffset" : 43525,
            "key.offset" : 43521,
            "key.parsed_declaration" : "private var code: Code",
            "key.parsed_scope.end" : 977,
            "key.parsed_scope.start" : 977,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "HTTPClientError.Code",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLOD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4code33_797EF4A15335F12F4B8BAA3062C343BCLLAC4CodeAELLOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private init(code: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO\">Code<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 43541
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 43567,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>code<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B5ErrorV4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO\">Code<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 49,
            "key.name" : "init(code:)",
            "key.namelength" : 16,
            "key.nameoffset" : 43549,
            "key.offset" : 43549,
            "key.parsed_declaration" : "private init(code: Code)",
            "key.parsed_scope.end" : 981,
            "key.parsed_scope.start" : 979,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientError.Type) -> (HTTPClientError.Code) -> HTTPClientError",
            "key.typeusr" : "$s4code15AsyncHTTPClient0C5ErrorVAD4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO_tcD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV4codeA2C4Code33_797EF4A15335F12F4B8BAA3062C343BCLLO_tcAFLlfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 43604
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 43636,
            "key.doc.declaration" : "var description: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 97,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 43615,
            "key.offset" : 43611,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 985,
            "key.parsed_scope.start" : 983,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let invalidURL: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 43747
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "URL provided is invalid.",
            "key.doc.declaration" : "public static let invalidURL: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"988\" column=\"23\"><Name>invalidURL<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV10invalidURLACvpZ<\/USR><Declaration>public static let invalidURL: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>URL provided is invalid.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 988,
            "key.doc.name" : "invalidURL",
            "key.doc.type" : "Other",
            "key.doclength" : 29,
            "key.docoffset" : 43714,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>invalidURL<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 58,
            "key.name" : "invalidURL",
            "key.namelength" : 10,
            "key.nameoffset" : 43765,
            "key.offset" : 43754,
            "key.parsed_declaration" : "public static let invalidURL = HTTPClientError(code: .invalidURL)",
            "key.parsed_scope.end" : 988,
            "key.parsed_scope.start" : 988,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV10invalidURLACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let emptyHost: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 43852
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "URL does not contain host.",
            "key.doc.declaration" : "public static let emptyHost: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"990\" column=\"23\"><Name>emptyHost<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV9emptyHostACvpZ<\/USR><Declaration>public static let emptyHost: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>URL does not contain host.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 990,
            "key.doc.name" : "emptyHost",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 43817,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>emptyHost<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 56,
            "key.name" : "emptyHost",
            "key.namelength" : 9,
            "key.nameoffset" : 43870,
            "key.offset" : 43859,
            "key.parsed_declaration" : "public static let emptyHost = HTTPClientError(code: .emptyHost)",
            "key.parsed_scope.end" : 990,
            "key.parsed_scope.start" : 990,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV9emptyHostACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let missingSocketPath: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 43997
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "URL does not contain a socketPath as a host for http(s)+unix shemes.",
            "key.doc.declaration" : "public static let missingSocketPath: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"992\" column=\"23\"><Name>missingSocketPath<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV17missingSocketPathACvpZ<\/USR><Declaration>public static let missingSocketPath: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>URL does not contain a socketPath as a host for http(s)+unix shemes.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 992,
            "key.doc.name" : "missingSocketPath",
            "key.doc.type" : "Other",
            "key.doclength" : 73,
            "key.docoffset" : 43920,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>missingSocketPath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 72,
            "key.name" : "missingSocketPath",
            "key.namelength" : 17,
            "key.nameoffset" : 44015,
            "key.offset" : 44004,
            "key.parsed_declaration" : "public static let missingSocketPath = HTTPClientError(code: .missingSocketPath)",
            "key.parsed_scope.end" : 992,
            "key.parsed_scope.start" : 992,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV17missingSocketPathACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let alreadyShutdown: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 44145
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Client is shutdown and cannot be used for new requests.",
            "key.doc.declaration" : "public static let alreadyShutdown: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"994\" column=\"23\"><Name>alreadyShutdown<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV15alreadyShutdownACvpZ<\/USR><Declaration>public static let alreadyShutdown: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Client is shutdown and cannot be used for new requests.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 994,
            "key.doc.name" : "alreadyShutdown",
            "key.doc.type" : "Other",
            "key.doclength" : 60,
            "key.docoffset" : 44081,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>alreadyShutdown<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 68,
            "key.name" : "alreadyShutdown",
            "key.namelength" : 15,
            "key.nameoffset" : 44163,
            "key.offset" : 44152,
            "key.parsed_declaration" : "public static let alreadyShutdown = HTTPClientError(code: .alreadyShutdown)",
            "key.parsed_scope.end" : 994,
            "key.parsed_scope.start" : 994,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV15alreadyShutdownACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let emptyScheme: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 44262
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "URL does not contain scheme.",
            "key.doc.declaration" : "public static let emptyScheme: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"996\" column=\"23\"><Name>emptyScheme<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV11emptySchemeACvpZ<\/USR><Declaration>public static let emptyScheme: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>URL does not contain scheme.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 996,
            "key.doc.name" : "emptyScheme",
            "key.doc.type" : "Other",
            "key.doclength" : 33,
            "key.docoffset" : 44225,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>emptyScheme<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 60,
            "key.name" : "emptyScheme",
            "key.namelength" : 11,
            "key.nameoffset" : 44280,
            "key.offset" : 44269,
            "key.parsed_declaration" : "public static let emptyScheme = HTTPClientError(code: .emptyScheme)",
            "key.parsed_scope.end" : 996,
            "key.parsed_scope.start" : 996,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV11emptySchemeACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func unsupportedScheme(_ scheme: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 44422
              }
            ],
            "key.bodylength" : 58,
            "key.bodyoffset" : 44497,
            "key.doc.column" : 24,
            "key.doc.comment" : "Provided URL scheme is not supported, supported schemes are: `http` and `https`",
            "key.doc.declaration" : "public static func unsupportedScheme(_ scheme: String) -> HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"998\" column=\"24\"><Name>unsupportedScheme(_:)<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV17unsupportedSchemeyACSSFZ<\/USR><Declaration>public static func unsupportedScheme(_ scheme: String) -&gt; HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Provided URL scheme is not supported, supported schemes are: <codeVoice>http<\/codeVoice> and <codeVoice>https<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 998,
            "key.doc.name" : "unsupportedScheme(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 84,
            "key.docoffset" : 44334,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>unsupportedScheme<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scheme<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 127,
            "key.name" : "unsupportedScheme(_:)",
            "key.namelength" : 35,
            "key.nameoffset" : 44441,
            "key.offset" : 44429,
            "key.parsed_declaration" : "public static func unsupportedScheme(_ scheme: String) -> HTTPClientError",
            "key.parsed_scope.end" : 998,
            "key.parsed_scope.start" : 998,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientError.Type) -> (String) -> HTTPClientError",
            "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorVSScD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV17unsupportedSchemeyACSSFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let readTimeout: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 44588
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Request timed out.",
            "key.doc.declaration" : "public static let readTimeout: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1000\" column=\"23\"><Name>readTimeout<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV11readTimeoutACvpZ<\/USR><Declaration>public static let readTimeout: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Request timed out.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1000,
            "key.doc.name" : "readTimeout",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 44561,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>readTimeout<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 60,
            "key.name" : "readTimeout",
            "key.namelength" : 11,
            "key.nameoffset" : 44606,
            "key.offset" : 44595,
            "key.parsed_declaration" : "public static let readTimeout = HTTPClientError(code: .readTimeout)",
            "key.parsed_scope.end" : 1000,
            "key.parsed_scope.start" : 1000,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV11readTimeoutACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let remoteConnectionClosed: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 44711
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Remote connection was closed unexpectedly.",
            "key.doc.declaration" : "public static let remoteConnectionClosed: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1002\" column=\"23\"><Name>remoteConnectionClosed<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV22remoteConnectionClosedACvpZ<\/USR><Declaration>public static let remoteConnectionClosed: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Remote connection was closed unexpectedly.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1002,
            "key.doc.name" : "remoteConnectionClosed",
            "key.doc.type" : "Other",
            "key.doclength" : 47,
            "key.docoffset" : 44660,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>remoteConnectionClosed<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 82,
            "key.name" : "remoteConnectionClosed",
            "key.namelength" : 22,
            "key.nameoffset" : 44729,
            "key.offset" : 44718,
            "key.parsed_declaration" : "public static let remoteConnectionClosed = HTTPClientError(code: .remoteConnectionClosed)",
            "key.parsed_scope.end" : 1002,
            "key.parsed_scope.start" : 1002,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV22remoteConnectionClosedACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let cancelled: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 44836
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Request was cancelled.",
            "key.doc.declaration" : "public static let cancelled: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1004\" column=\"23\"><Name>cancelled<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV9cancelledACvpZ<\/USR><Declaration>public static let cancelled: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Request was cancelled.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1004,
            "key.doc.name" : "cancelled",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 44805,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cancelled<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 56,
            "key.name" : "cancelled",
            "key.namelength" : 9,
            "key.nameoffset" : 44854,
            "key.offset" : 44843,
            "key.parsed_declaration" : "public static let cancelled = HTTPClientError(code: .cancelled)",
            "key.parsed_scope.end" : 1004,
            "key.parsed_scope.start" : 1004,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV9cancelledACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let identityCodingIncorrectlyPresent: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 44956
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Request contains invalid identity encoding.",
            "key.doc.declaration" : "public static let identityCodingIncorrectlyPresent: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1006\" column=\"23\"><Name>identityCodingIncorrectlyPresent<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV32identityCodingIncorrectlyPresentACvpZ<\/USR><Declaration>public static let identityCodingIncorrectlyPresent: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Request contains invalid identity encoding.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1006,
            "key.doc.name" : "identityCodingIncorrectlyPresent",
            "key.doc.type" : "Other",
            "key.doclength" : 48,
            "key.docoffset" : 44904,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>identityCodingIncorrectlyPresent<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 102,
            "key.name" : "identityCodingIncorrectlyPresent",
            "key.namelength" : 32,
            "key.nameoffset" : 44974,
            "key.offset" : 44963,
            "key.parsed_declaration" : "public static let identityCodingIncorrectlyPresent = HTTPClientError(code: .identityCodingIncorrectlyPresent)",
            "key.parsed_scope.end" : 1006,
            "key.parsed_scope.start" : 1006,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV32identityCodingIncorrectlyPresentACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let chunkedSpecifiedMultipleTimes: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 45124
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Request contains multiple chunks definitions.",
            "key.doc.declaration" : "public static let chunkedSpecifiedMultipleTimes: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1008\" column=\"23\"><Name>chunkedSpecifiedMultipleTimes<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV29chunkedSpecifiedMultipleTimesACvpZ<\/USR><Declaration>public static let chunkedSpecifiedMultipleTimes: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Request contains multiple chunks definitions.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1008,
            "key.doc.name" : "chunkedSpecifiedMultipleTimes",
            "key.doc.type" : "Other",
            "key.doclength" : 50,
            "key.docoffset" : 45070,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>chunkedSpecifiedMultipleTimes<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 96,
            "key.name" : "chunkedSpecifiedMultipleTimes",
            "key.namelength" : 29,
            "key.nameoffset" : 45142,
            "key.offset" : 45131,
            "key.parsed_declaration" : "public static let chunkedSpecifiedMultipleTimes = HTTPClientError(code: .chunkedSpecifiedMultipleTimes)",
            "key.parsed_scope.end" : 1008,
            "key.parsed_scope.start" : 1008,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV29chunkedSpecifiedMultipleTimesACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let invalidProxyResponse: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 45268
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Proxy response was invalid.",
            "key.doc.declaration" : "public static let invalidProxyResponse: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1010\" column=\"23\"><Name>invalidProxyResponse<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV20invalidProxyResponseACvpZ<\/USR><Declaration>public static let invalidProxyResponse: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Proxy response was invalid.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1010,
            "key.doc.name" : "invalidProxyResponse",
            "key.doc.type" : "Other",
            "key.doclength" : 32,
            "key.docoffset" : 45232,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>invalidProxyResponse<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 78,
            "key.name" : "invalidProxyResponse",
            "key.namelength" : 20,
            "key.nameoffset" : 45286,
            "key.offset" : 45275,
            "key.parsed_declaration" : "public static let invalidProxyResponse = HTTPClientError(code: .invalidProxyResponse)",
            "key.parsed_scope.end" : 1010,
            "key.parsed_scope.start" : 1010,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV20invalidProxyResponseACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let contentLengthMissing: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 45416
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Request does not contain `Content-Length` header.",
            "key.doc.declaration" : "public static let contentLengthMissing: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1012\" column=\"23\"><Name>contentLengthMissing<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV20contentLengthMissingACvpZ<\/USR><Declaration>public static let contentLengthMissing: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Request does not contain <codeVoice>Content-Length<\/codeVoice> header.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1012,
            "key.doc.name" : "contentLengthMissing",
            "key.doc.type" : "Other",
            "key.doclength" : 54,
            "key.docoffset" : 45358,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>contentLengthMissing<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 78,
            "key.name" : "contentLengthMissing",
            "key.namelength" : 20,
            "key.nameoffset" : 45434,
            "key.offset" : 45423,
            "key.parsed_declaration" : "public static let contentLengthMissing = HTTPClientError(code: .contentLengthMissing)",
            "key.parsed_scope.end" : 1012,
            "key.parsed_scope.start" : 1012,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV20contentLengthMissingACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let proxyAuthenticationRequired: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 45545
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Proxy Authentication Required.",
            "key.doc.declaration" : "public static let proxyAuthenticationRequired: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1014\" column=\"23\"><Name>proxyAuthenticationRequired<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV27proxyAuthenticationRequiredACvpZ<\/USR><Declaration>public static let proxyAuthenticationRequired: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Proxy Authentication Required.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1014,
            "key.doc.name" : "proxyAuthenticationRequired",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 45506,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>proxyAuthenticationRequired<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 92,
            "key.name" : "proxyAuthenticationRequired",
            "key.namelength" : 27,
            "key.nameoffset" : 45563,
            "key.offset" : 45552,
            "key.parsed_declaration" : "public static let proxyAuthenticationRequired = HTTPClientError(code: .proxyAuthenticationRequired)",
            "key.parsed_scope.end" : 1014,
            "key.parsed_scope.start" : 1014,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV27proxyAuthenticationRequiredACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let redirectLimitReached: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 45681
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Redirect Limit reached.",
            "key.doc.declaration" : "public static let redirectLimitReached: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1016\" column=\"23\"><Name>redirectLimitReached<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV20redirectLimitReachedACvpZ<\/USR><Declaration>public static let redirectLimitReached: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Redirect Limit reached.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1016,
            "key.doc.name" : "redirectLimitReached",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 45649,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>redirectLimitReached<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 78,
            "key.name" : "redirectLimitReached",
            "key.namelength" : 20,
            "key.nameoffset" : 45699,
            "key.offset" : 45688,
            "key.parsed_declaration" : "public static let redirectLimitReached = HTTPClientError(code: .redirectLimitReached)",
            "key.parsed_scope.end" : 1016,
            "key.parsed_scope.start" : 1016,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV20redirectLimitReachedACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let redirectCycleDetected: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 45804
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Redirect Cycle detected.",
            "key.doc.declaration" : "public static let redirectCycleDetected: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1018\" column=\"23\"><Name>redirectCycleDetected<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV21redirectCycleDetectedACvpZ<\/USR><Declaration>public static let redirectCycleDetected: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Redirect Cycle detected.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1018,
            "key.doc.name" : "redirectCycleDetected",
            "key.doc.type" : "Other",
            "key.doclength" : 29,
            "key.docoffset" : 45771,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>redirectCycleDetected<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 80,
            "key.name" : "redirectCycleDetected",
            "key.namelength" : 21,
            "key.nameoffset" : 45822,
            "key.offset" : 45811,
            "key.parsed_declaration" : "public static let redirectCycleDetected = HTTPClientError(code: .redirectCycleDetected)",
            "key.parsed_scope.end" : 1018,
            "key.parsed_scope.start" : 1018,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV21redirectCycleDetectedACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let uncleanShutdown: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 45922
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Unclean shutdown.",
            "key.doc.declaration" : "public static let uncleanShutdown: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1020\" column=\"23\"><Name>uncleanShutdown<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV15uncleanShutdownACvpZ<\/USR><Declaration>public static let uncleanShutdown: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Unclean shutdown.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1020,
            "key.doc.name" : "uncleanShutdown",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 45896,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uncleanShutdown<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 68,
            "key.name" : "uncleanShutdown",
            "key.namelength" : 15,
            "key.nameoffset" : 45940,
            "key.offset" : 45929,
            "key.parsed_declaration" : "public static let uncleanShutdown = HTTPClientError(code: .uncleanShutdown)",
            "key.parsed_scope.end" : 1020,
            "key.parsed_scope.start" : 1020,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV15uncleanShutdownACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let traceRequestWithBody: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 46058
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "A body was sent in a request with method TRACE.",
            "key.doc.declaration" : "public static let traceRequestWithBody: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1022\" column=\"23\"><Name>traceRequestWithBody<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV20traceRequestWithBodyACvpZ<\/USR><Declaration>public static let traceRequestWithBody: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>A body was sent in a request with method TRACE.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1022,
            "key.doc.name" : "traceRequestWithBody",
            "key.doc.type" : "Other",
            "key.doclength" : 52,
            "key.docoffset" : 46002,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>traceRequestWithBody<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 78,
            "key.name" : "traceRequestWithBody",
            "key.namelength" : 20,
            "key.nameoffset" : 46076,
            "key.offset" : 46065,
            "key.parsed_declaration" : "public static let traceRequestWithBody = HTTPClientError(code: .traceRequestWithBody)",
            "key.parsed_scope.end" : 1022,
            "key.parsed_scope.start" : 1022,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV20traceRequestWithBodyACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func invalidHeaderFieldNames(_ names: [<Type usr=\"s:SS\">String<\/Type>]) -&gt; <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 46203
              }
            ],
            "key.bodylength" : 63,
            "key.bodyoffset" : 46285,
            "key.doc.column" : 24,
            "key.doc.comment" : "Header field names contain invalid characters.",
            "key.doc.declaration" : "public static func invalidHeaderFieldNames(_ names: [String]) -> HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1024\" column=\"24\"><Name>invalidHeaderFieldNames(_:)<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV23invalidHeaderFieldNamesyACSaySSGFZ<\/USR><Declaration>public static func invalidHeaderFieldNames(_ names: [String]) -&gt; HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Header field names contain invalid characters.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 1024,
            "key.doc.name" : "invalidHeaderFieldNames(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 51,
            "key.docoffset" : 46148,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>invalidHeaderFieldNames<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>names<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 139,
            "key.name" : "invalidHeaderFieldNames(_:)",
            "key.namelength" : 42,
            "key.nameoffset" : 46222,
            "key.offset" : 46210,
            "key.parsed_declaration" : "public static func invalidHeaderFieldNames(_ names: [String]) -> HTTPClientError",
            "key.parsed_scope.end" : 1024,
            "key.parsed_scope.start" : 1024,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientError.Type) -> ([String]) -> HTTPClientError",
            "key.typeusr" : "$sy15AsyncHTTPClient0B5ErrorVSaySSGcD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV23invalidHeaderFieldNamesyACSaySSGFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let bodyLengthMismatch: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 46408
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Body length is not equal to `Content-Length`.",
            "key.doc.declaration" : "public static let bodyLengthMismatch: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1026\" column=\"23\"><Name>bodyLengthMismatch<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV18bodyLengthMismatchACvpZ<\/USR><Declaration>public static let bodyLengthMismatch: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Body length is not equal to <codeVoice>Content-Length<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1026,
            "key.doc.name" : "bodyLengthMismatch",
            "key.doc.type" : "Other",
            "key.doclength" : 50,
            "key.docoffset" : 46354,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>bodyLengthMismatch<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "bodyLengthMismatch",
            "key.namelength" : 18,
            "key.nameoffset" : 46426,
            "key.offset" : 46415,
            "key.parsed_declaration" : "public static let bodyLengthMismatch = HTTPClientError(code: .bodyLengthMismatch)",
            "key.parsed_scope.end" : 1026,
            "key.parsed_scope.start" : 1026,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV18bodyLengthMismatchACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let writeAfterRequestSent: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 46554
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Body part was written after request was fully sent.",
            "key.doc.declaration" : "public static let writeAfterRequestSent: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1028\" column=\"23\"><Name>writeAfterRequestSent<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV21writeAfterRequestSentACvpZ<\/USR><Declaration>public static let writeAfterRequestSent: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Body part was written after request was fully sent.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1028,
            "key.doc.name" : "writeAfterRequestSent",
            "key.doc.type" : "Other",
            "key.doclength" : 56,
            "key.docoffset" : 46494,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>writeAfterRequestSent<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 80,
            "key.name" : "writeAfterRequestSent",
            "key.namelength" : 21,
            "key.nameoffset" : 46572,
            "key.offset" : 46561,
            "key.parsed_declaration" : "public static let writeAfterRequestSent = HTTPClientError(code: .writeAfterRequestSent)",
            "key.parsed_scope.end" : 1028,
            "key.parsed_scope.start" : 1028,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV21writeAfterRequestSentACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let incompatibleHeaders: <Type usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 46740
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Incompatible headers specified, for example `Transfer-Encoding` and `Content-Length`.",
            "key.doc.declaration" : "public static let incompatibleHeaders: AsyncHTTPClient.HTTPClientError",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"1030\" column=\"23\"><Name>incompatibleHeaders<\/Name><USR>s:15AsyncHTTPClient0B5ErrorV19incompatibleHeadersACvpZ<\/USR><Declaration>public static let incompatibleHeaders: AsyncHTTPClient.HTTPClientError<\/Declaration><CommentParts><Abstract><Para>Incompatible headers specified, for example <codeVoice>Transfer-Encoding<\/codeVoice> and <codeVoice>Content-Length<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 1030,
            "key.doc.name" : "incompatibleHeaders",
            "key.doc.type" : "Other",
            "key.doclength" : 90,
            "key.docoffset" : 46646,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>incompatibleHeaders<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B5ErrorV\">HTTPClientError<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 76,
            "key.name" : "incompatibleHeaders",
            "key.namelength" : 19,
            "key.nameoffset" : 46758,
            "key.offset" : 46747,
            "key.parsed_declaration" : "public static let incompatibleHeaders = HTTPClientError(code: .incompatibleHeaders)",
            "key.parsed_scope.end" : 1030,
            "key.parsed_scope.start" : 1030,
            "key.typename" : "HTTPClientError",
            "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVD",
            "key.usr" : "s:15AsyncHTTPClient0B5ErrorV19incompatibleHeadersACvpZ"
          }
        ],
        "key.typename" : "HTTPClientError.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B5ErrorVmD",
        "key.usr" : "s:15AsyncHTTPClient0B5ErrorV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6579,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.Configuration<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 547
          }
        ],
        "key.bodylength" : 1492,
        "key.bodyoffset" : 590,
        "key.doc.column" : 19,
        "key.doc.declaration" : "public struct AsyncHTTPClient.HTTPClient.Configuration",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"628\" column=\"19\"><Name>Configuration<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV<\/USR><Declaration>public struct AsyncHTTPClient.HTTPClient.Configuration<\/Declaration><CommentParts><Abstract><Para><codeVoice>HTTPClient<\/codeVoice> configuration.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 628,
        "key.doc.name" : "Configuration",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>Configuration<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1529,
        "key.name" : "HTTPClient.Configuration",
        "key.namelength" : 24,
        "key.nameoffset" : 564,
        "key.offset" : 554,
        "key.parsed_declaration" : "public extension HTTPClient.Configuration",
        "key.parsed_scope.end" : 56,
        "key.parsed_scope.start" : 18,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>struct Proxy<\/Declaration>",
            "key.bodylength" : 977,
            "key.bodyoffset" : 1103,
            "key.doc.column" : 12,
            "key.doc.comment" : "Proxy server configuration\nSpecifies the remote address of an HTTP proxy.\n\nAdding an `Proxy` to your client's `HTTPClient.Configuration`\nwill cause requests to be passed through the specified proxy using the\nHTTP `CONNECT` method.\n\nIf a `TLSConfiguration` is used in conjunction with `HTTPClient.Configuration.Proxy`,\nTLS will be established _after_ successful proxy, between your client\nand the destination server.",
            "key.doc.declaration" : "struct Proxy",
            "key.doc.discussion" : [
              {
                "Para" : "Adding an `Proxy` to your client’s `HTTPClient.Configuration` will cause requests to be passed through the specified proxy using the HTTP `CONNECT` method."
              },
              {
                "Para" : "If a `TLSConfiguration` is used in conjunction with `HTTPClient.Configuration.Proxy`, TLS will be established  successful proxy, between your client and the destination server."
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift\" line=\"29\" column=\"12\"><Name>Proxy<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV<\/USR><Declaration>struct Proxy<\/Declaration><CommentParts><Abstract><Para>Proxy server configuration Specifies the remote address of an HTTP proxy.<\/Para><\/Abstract><Discussion><Para>Adding an <codeVoice>Proxy<\/codeVoice> to your client’s <codeVoice>HTTPClient.Configuration<\/codeVoice> will cause requests to be passed through the specified proxy using the HTTP <codeVoice>CONNECT<\/codeVoice> method.<\/Para><Para>If a <codeVoice>TLSConfiguration<\/codeVoice> is used in conjunction with <codeVoice>HTTPClient.Configuration.Proxy<\/codeVoice>, TLS will be established <emphasis>after<\/emphasis> successful proxy, between your client and the destination server.<\/Para><\/Discussion><\/CommentParts><\/Class>",
            "key.doc.line" : 29,
            "key.doc.name" : "Proxy",
            "key.doc.type" : "Class",
            "key.doclength" : 490,
            "key.docoffset" : 595,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Proxy<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 992,
            "key.name" : "Proxy",
            "key.namelength" : 5,
            "key.nameoffset" : 1096,
            "key.offset" : 1089,
            "key.parsed_declaration" : "struct Proxy",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var host: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1153
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Specifies Proxy server host.",
                "key.doc.declaration" : "public var host: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift\" line=\"31\" column=\"20\"><Name>host<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV4hostSSvp<\/USR><Declaration>public var host: String<\/Declaration><CommentParts><Abstract><Para>Specifies Proxy server host.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 31,
                "key.doc.name" : "host",
                "key.doc.type" : "Other",
                "key.doclength" : 33,
                "key.docoffset" : 1112,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>host<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "host",
                "key.namelength" : 4,
                "key.nameoffset" : 1164,
                "key.offset" : 1160,
                "key.parsed_declaration" : "public var host: String",
                "key.parsed_scope.end" : 31,
                "key.parsed_scope.start" : 31,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV4hostSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var port: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1226
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Specifies Proxy server port.",
                "key.doc.declaration" : "public var port: Int",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift\" line=\"33\" column=\"20\"><Name>port<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV4portSivp<\/USR><Declaration>public var port: Int<\/Declaration><CommentParts><Abstract><Para>Specifies Proxy server port.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 33,
                "key.doc.name" : "port",
                "key.doc.type" : "Other",
                "key.doclength" : 33,
                "key.docoffset" : 1185,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>port<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 13,
                "key.name" : "port",
                "key.namelength" : 4,
                "key.nameoffset" : 1237,
                "key.offset" : 1233,
                "key.parsed_declaration" : "public var port: Int",
                "key.parsed_scope.end" : 33,
                "key.parsed_scope.start" : 33,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV4portSivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var authorization: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1305
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Specifies Proxy server authorization.",
                "key.doc.declaration" : "public var authorization: HTTPClient.Authorization?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift\" line=\"35\" column=\"20\"><Name>authorization<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV13authorizationAC13AuthorizationVSgvp<\/USR><Declaration>public var authorization: HTTPClient.Authorization?<\/Declaration><CommentParts><Abstract><Para>Specifies Proxy server authorization.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 35,
                "key.doc.name" : "authorization",
                "key.doc.type" : "Other",
                "key.doclength" : 42,
                "key.docoffset" : 1255,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>authorization<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 44,
                "key.name" : "authorization",
                "key.namelength" : 13,
                "key.nameoffset" : 1316,
                "key.offset" : 1312,
                "key.parsed_declaration" : "public var authorization: HTTPClient.Authorization?",
                "key.parsed_scope.end" : 35,
                "key.parsed_scope.start" : 35,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPClient.Authorization?",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13AuthorizationVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV13authorizationAC13AuthorizationVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func server(host: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1516
                  }
                ],
                "key.bodylength" : 78,
                "key.bodyoffset" : 1577,
                "key.doc.column" : 28,
                "key.doc.comment" : "Create proxy.\n\n- parameters:\n    - host: proxy server host.\n    - port: proxy server port.",
                "key.doc.declaration" : "public static func server(host: String, port: Int) -> Proxy",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift\" line=\"42\" column=\"28\"><Name>server(host:port:)<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV6server4host4portAGSS_SitFZ<\/USR><Declaration>public static func server(host: String, port: Int) -&gt; Proxy<\/Declaration><CommentParts><Abstract><Para>Create proxy.<\/Para><\/Abstract><Parameters><Parameter><Name>host<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>proxy server host.<\/Para><\/Discussion><\/Parameter><Parameter><Name>port<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>proxy server port.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 42,
                "key.doc.name" : "server(host:port:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "proxy server host."
                      }
                    ],
                    "name" : "host"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "proxy server port."
                      }
                    ],
                    "name" : "port"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 142,
                "key.docoffset" : 1366,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>server<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 133,
                "key.name" : "server(host:port:)",
                "key.namelength" : 31,
                "key.nameoffset" : 1535,
                "key.offset" : 1523,
                "key.parsed_declaration" : "public static func server(host: String, port: Int) -> Proxy",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 42,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV6server4host4port13authorizationAGSS_SiAC13AuthorizationVSgtFZ\">server(host:port:authorization:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Proxy.Type) -> (String, Int) -> HTTPClient.Configuration.Proxy",
                "key.typeusr" : "$s4host4port15AsyncHTTPClient0D0C13ConfigurationV5ProxyVSS_SitcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV6server4host4portAGSS_SitFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func server(host: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>, authorization: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type>? = nil) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1877
                  }
                ],
                "key.bodylength" : 88,
                "key.bodyoffset" : 1986,
                "key.doc.column" : 28,
                "key.doc.comment" : "Create proxy.\n\n- parameters:\n    - host: proxy server host.\n    - port: proxy server port.\n    - authorization: proxy server authorization.",
                "key.doc.declaration" : "public static func server(host: String, port: Int, authorization: HTTPClient.Authorization? = nil) -> Proxy",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift\" line=\"52\" column=\"28\"><Name>server(host:port:authorization:)<\/Name><USR>s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV6server4host4port13authorizationAGSS_SiAC13AuthorizationVSgtFZ<\/USR><Declaration>public static func server(host: String, port: Int, authorization: HTTPClient.Authorization? = nil) -&gt; Proxy<\/Declaration><CommentParts><Abstract><Para>Create proxy.<\/Para><\/Abstract><Parameters><Parameter><Name>host<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>proxy server host.<\/Para><\/Discussion><\/Parameter><Parameter><Name>port<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>proxy server port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>authorization<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>proxy server authorization.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 52,
                "key.doc.name" : "server(host:port:authorization:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "proxy server host."
                      }
                    ],
                    "name" : "host"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "proxy server port."
                      }
                    ],
                    "name" : "port"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "proxy server authorization."
                      }
                    ],
                    "name" : "authorization"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 203,
                "key.docoffset" : 1666,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>server<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>authorization<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV\">Proxy<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 191,
                "key.name" : "server(host:port:authorization:)",
                "key.namelength" : 79,
                "key.nameoffset" : 1896,
                "key.offset" : 1884,
                "key.parsed_declaration" : "public static func server(host: String, port: Int, authorization: HTTPClient.Authorization? = nil) -> Proxy",
                "key.parsed_scope.end" : 54,
                "key.parsed_scope.start" : 52,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV6server4host4portAGSS_SitFZ\">server(host:port:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Configuration.Proxy.Type) -> (String, Int, HTTPClient.Authorization?) -> HTTPClient.Configuration.Proxy",
                "key.typeusr" : "$s4host4port13authorization15AsyncHTTPClient0E0C13ConfigurationV5ProxyVSS_SiAF13AuthorizationVSgtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV6server4host4port13authorizationAGSS_SiAC13AuthorizationVSgtFZ"
              }
            ],
            "key.typename" : "HTTPClient.Configuration.Proxy.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationV5ProxyVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV5ProxyV"
          }
        ],
        "key.typename" : "HTTPClient.Configuration.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0C13ConfigurationVmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C13ConfigurationV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>internal final class HTTPClientProxyHandler : <Type usr=\"s:3NIO20ChannelDuplexHandlera\">ChannelDuplexHandler<\/Type>, <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 2094
          },
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 2085
          }
        ],
        "key.bodylength" : 4400,
        "key.bodyoffset" : 2177,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 20,
            "key.offset" : 2130
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 2152
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTPClientProxyHandler<\/decl.name> : <ref.typealias usr=\"s:3NIO20ChannelDuplexHandlera\">ChannelDuplexHandler<\/ref.typealias>, <ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ChannelDuplexHandler"
          },
          {
            "key.name" : "RemovableChannelHandler"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 4478,
        "key.name" : "HTTPClientProxyHandler",
        "key.namelength" : 22,
        "key.nameoffset" : 2106,
        "key.offset" : 2100,
        "key.parsed_declaration" : "internal final class HTTPClientProxyHandler: ChannelDuplexHandler, RemovableChannelHandler",
        "key.parsed_scope.end" : 180,
        "key.parsed_scope.start" : 58,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/Type>.InboundIn = <Type usr=\"s:8NIOHTTP122HTTPClientResponseParta\">HTTPClientResponsePart<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype InboundIn",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"40\" column=\"20\"><Name>InboundIn<\/Name><USR>s:3NIO21ChannelInboundHandlerP0C2InQa<\/USR><Declaration>associatedtype InboundIn<\/Declaration><CommentParts><Abstract><Para>The type of the inbound data which is wrapped in <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "InboundIn",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/ref.class>.<decl.name>InboundIn<\/decl.name> = <ref.typealias usr=\"s:8NIOHTTP122HTTPClientResponseParta\">HTTPClientResponsePart<\/ref.typealias><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 44,
            "key.name" : "InboundIn",
            "key.namelength" : 9,
            "key.nameoffset" : 2192,
            "key.offset" : 2182,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
              }
            ],
            "key.parsed_declaration" : "typealias InboundIn = HTTPClientResponsePart",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 59,
            "key.typename" : "HTTPPart<HTTPResponseHead, ByteBuffer>.Type",
            "key.typeusr" : "$s8NIOHTTP18HTTPPartOyAA16HTTPResponseHeadV3NIO10ByteBufferVGmD",
            "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/Type>.OutboundIn = <Type usr=\"s:8NIOHTTP121HTTPClientRequestParta\">HTTPClientRequestPart<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype OutboundIn",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"72\" column=\"20\"><Name>OutboundIn<\/Name><USR>s:3NIO22ChannelOutboundHandlerP0C2InQa<\/USR><Declaration>associatedtype OutboundIn<\/Declaration><CommentParts><Abstract><Para>The type of the outbound data which is wrapped in <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelOutboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 72,
            "key.doc.name" : "OutboundIn",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/ref.class>.<decl.name>OutboundIn<\/decl.name> = <ref.typealias usr=\"s:8NIOHTTP121HTTPClientRequestParta\">HTTPClientRequestPart<\/ref.typealias><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 44,
            "key.name" : "OutboundIn",
            "key.namelength" : 10,
            "key.nameoffset" : 2241,
            "key.offset" : 2231,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22ChannelOutboundHandlerP0C2InQa"
              }
            ],
            "key.parsed_declaration" : "typealias OutboundIn = HTTPClientRequestPart",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 60,
            "key.typename" : "HTTPPart<HTTPRequestHead, IOData>.Type",
            "key.typeusr" : "$s8NIOHTTP18HTTPPartOyAA15HTTPRequestHeadV3NIO6IODataOGmD",
            "key.usr" : "s:3NIO22ChannelOutboundHandlerP0C2InQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/Type>.OutboundOut = <Type usr=\"s:8NIOHTTP121HTTPClientRequestParta\">HTTPClientRequestPart<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype OutboundOut = Never",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"20\" column=\"20\"><Name>OutboundOut<\/Name><USR>s:3NIO23_EmittingChannelHandlerP11OutboundOutQa<\/USR><Declaration>associatedtype OutboundOut = Never<\/Declaration><CommentParts><Abstract><Para>The type of the outbound data which will be forwarded to the next <codeVoice>ChannelOutboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>_EmittingChannelHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "OutboundOut",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/ref.class>.<decl.name>OutboundOut<\/decl.name> = <ref.typealias usr=\"s:8NIOHTTP121HTTPClientRequestParta\">HTTPClientRequestPart<\/ref.typealias><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 45,
            "key.name" : "OutboundOut",
            "key.namelength" : 11,
            "key.nameoffset" : 2290,
            "key.offset" : 2280,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO23_EmittingChannelHandlerP11OutboundOutQa"
              }
            ],
            "key.parsed_declaration" : "typealias OutboundOut = HTTPClientRequestPart",
            "key.parsed_scope.end" : 61,
            "key.parsed_scope.start" : 61,
            "key.typename" : "HTTPPart<HTTPRequestHead, IOData>.Type",
            "key.typeusr" : "$s8NIOHTTP18HTTPPartOyAA15HTTPRequestHeadV3NIO6IODataOGmD",
            "key.usr" : "s:3NIO23_EmittingChannelHandlerP11OutboundOutQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/Type>.WriteItem<\/Declaration>",
            "key.bodylength" : 76,
            "key.bodyoffset" : 2347,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/ref.class>.<decl.name>WriteItem<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 93,
            "key.name" : "WriteItem",
            "key.namelength" : 9,
            "key.nameoffset" : 2336,
            "key.offset" : 2331,
            "key.parsed_declaration" : "enum WriteItem",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 63,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 43,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2356,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case write(<Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type>, <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;?)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 38,
                    "key.name" : "write(_:_:)",
                    "key.namelength" : 38,
                    "key.nameoffset" : 2361,
                    "key.offset" : 2361,
                    "key.parsed_declaration" : "case write(NIOAny, EventLoopPromise<Void>?)",
                    "key.parsed_scope.end" : 64,
                    "key.parsed_scope.start" : 64,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClientProxyHandler.WriteItem.Type) -> (NIOAny, EventLoopPromise<()>?) -> HTTPClientProxyHandler.WriteItem",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B12ProxyHandlerC9WriteItemO3NIO6NIOAnyV_AF16EventLoopPromiseVyytGSgtcAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9WriteItemO5writeyAE3NIO6NIOAnyV_AG16EventLoopPromiseVyytGSgtcAEmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 10,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2408,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case flush<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>flush<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 5,
                    "key.name" : "flush",
                    "key.namelength" : 5,
                    "key.nameoffset" : 2413,
                    "key.offset" : 2413,
                    "key.parsed_declaration" : "case flush",
                    "key.parsed_scope.end" : 65,
                    "key.parsed_scope.start" : 65,
                    "key.typename" : "(HTTPClientProxyHandler.WriteItem.Type) -> HTTPClientProxyHandler.WriteItem",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B12ProxyHandlerC9WriteItemOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9WriteItemO5flushyA2EmF"
                  }
                ]
              }
            ],
            "key.typename" : "HTTPClientProxyHandler.WriteItem.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B12ProxyHandlerC9WriteItemOmD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9WriteItemO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/Type>.ReadState<\/Declaration>",
            "key.bodylength" : 102,
            "key.bodyoffset" : 2446,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC\">HTTPClientProxyHandler<\/ref.class>.<decl.name>ReadState<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 119,
            "key.name" : "ReadState",
            "key.namelength" : 9,
            "key.nameoffset" : 2435,
            "key.offset" : 2430,
            "key.parsed_declaration" : "enum ReadState",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 68,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 21,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2455,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case awaitingResponse<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>awaitingResponse<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 16,
                    "key.name" : "awaitingResponse",
                    "key.namelength" : 16,
                    "key.nameoffset" : 2460,
                    "key.offset" : 2460,
                    "key.parsed_declaration" : "case awaitingResponse",
                    "key.parsed_scope.end" : 69,
                    "key.parsed_scope.start" : 69,
                    "key.typename" : "(HTTPClientProxyHandler.ReadState.Type) -> HTTPClientProxyHandler.ReadState",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B12ProxyHandlerC9ReadStateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9ReadStateO16awaitingResponseyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 15,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2485,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case connecting<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>connecting<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 10,
                    "key.name" : "connecting",
                    "key.namelength" : 10,
                    "key.nameoffset" : 2490,
                    "key.offset" : 2490,
                    "key.parsed_declaration" : "case connecting",
                    "key.parsed_scope.end" : 70,
                    "key.parsed_scope.start" : 70,
                    "key.typename" : "(HTTPClientProxyHandler.ReadState.Type) -> HTTPClientProxyHandler.ReadState",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B12ProxyHandlerC9ReadStateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9ReadStateO10connectingyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 14,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2509,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case connected<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>connected<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 9,
                    "key.name" : "connected",
                    "key.namelength" : 9,
                    "key.nameoffset" : 2514,
                    "key.offset" : 2514,
                    "key.parsed_declaration" : "case connected",
                    "key.parsed_scope.end" : 71,
                    "key.parsed_scope.start" : 71,
                    "key.typename" : "(HTTPClientProxyHandler.ReadState.Type) -> HTTPClientProxyHandler.ReadState",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B12ProxyHandlerC9ReadStateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9ReadStateO9connectedyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 11,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2532,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case failed<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>failed<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 6,
                    "key.name" : "failed",
                    "key.namelength" : 6,
                    "key.nameoffset" : 2537,
                    "key.offset" : 2537,
                    "key.parsed_declaration" : "case failed",
                    "key.parsed_scope.end" : 72,
                    "key.parsed_scope.start" : 72,
                    "key.typename" : "(HTTPClientProxyHandler.ReadState.Type) -> HTTPClientProxyHandler.ReadState",
                    "key.typeusr" : "$sy15AsyncHTTPClient0B12ProxyHandlerC9ReadStateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9ReadStateO6failedyA2EmF"
                  }
                ]
              }
            ],
            "key.typename" : "HTTPClientProxyHandler.ReadState.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B12ProxyHandlerC9ReadStateOmD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9ReadStateO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let host: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2555
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>host<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "host",
            "key.namelength" : 4,
            "key.nameoffset" : 2567,
            "key.offset" : 2563,
            "key.parsed_declaration" : "private let host: String",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 75,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC4host33_26C711996E65C5E8AB367E4C923830D4LLSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let port: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2584
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>port<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 13,
            "key.name" : "port",
            "key.namelength" : 4,
            "key.nameoffset" : 2596,
            "key.offset" : 2592,
            "key.parsed_declaration" : "private let port: Int",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 76,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC4port33_26C711996E65C5E8AB367E4C923830D4LLSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let authorization: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2610
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>authorization<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "authorization",
            "key.namelength" : 13,
            "key.nameoffset" : 2622,
            "key.offset" : 2618,
            "key.parsed_declaration" : "private let authorization: HTTPClient.Authorization?",
            "key.parsed_scope.end" : 77,
            "key.parsed_scope.start" : 77,
            "key.typename" : "HTTPClient.Authorization?",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13AuthorizationVSgD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC13authorization33_26C711996E65C5E8AB367E4C923830D4LLAA0B0C13AuthorizationVSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var onConnect: (<Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2667
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onConnect<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 49,
            "key.name" : "onConnect",
            "key.namelength" : 9,
            "key.nameoffset" : 2679,
            "key.offset" : 2675,
            "key.parsed_declaration" : "private var onConnect: (Channel) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 78,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "(Channel) -> EventLoopFuture<()>",
            "key.typeusr" : "$sy3NIO15EventLoopFutureCyytGAA7Channel_pcD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9onConnect33_26C711996E65C5E8AB367E4C923830D4LLy3NIO15EventLoopFutureCyytGAF7Channel_pcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var writeBuffer: <Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC9WriteItemO\">WriteItem<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2729
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>writeBuffer<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.enum usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC9WriteItemO\">WriteItem<\/ref.enum>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 42,
            "key.name" : "writeBuffer",
            "key.namelength" : 11,
            "key.nameoffset" : 2741,
            "key.offset" : 2737,
            "key.parsed_declaration" : "private var writeBuffer: CircularBuffer<WriteItem>",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 79,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "CircularBuffer<HTTPClientProxyHandler.WriteItem>",
            "key.typeusr" : "$s3NIO14CircularBufferVy15AsyncHTTPClient0E12ProxyHandlerC9WriteItemOGD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC11writeBuffer33_26C711996E65C5E8AB367E4C923830D4LL3NIO08CircularF0VyAC9WriteItemOGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var readBuffer: <Type usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/Type>&lt;<Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2784
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>readBuffer<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO14CircularBufferV\">CircularBuffer<\/ref.struct>&lt;<ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.name" : "readBuffer",
            "key.namelength" : 10,
            "key.nameoffset" : 2796,
            "key.offset" : 2792,
            "key.parsed_declaration" : "private var readBuffer: CircularBuffer<NIOAny>",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 80,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "CircularBuffer<NIOAny>",
            "key.typeusr" : "$s3NIO14CircularBufferVyAA6NIOAnyVGD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC10readBuffer33_26C711996E65C5E8AB367E4C923830D4LL3NIO08CircularF0VyAF6NIOAnyVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var readState: <Type usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC9ReadStateO\">ReadState<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2835
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>readState<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B12ProxyHandlerC9ReadStateO\">ReadState<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "readState",
            "key.namelength" : 9,
            "key.nameoffset" : 2847,
            "key.offset" : 2843,
            "key.parsed_declaration" : "private var readState: ReadState",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 81,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "HTTPClientProxyHandler.ReadState",
            "key.typeusr" : "$s15AsyncHTTPClient0B12ProxyHandlerC9ReadStateOD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC9readState33_26C711996E65C5E8AB367E4C923830D4LLAC04ReadF0Ovp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(host: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>, authorization: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type>?, onConnect: @escaping (<Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 245,
            "key.bodyoffset" : 3003,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>authorization<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>onConnect<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 376,
            "key.name" : "init(host:port:authorization:onConnect:)",
            "key.namelength" : 128,
            "key.nameoffset" : 2873,
            "key.offset" : 2873,
            "key.parsed_declaration" : "init(host: String, port: Int, authorization: HTTPClient.Authorization?, onConnect: @escaping (Channel) -> EventLoopFuture<Void>)",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 83,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientProxyHandler.Type) -> (String, Int, HTTPClient.Authorization?, @escaping (Channel) -> EventLoopFuture<()>) -> HTTPClientProxyHandler",
            "key.typeusr" : "$s4host4port13authorization9onConnect15AsyncHTTPClient0G12ProxyHandlerCSS_SiAE0G0C13AuthorizationVSg3NIO15EventLoopFutureCyytGAM7Channel_pctcD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC4host4port13authorization9onConnectACSS_SiAA0B0C13AuthorizationVSg3NIO15EventLoopFutureCyytGAM7Channel_pctcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func channelRead(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, data: <Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type>)<\/Declaration>",
            "key.bodylength" : 1413,
            "key.bodyoffset" : 3319,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func channelRead(context: NIO.ChannelHandlerContext, data: NIO.NIOAny)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireChannelRead` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"179\" column=\"10\"><Name>channelRead(context:data:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP11channelRead7context4datayAA0bD7ContextC_AA6NIOAnyVtF<\/USR><Declaration>func channelRead(context: NIO.ChannelHandlerContext, data: NIO.NIOAny)<\/Declaration><CommentParts><Abstract><Para>Called when some data has been read from the remote peer.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The data read from the remote peer, wrapped in a <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireChannelRead<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 179,
            "key.doc.name" : "channelRead(context:data:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The data read from the remote peer, wrapped in a `NIOAny`."
                  }
                ],
                "name" : "data"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>channelRead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1478,
            "key.name" : "channelRead(context:data:)",
            "key.namelength" : 57,
            "key.nameoffset" : 3260,
            "key.offset" : 3255,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP11channelRead7context4datayAA0bD7ContextC_AA6NIOAnyVtF"
              }
            ],
            "key.parsed_declaration" : "func channelRead(context: ChannelHandlerContext, data: NIOAny)",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 93,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientProxyHandler) -> (ChannelHandlerContext, NIOAny) -> ()",
            "key.typeusr" : "$s7context4datay3NIO21ChannelHandlerContextC_AC6NIOAnyVtcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP11channelRead7context4datayAA0bD7ContextC_AA6NIOAnyVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func write(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, data: <Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type>, promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;?)<\/Declaration>",
            "key.bodylength" : 60,
            "key.bodyoffset" : 4831,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func write(context: NIO.ChannelHandlerContext, data: NIO.NIOAny, promise: NIO.EventLoopPromise<Void>?)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.write` to forward the operation to the next `_ChannelOutboundHandler` in the `ChannelPipeline` or complete the `EventLoopPromise` to let the caller know that the operation completed."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"86\" column=\"10\"><Name>write(context:data:promise:)<\/Name><USR>s:3NIO23_ChannelOutboundHandlerP5write7context4data7promiseyAA0bD7ContextC_AA6NIOAnyVAA16EventLoopPromiseVyytGSgtF<\/USR><Declaration>func write(context: NIO.ChannelHandlerContext, data: NIO.NIOAny, promise: NIO.EventLoopPromise&lt;Void&gt;?)<\/Declaration><CommentParts><Abstract><Para>Called to request a write operation. The write operation will write the messages through the <codeVoice>ChannelPipeline<\/codeVoice>. Those are then ready to be flushed to the actual <codeVoice>Channel<\/codeVoice> when <codeVoice>Channel.flush<\/codeVoice> or <codeVoice>ChannelHandlerContext.flush<\/codeVoice> is called.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The data to write through the <codeVoice>Channel<\/codeVoice>, wrapped in a <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>promise<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>EventLoopPromise<\/codeVoice> which should be notified once the operation completes, or nil if no notification should take place.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.write<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelOutboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> or complete the <codeVoice>EventLoopPromise<\/codeVoice> to let the caller know that the operation completed.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelOutboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 86,
            "key.doc.name" : "write(context:data:promise:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The data to write through the `Channel`, wrapped in a `NIOAny`."
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `EventLoopPromise` which should be notified once the operation completes, or nil if no notification should take place."
                  }
                ],
                "name" : "promise"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>promise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 153,
            "key.name" : "write(context:data:promise:)",
            "key.namelength" : 85,
            "key.nameoffset" : 4744,
            "key.offset" : 4739,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO23_ChannelOutboundHandlerP5write7context4data7promiseyAA0bD7ContextC_AA6NIOAnyVAA16EventLoopPromiseVyytGSgtF"
              }
            ],
            "key.parsed_declaration" : "func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)",
            "key.parsed_scope.end" : 131,
            "key.parsed_scope.start" : 129,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientProxyHandler) -> (ChannelHandlerContext, NIOAny, EventLoopPromise<()>?) -> ()",
            "key.typeusr" : "$s7context4data7promisey3NIO21ChannelHandlerContextC_AD6NIOAnyVAD16EventLoopPromiseVyytGSgtcD",
            "key.usr" : "s:3NIO23_ChannelOutboundHandlerP5write7context4data7promiseyAA0bD7ContextC_AA6NIOAnyVAA16EventLoopPromiseVyytGSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func flush(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.bodylength" : 45,
            "key.bodyoffset" : 4942,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func flush(context: NIO.ChannelHandlerContext)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.flush` to forward the operation to the next `_ChannelOutboundHandler` in the `ChannelPipeline` or just discard it if the flush should be suppressed."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"96\" column=\"10\"><Name>flush(context:)<\/Name><USR>s:3NIO23_ChannelOutboundHandlerP5flush7contextyAA0bD7ContextC_tF<\/USR><Declaration>func flush(context: NIO.ChannelHandlerContext)<\/Declaration><CommentParts><Abstract><Para>Called to request that the <codeVoice>Channel<\/codeVoice> flush all pending writes. The flush operation will try to flush out all previous written messages that are pending.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.flush<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelOutboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> or just discard it if the flush should be suppressed.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelOutboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 96,
            "key.doc.name" : "flush(context:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>flush<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 90,
            "key.name" : "flush(context:)",
            "key.namelength" : 37,
            "key.nameoffset" : 4903,
            "key.offset" : 4898,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO23_ChannelOutboundHandlerP5flush7contextyAA0bD7ContextC_tF"
              }
            ],
            "key.parsed_declaration" : "func flush(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 135,
            "key.parsed_scope.start" : 133,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientProxyHandler) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:3NIO23_ChannelOutboundHandlerP5flush7contextyAA0bD7ContextC_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func channelActive(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.bodylength" : 84,
            "key.bodyoffset" : 5046,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func channelActive(context: NIO.ChannelHandlerContext)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireChannelActive` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"162\" column=\"10\"><Name>channelActive(context:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP13channelActive7contextyAA0bD7ContextC_tF<\/USR><Declaration>func channelActive(context: NIO.ChannelHandlerContext)<\/Declaration><CommentParts><Abstract><Para>Called when the <codeVoice>Channel<\/codeVoice> has become active, and is able to send and receive data.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireChannelActive<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 162,
            "key.doc.name" : "channelActive(context:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>channelActive<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 137,
            "key.name" : "channelActive(context:)",
            "key.namelength" : 45,
            "key.nameoffset" : 4999,
            "key.offset" : 4994,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP13channelActive7contextyAA0bD7ContextC_tF"
              }
            ],
            "key.parsed_declaration" : "func channelActive(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 137,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientProxyHandler) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP13channelActive7contextyAA0bD7ContextC_tF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Private",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 5140
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func handleConnect(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 5159
              }
            ],
            "key.bodylength" : 707,
            "key.bodyoffset" : 5244,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>handleConnect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 785,
            "key.name" : "handleConnect(context:)",
            "key.namelength" : 45,
            "key.nameoffset" : 5172,
            "key.offset" : 5167,
            "key.parsed_declaration" : "private func handleConnect(context: ChannelHandlerContext) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 164,
            "key.parsed_scope.start" : 144,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientProxyHandler) -> (ChannelHandlerContext) -> EventLoopFuture<()>",
            "key.typeusr" : "$s7context3NIO15EventLoopFutureCyytGAB21ChannelHandlerContextC_tcD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC13handleConnect33_26C711996E65C5E8AB367E4C923830D4LL7context3NIO15EventLoopFutureCyytGAG07ChannelD7ContextC_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func sendConnect(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 5958
              }
            ],
            "key.bodylength" : 559,
            "key.bodyoffset" : 6016,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sendConnect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 610,
            "key.name" : "sendConnect(context:)",
            "key.namelength" : 43,
            "key.nameoffset" : 5971,
            "key.offset" : 5966,
            "key.parsed_declaration" : "private func sendConnect(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 179,
            "key.parsed_scope.start" : 166,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var head: <Type usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClientProxyHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>head<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 160,
                "key.name" : "head",
                "key.namelength" : 4,
                "key.nameoffset" : 6029,
                "key.offset" : 6025,
                "key.parsed_declaration" : "var head = HTTPRequestHead(\n    version: .init(major: 1, minor: 1),\n    method: .CONNECT,\n    uri: \"\\(self.host):\\(self.port)\"\n)",
                "key.parsed_scope.end" : 167,
                "key.parsed_scope.start" : 167,
                "key.typename" : "HTTPRequestHead",
                "key.typeusr" : "$s8NIOHTTP115HTTPRequestHeadVD",
                "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC11sendConnect33_26C711996E65C5E8AB367E4C923830D4LL7contexty3NIO07ChannelD7ContextC_tF4headL_8NIOHTTP115HTTPRequestHeadVvp"
              }
            ],
            "key.typename" : "(HTTPClientProxyHandler) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC11sendConnect33_26C711996E65C5E8AB367E4C923830D4LL7contexty3NIO07ChannelD7ContextC_tF"
          }
        ],
        "key.typename" : "HTTPClientProxyHandler.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B12ProxyHandlerCmD",
        "key.usr" : "s:15AsyncHTTPClient0B12ProxyHandlerC"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 44017,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public class HTTPClient<\/Declaration>",
        "key.bodylength" : 11478,
        "key.bodyoffset" : 698,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class HTTPClient",
        "key.doc.discussion" : [
          {
            "Para" : "Example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO `EventLoopGroup`:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"65\" column=\"14\"><Name>HTTPClient<\/Name><USR>s:15AsyncHTTPClient0B0C<\/USR><Declaration>public class HTTPClient<\/Declaration><CommentParts><Abstract><Para>HTTPClient class provides API for request execution.<\/Para><\/Abstract><Discussion><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    let client = HTTPClient(eventLoopGroupProvider: .createNew)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    client.get(url: \"https:\/\/swift.org\", deadline: .now() + .seconds(1)).whenComplete { result in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        switch result {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .failure(let error):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ process error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .success(let response):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            if let response.status == .ok {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle response]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle remote error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO <codeVoice>EventLoopGroup<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    try client.syncShutdown()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 65,
        "key.doc.name" : "HTTPClient",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTPClient<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 11501,
        "key.name" : "HTTPClient",
        "key.namelength" : 10,
        "key.nameoffset" : 686,
        "key.offset" : 676,
        "key.parsed_declaration" : "extension HTTPClient",
        "key.parsed_scope.end" : 340,
        "key.parsed_scope.start" : 24,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Body<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 735
              }
            ],
            "key.bodylength" : 2630,
            "key.bodyoffset" : 755,
            "key.doc.column" : 19,
            "key.doc.comment" : "Represent request body.",
            "key.doc.declaration" : "public struct Body",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"26\" column=\"19\"><Name>Body<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV<\/USR><Declaration>public struct Body<\/Declaration><CommentParts><Abstract><Para>Represent request body.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 26,
            "key.doc.name" : "Body",
            "key.doc.type" : "Class",
            "key.doclength" : 28,
            "key.docoffset" : 703,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Body<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 2644,
            "key.name" : "Body",
            "key.namelength" : 4,
            "key.nameoffset" : 749,
            "key.offset" : 742,
            "key.parsed_declaration" : "public struct Body",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>.StreamWriter<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 792
                  }
                ],
                "key.bodylength" : 647,
                "key.bodyoffset" : 820,
                "key.doc.column" : 23,
                "key.doc.comment" : "Chunk provider.",
                "key.doc.declaration" : "public struct AsyncHTTPClient.HTTPClient.Body.StreamWriter",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"28\" column=\"23\"><Name>StreamWriter<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV<\/USR><Declaration>public struct AsyncHTTPClient.HTTPClient.Body.StreamWriter<\/Declaration><CommentParts><Abstract><Para>Chunk provider.<\/Para><\/Abstract><\/CommentParts><\/Class>",
                "key.doc.line" : 28,
                "key.doc.name" : "StreamWriter",
                "key.doc.type" : "Class",
                "key.doclength" : 20,
                "key.docoffset" : 764,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>.<decl.name>StreamWriter<\/decl.name><\/decl.struct>",
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 669,
                "key.name" : "StreamWriter",
                "key.namelength" : 12,
                "key.nameoffset" : 806,
                "key.offset" : 799,
                "key.parsed_declaration" : "public struct StreamWriter",
                "key.parsed_scope.end" : 46,
                "key.parsed_scope.start" : 28,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>let closure: (<Type usr=\"s:3NIO6IODataO\">IOData<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>closure<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:3NIO6IODataO\">IOData<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 46,
                    "key.name" : "closure",
                    "key.namelength" : 7,
                    "key.nameoffset" : 837,
                    "key.offset" : 833,
                    "key.parsed_declaration" : "let closure: (IOData) -> EventLoopFuture<Void>",
                    "key.parsed_scope.end" : 29,
                    "key.parsed_scope.start" : 29,
                    "key.typename" : "(IOData) -> EventLoopFuture<()>",
                    "key.typeusr" : "$sy3NIO15EventLoopFutureCyytGAA6IODataOcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV7closurey3NIO15EventLoopFutureCyytGAI6IODataOcvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public init(closure: @escaping (<Type usr=\"s:3NIO6IODataO\">IOData<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;)<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 1077
                      }
                    ],
                    "key.bodylength" : 52,
                    "key.bodyoffset" : 1144,
                    "key.doc.column" : 20,
                    "key.doc.comment" : "Create new StreamWriter\n\n- parameters:\n    - closure: function that will be called to write actual bytes to the channel.",
                    "key.doc.declaration" : "public init(closure: @escaping (IOData) -> EventLoopFuture<Void>)",
                    "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"35\" column=\"20\"><Name>init(closure:)<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV7closureAG3NIO15EventLoopFutureCyytGAI6IODataOc_tcfc<\/USR><Declaration>public init(closure: @escaping (IOData) -&gt; EventLoopFuture&lt;Void&gt;)<\/Declaration><CommentParts><Abstract><Para>Create new StreamWriter<\/Para><\/Abstract><Parameters><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>function that will be called to write actual bytes to the channel.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                    "key.doc.line" : 35,
                    "key.doc.name" : "init(closure:)",
                    "key.doc.parameters" : [
                      {
                        "discussion" : [
                          {
                            "Para" : "function that will be called to write actual bytes to the channel."
                          }
                        ],
                        "name" : "closure"
                      }
                    ],
                    "key.doc.type" : "Function",
                    "key.doclength" : 172,
                    "key.docoffset" : 893,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>closure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:3NIO6IODataO\">IOData<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 113,
                    "key.name" : "init(closure:)",
                    "key.namelength" : 58,
                    "key.nameoffset" : 1084,
                    "key.offset" : 1084,
                    "key.parsed_declaration" : "public init(closure: @escaping (IOData) -> EventLoopFuture<Void>)",
                    "key.parsed_scope.end" : 37,
                    "key.parsed_scope.start" : 35,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Body.StreamWriter.Type) -> (@escaping (IOData) -> EventLoopFuture<()>) -> HTTPClient.Body.StreamWriter",
                    "key.typeusr" : "$s7closure15AsyncHTTPClient0C0C4BodyV12StreamWriterV3NIO15EventLoopFutureCyytGAI6IODataOc_tcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV7closureAG3NIO15EventLoopFutureCyytGAI6IODataOc_tcfc"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public func write(_ data: <Type usr=\"s:3NIO6IODataO\">IOData<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 1342
                      }
                    ],
                    "key.bodylength" : 55,
                    "key.bodyoffset" : 1402,
                    "key.doc.column" : 25,
                    "key.doc.comment" : "Write data to server.\n\n- parameters:\n    - data: `IOData` to write.",
                    "key.doc.declaration" : "public func write(_ data: IOData) -> EventLoopFuture<Void>",
                    "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"43\" column=\"25\"><Name>write(_:)<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV5writey3NIO15EventLoopFutureCyytGAI6IODataOF<\/USR><Declaration>public func write(_ data: IOData) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Write data to server.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>IOData<\/codeVoice> to write.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                    "key.doc.line" : 43,
                    "key.doc.name" : "write(_:)",
                    "key.doc.parameters" : [
                      {
                        "discussion" : [
                          {
                            "Para" : "`IOData` to write."
                          }
                        ],
                        "name" : "data"
                      }
                    ],
                    "key.doc.type" : "Function",
                    "key.doclength" : 119,
                    "key.docoffset" : 1211,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:3NIO6IODataO\">IOData<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 109,
                    "key.name" : "write(_:)",
                    "key.namelength" : 21,
                    "key.nameoffset" : 1354,
                    "key.offset" : 1349,
                    "key.parsed_declaration" : "public func write(_ data: IOData) -> EventLoopFuture<Void>",
                    "key.parsed_scope.end" : 45,
                    "key.parsed_scope.start" : 43,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Body.StreamWriter) -> (IOData) -> EventLoopFuture<()>",
                    "key.typeusr" : "$sy3NIO15EventLoopFutureCyytGAA6IODataOcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV5writey3NIO15EventLoopFutureCyytGAI6IODataOF"
                  }
                ],
                "key.typename" : "HTTPClient.Body.StreamWriter.Type",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C4BodyV12StreamWriterVmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var length: <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1650
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Body size. Request validation will be failed with `HTTPClientErrors.contentLengthMissing` if nil,\nunless `Trasfer-Encoding: chunked` header is set.",
                "key.doc.declaration" : "public var length: Int?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"50\" column=\"20\"><Name>length<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV6lengthSiSgvp<\/USR><Declaration>public var length: Int?<\/Declaration><CommentParts><Abstract><Para>Body size. Request validation will be failed with <codeVoice>HTTPClientErrors.contentLengthMissing<\/codeVoice> if nil, unless <codeVoice>Trasfer-Encoding: chunked<\/codeVoice> header is set.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 50,
                "key.doc.name" : "length",
                "key.doc.type" : "Other",
                "key.doclength" : 164,
                "key.docoffset" : 1478,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>length<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "length",
                "key.namelength" : 6,
                "key.nameoffset" : 1661,
                "key.offset" : 1657,
                "key.parsed_declaration" : "public var length: Int?",
                "key.parsed_scope.end" : 50,
                "key.parsed_scope.start" : 50,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Int?",
                "key.typeusr" : "$sSiSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV6lengthSiSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var stream: (<Type usr=\"s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV\">StreamWriter<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1715
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Body chunk provider.",
                "key.doc.declaration" : "public var stream: (StreamWriter) -> EventLoopFuture<Void>",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"52\" column=\"20\"><Name>stream<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV6streamy3NIO15EventLoopFutureCyytGAE12StreamWriterVcvp<\/USR><Declaration>public var stream: (StreamWriter) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Body chunk provider.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 52,
                "key.doc.name" : "stream",
                "key.doc.type" : "Other",
                "key.doclength" : 25,
                "key.docoffset" : 1682,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stream<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV\">StreamWriter<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 51,
                "key.name" : "stream",
                "key.namelength" : 6,
                "key.nameoffset" : 1726,
                "key.offset" : 1722,
                "key.parsed_declaration" : "public var stream: (StreamWriter) -> EventLoopFuture<Void>",
                "key.parsed_scope.end" : 52,
                "key.parsed_scope.start" : 52,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C4BodyV6stream6length_AESiSg_3NIO15EventLoopFutureCyytGAE12StreamWriterVctFZ\">stream(length:_:)<\/RelatedName>"
                  }
                ],
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "(HTTPClient.Body.StreamWriter) -> EventLoopFuture<()>",
                "key.typeusr" : "$sy3NIO15EventLoopFutureCyytG15AsyncHTTPClient0F0C4BodyV12StreamWriterVcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV6streamy3NIO15EventLoopFutureCyytGAE12StreamWriterVcvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func byteBuffer(_ buffer: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1936
                  }
                ],
                "key.bodylength" : 139,
                "key.bodyoffset" : 1997,
                "key.doc.column" : 28,
                "key.doc.comment" : "Create and stream body using `ByteBuffer`.\n\n- parameters:\n    - buffer: Body `ByteBuffer` representation.",
                "key.doc.declaration" : "public static func byteBuffer(_ buffer: ByteBuffer) -> Body",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"58\" column=\"28\"><Name>byteBuffer(_:)<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV10byteBufferyAE3NIO04ByteE0VFZ<\/USR><Declaration>public static func byteBuffer(_ buffer: ByteBuffer) -&gt; Body<\/Declaration><CommentParts><Abstract><Para>Create and stream body using <codeVoice>ByteBuffer<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>buffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Body <codeVoice>ByteBuffer<\/codeVoice> representation.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 58,
                "key.doc.name" : "byteBuffer(_:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Body `ByteBuffer` representation."
                      }
                    ],
                    "name" : "buffer"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 145,
                "key.docoffset" : 1783,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>byteBuffer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>buffer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 194,
                "key.name" : "byteBuffer(_:)",
                "key.namelength" : 32,
                "key.nameoffset" : 1955,
                "key.offset" : 1943,
                "key.parsed_declaration" : "public static func byteBuffer(_ buffer: ByteBuffer) -> Body",
                "key.parsed_scope.end" : 62,
                "key.parsed_scope.start" : 58,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Body.Type) -> (ByteBuffer) -> HTTPClient.Body",
                "key.typeusr" : "$sy15AsyncHTTPClient0B0C4BodyV3NIO10ByteBufferVcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV10byteBufferyAE3NIO04ByteE0VFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func stream(length: <Type usr=\"s:Si\">Int<\/Type>? = nil, _ stream: @escaping (<Type usr=\"s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV\">StreamWriter<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2490
                  }
                ],
                "key.bodylength" : 65,
                "key.bodyoffset" : 2606,
                "key.doc.column" : 28,
                "key.doc.comment" : "Create and stream body using `StreamWriter`.\n\n- parameters:\n    - length: Body size. Request validation will be failed with `HTTPClientErrors.contentLengthMissing` if nil,\n              unless `Transfer-Encoding: chunked` header is set.\n    - stream: Body chunk provider.",
                "key.doc.declaration" : "public static func stream(length: Int? = nil, _ stream: @escaping (StreamWriter) -> EventLoopFuture<Void>) -> Body",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"70\" column=\"28\"><Name>stream(length:_:)<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV6stream6length_AESiSg_3NIO15EventLoopFutureCyytGAE12StreamWriterVctFZ<\/USR><Declaration>public static func stream(length: Int? = nil, _ stream: @escaping (StreamWriter) -&gt; EventLoopFuture&lt;Void&gt;) -&gt; Body<\/Declaration><CommentParts><Abstract><Para>Create and stream body using <codeVoice>StreamWriter<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>length<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Body size. Request validation will be failed with <codeVoice>HTTPClientErrors.contentLengthMissing<\/codeVoice> if nil, unless <codeVoice>Transfer-Encoding: chunked<\/codeVoice> header is set.<\/Para><\/Discussion><\/Parameter><Parameter><Name>stream<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Body chunk provider.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 70,
                "key.doc.name" : "stream(length:_:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Body size. Request validation will be failed with `HTTPClientErrors.contentLengthMissing` if nil, unless `Transfer-Encoding: chunked` header is set."
                      }
                    ],
                    "name" : "length"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Body chunk provider."
                      }
                    ],
                    "name" : "stream"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 335,
                "key.docoffset" : 2147,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>stream<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>length<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>stream<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV12StreamWriterV\">StreamWriter<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 175,
                "key.name" : "stream(length:_:)",
                "key.namelength" : 87,
                "key.nameoffset" : 2509,
                "key.offset" : 2497,
                "key.parsed_declaration" : "public static func stream(length: Int? = nil, _ stream: @escaping (StreamWriter) -> EventLoopFuture<Void>) -> Body",
                "key.parsed_scope.end" : 72,
                "key.parsed_scope.start" : 70,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C4BodyV6streamy3NIO15EventLoopFutureCyytGAE12StreamWriterVcvp\">stream<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Body.Type) -> (Int?, @escaping (HTTPClient.Body.StreamWriter) -> EventLoopFuture<()>) -> HTTPClient.Body",
                "key.typeusr" : "$s6length_15AsyncHTTPClient0C0C4BodyVSiSg_3NIO15EventLoopFutureCyytGAF12StreamWriterVctcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV6stream6length_AESiSg_3NIO15EventLoopFutureCyytGAE12StreamWriterVctFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func data(_ data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2821
                  }
                ],
                "key.bodylength" : 146,
                "key.bodyoffset" : 2868,
                "key.doc.column" : 28,
                "key.doc.comment" : "Create and stream body using `Data`.\n\n- parameters:\n    - data: Body `Data` representation.",
                "key.doc.declaration" : "public static func data(_ data: Data) -> Body",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"78\" column=\"28\"><Name>data(_:)<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV4datayAE10Foundation4DataVFZ<\/USR><Declaration>public static func data(_ data: Data) -&gt; Body<\/Declaration><CommentParts><Abstract><Para>Create and stream body using <codeVoice>Data<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Body <codeVoice>Data<\/codeVoice> representation.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 78,
                "key.doc.name" : "data(_:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Body `Data` representation."
                      }
                    ],
                    "name" : "data"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 131,
                "key.docoffset" : 2682,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>data<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 187,
                "key.name" : "data(_:)",
                "key.namelength" : 18,
                "key.nameoffset" : 2840,
                "key.offset" : 2828,
                "key.parsed_declaration" : "public static func data(_ data: Data) -> Body",
                "key.parsed_scope.end" : 82,
                "key.parsed_scope.start" : 78,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Body.Type) -> (Data) -> HTTPClient.Body",
                "key.typeusr" : "$sy15AsyncHTTPClient0B0C4BodyV10Foundation4DataVcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV4datayAE10Foundation4DataVFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func string(_ string: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3170
                  }
                ],
                "key.bodylength" : 156,
                "key.bodyoffset" : 3223,
                "key.doc.column" : 28,
                "key.doc.comment" : "Create and stream body using `String`.\n\n- parameters:\n    - string: Body `String` representation.",
                "key.doc.declaration" : "public static func string(_ string: String) -> Body",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"88\" column=\"28\"><Name>string(_:)<\/Name><USR>s:15AsyncHTTPClient0B0C4BodyV6stringyAESSFZ<\/USR><Declaration>public static func string(_ string: String) -&gt; Body<\/Declaration><CommentParts><Abstract><Para>Create and stream body using <codeVoice>String<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>string<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Body <codeVoice>String<\/codeVoice> representation.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 88,
                "key.doc.name" : "string(_:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Body `String` representation."
                      }
                    ],
                    "name" : "string"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 137,
                "key.docoffset" : 3025,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>string<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>string<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 203,
                "key.name" : "string(_:)",
                "key.namelength" : 24,
                "key.nameoffset" : 3189,
                "key.offset" : 3177,
                "key.parsed_declaration" : "public static func string(_ string: String) -> Body",
                "key.parsed_scope.end" : 92,
                "key.parsed_scope.start" : 88,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Body.Type) -> (String) -> HTTPClient.Body",
                "key.typeusr" : "$sy15AsyncHTTPClient0B0C4BodyVSScD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV6stringyAESSFZ"
              }
            ],
            "key.typename" : "HTTPClient.Body.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C4BodyVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C4BodyV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Request<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3424
              }
            ],
            "key.bodylength" : 5976,
            "key.bodyoffset" : 3447,
            "key.doc.column" : 19,
            "key.doc.comment" : "Represent HTTP request.",
            "key.doc.declaration" : "public struct Request",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"96\" column=\"19\"><Name>Request<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV<\/USR><Declaration>public struct Request<\/Declaration><CommentParts><Abstract><Para>Represent HTTP request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 96,
            "key.doc.name" : "Request",
            "key.doc.type" : "Class",
            "key.doclength" : 28,
            "key.docoffset" : 3392,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Request<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 5993,
            "key.name" : "Request",
            "key.namelength" : 7,
            "key.nameoffset" : 3438,
            "key.offset" : 3431,
            "key.parsed_declaration" : "public struct Request",
            "key.parsed_scope.end" : 258,
            "key.parsed_scope.start" : 96,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>.Kind : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
                "key.bodylength" : 2601,
                "key.bodyoffset" : 3516,
                "key.doc.column" : 14,
                "key.doc.comment" : "Represent kind of Request",
                "key.doc.declaration" : "enum AsyncHTTPClient.HTTPClient.Request.Kind : Equatable",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"98\" column=\"14\"><Name>Kind<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV4KindO<\/USR><Declaration>enum AsyncHTTPClient.HTTPClient.Request.Kind : Equatable<\/Declaration><CommentParts><Abstract><Para>Represent kind of Request<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 98,
                "key.doc.name" : "Kind",
                "key.doc.type" : "Other",
                "key.doclength" : 30,
                "key.docoffset" : 3456,
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 3505
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct>.<decl.name>Kind<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.enum>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Equatable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 2624,
                "key.name" : "Kind",
                "key.namelength" : 4,
                "key.nameoffset" : 3499,
                "key.offset" : 3494,
                "key.parsed_declaration" : "enum Kind: Equatable",
                "key.parsed_scope.end" : 171,
                "key.parsed_scope.start" : 98,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/Type>.UnixScheme : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
                    "key.bodylength" : 105,
                    "key.bodyoffset" : 3557,
                    "key.elements" : [
                      {
                        "key.kind" : "source.lang.swift.structure.elem.typeref",
                        "key.length" : 9,
                        "key.offset" : 3546
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct>.<ref.enum usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/ref.enum>.<decl.name>UnixScheme<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.enum>",
                    "key.inheritedtypes" : [
                      {
                        "key.name" : "Equatable"
                      }
                    ],
                    "key.kind" : "source.lang.swift.decl.enum",
                    "key.length" : 134,
                    "key.name" : "UnixScheme",
                    "key.namelength" : 10,
                    "key.nameoffset" : 3534,
                    "key.offset" : 3529,
                    "key.parsed_declaration" : "enum UnixScheme: Equatable",
                    "key.parsed_scope.end" : 103,
                    "key.parsed_scope.start" : 99,
                    "key.substructure" : [
                      {
                        "key.kind" : "source.lang.swift.decl.enumcase",
                        "key.length" : 12,
                        "key.namelength" : 0,
                        "key.nameoffset" : 0,
                        "key.offset" : 3574,
                        "key.substructure" : [
                          {
                            "key.accessibility" : "source.lang.swift.accessibility.internal",
                            "key.annotated_decl" : "<Declaration>case baseURL<\/Declaration>",
                            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                            "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>baseURL<\/decl.name><\/decl.enumelement>",
                            "key.kind" : "source.lang.swift.decl.enumelement",
                            "key.length" : 7,
                            "key.name" : "baseURL",
                            "key.namelength" : 7,
                            "key.nameoffset" : 3579,
                            "key.offset" : 3579,
                            "key.parsed_declaration" : "case baseURL",
                            "key.parsed_scope.end" : 100,
                            "key.parsed_scope.start" : 100,
                            "key.typename" : "(HTTPClient.Request.Kind.UnixScheme.Type) -> HTTPClient.Request.Kind.UnixScheme",
                            "key.typeusr" : "$sy15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeOAImcD",
                            "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeO7baseURLyA2ImF"
                          }
                        ]
                      },
                      {
                        "key.kind" : "source.lang.swift.decl.enumcase",
                        "key.length" : 14,
                        "key.namelength" : 0,
                        "key.nameoffset" : 0,
                        "key.offset" : 3603,
                        "key.substructure" : [
                          {
                            "key.accessibility" : "source.lang.swift.accessibility.internal",
                            "key.annotated_decl" : "<Declaration>case http_unix<\/Declaration>",
                            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                            "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>http_unix<\/decl.name><\/decl.enumelement>",
                            "key.kind" : "source.lang.swift.decl.enumelement",
                            "key.length" : 9,
                            "key.name" : "http_unix",
                            "key.namelength" : 9,
                            "key.nameoffset" : 3608,
                            "key.offset" : 3608,
                            "key.parsed_declaration" : "case http_unix",
                            "key.parsed_scope.end" : 101,
                            "key.parsed_scope.start" : 101,
                            "key.typename" : "(HTTPClient.Request.Kind.UnixScheme.Type) -> HTTPClient.Request.Kind.UnixScheme",
                            "key.typeusr" : "$sy15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeOAImcD",
                            "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeO9http_unixyA2ImF"
                          }
                        ]
                      },
                      {
                        "key.kind" : "source.lang.swift.decl.enumcase",
                        "key.length" : 15,
                        "key.namelength" : 0,
                        "key.nameoffset" : 0,
                        "key.offset" : 3634,
                        "key.substructure" : [
                          {
                            "key.accessibility" : "source.lang.swift.accessibility.internal",
                            "key.annotated_decl" : "<Declaration>case https_unix<\/Declaration>",
                            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                            "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>https_unix<\/decl.name><\/decl.enumelement>",
                            "key.kind" : "source.lang.swift.decl.enumelement",
                            "key.length" : 10,
                            "key.name" : "https_unix",
                            "key.namelength" : 10,
                            "key.nameoffset" : 3639,
                            "key.offset" : 3639,
                            "key.parsed_declaration" : "case https_unix",
                            "key.parsed_scope.end" : 102,
                            "key.parsed_scope.start" : 102,
                            "key.typename" : "(HTTPClient.Request.Kind.UnixScheme.Type) -> HTTPClient.Request.Kind.UnixScheme",
                            "key.typeusr" : "$sy15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeOAImcD",
                            "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeO10https_unixyA2ImF"
                          }
                        ]
                      }
                    ],
                    "key.typename" : "HTTPClient.Request.Kind.UnixScheme.Type",
                    "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeOmD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeO"
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 9,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 3714,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case host<\/Declaration>",
                        "key.doc.column" : 18,
                        "key.doc.comment" : "Remote host request.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"106\" column=\"18\"><Name>host<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV4KindO4hostyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Remote host request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 106,
                        "key.doc.name" : "host",
                        "key.doc.type" : "Other",
                        "key.doclength" : 25,
                        "key.docoffset" : 3677,
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>host<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 4,
                        "key.name" : "host",
                        "key.namelength" : 4,
                        "key.nameoffset" : 3719,
                        "key.offset" : 3719,
                        "key.parsed_declaration" : "case host",
                        "key.parsed_scope.end" : 106,
                        "key.parsed_scope.start" : 106,
                        "key.typename" : "(HTTPClient.Request.Kind.Type) -> HTTPClient.Request.Kind",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C7RequestV4KindOAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO4hostyA2GmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 37,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 3785,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case unixSocket(_: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeO\">UnixScheme<\/Type>)<\/Declaration>",
                        "key.doc.column" : 18,
                        "key.doc.comment" : "UNIX Domain Socket HTTP request.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"108\" column=\"18\"><Name>unixSocket(_:)<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV4KindO10unixSocketyA2G10UnixSchemeOcAGmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>UNIX Domain Socket HTTP request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 108,
                        "key.doc.name" : "unixSocket(_:)",
                        "key.doc.type" : "Other",
                        "key.doclength" : 37,
                        "key.docoffset" : 3736,
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>unixSocket<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO10UnixSchemeO\">UnixScheme<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 32,
                        "key.name" : "unixSocket(_:)",
                        "key.namelength" : 32,
                        "key.nameoffset" : 3790,
                        "key.offset" : 3790,
                        "key.parsed_declaration" : "case unixSocket(_ scheme: UnixScheme)",
                        "key.parsed_scope.end" : 108,
                        "key.parsed_scope.start" : 108,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(HTTPClient.Request.Kind.Type) -> (HTTPClient.Request.Kind.UnixScheme) -> HTTPClient.Request.Kind",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C7RequestV4KindOAG10UnixSchemeOcAGmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO10unixSocketyA2G10UnixSchemeOcAGmF"
                      }
                    ]
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.private",
                    "key.annotated_decl" : "<Declaration>private static var hostRestrictedSchemes: <Type usr=\"s:Sh\">Set<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.private",
                        "key.length" : 7,
                        "key.offset" : 3836
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hostRestrictedSchemes<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 57,
                    "key.name" : "hostRestrictedSchemes",
                    "key.namelength" : 21,
                    "key.nameoffset" : 3855,
                    "key.offset" : 3844,
                    "key.parsed_declaration" : "private static var hostRestrictedSchemes: Set = [\"http\", \"https\"]",
                    "key.parsed_scope.end" : 110,
                    "key.parsed_scope.start" : 110,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                    "key.typename" : "Set<String>",
                    "key.typeusr" : "$sShySSGD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO21hostRestrictedSchemes33_AE296A596A76009D398A2E5FEBCB0176LLShySSGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.private",
                    "key.annotated_decl" : "<Declaration>private static var allSupportedSchemes: <Type usr=\"s:Sh\">Set<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.private",
                        "key.length" : 7,
                        "key.offset" : 3914
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>allSupportedSchemes<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 90,
                    "key.name" : "allSupportedSchemes",
                    "key.namelength" : 19,
                    "key.nameoffset" : 3933,
                    "key.offset" : 3922,
                    "key.parsed_declaration" : "private static var allSupportedSchemes: Set = [\"http\", \"https\", \"unix\", \"http+unix\", \"https+unix\"]",
                    "key.parsed_scope.end" : 111,
                    "key.parsed_scope.start" : 111,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                    "key.typename" : "Set<String>",
                    "key.typeusr" : "$sShySSGD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO19allSupportedSchemes33_AE296A596A76009D398A2E5FEBCB0176LLShySSGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>init(forScheme scheme: <Type usr=\"s:SS\">String<\/Type>) throws<\/Declaration>",
                    "key.bodylength" : 397,
                    "key.bodyoffset" : 4065,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>forScheme<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scheme<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 437,
                    "key.name" : "init(forScheme:)",
                    "key.namelength" : 30,
                    "key.nameoffset" : 4026,
                    "key.offset" : 4026,
                    "key.parsed_declaration" : "init(forScheme scheme: String) throws",
                    "key.parsed_scope.end" : 122,
                    "key.parsed_scope.start" : 113,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Request.Kind.Type) -> (String) throws -> HTTPClient.Request.Kind",
                    "key.typeusr" : "$s9forScheme15AsyncHTTPClient0D0C7RequestV4KindOSS_tKcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO9forSchemeAGSS_tKcfc"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>func hostFromURL(_ url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>) throws -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                    "key.bodylength" : 316,
                    "key.bodyoffset" : 4524,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hostFromURL<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 364,
                    "key.name" : "hostFromURL(_:)",
                    "key.namelength" : 23,
                    "key.nameoffset" : 4482,
                    "key.offset" : 4477,
                    "key.parsed_declaration" : "func hostFromURL(_ url: URL) throws -> String",
                    "key.parsed_scope.end" : 134,
                    "key.parsed_scope.start" : 124,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Request.Kind) -> (URL) throws -> String",
                    "key.typeusr" : "$sySS10Foundation3URLVKcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO11hostFromURLySS10Foundation0G0VKF"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>func socketPathFromURL(_ url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>) throws -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                    "key.bodylength" : 437,
                    "key.bodyoffset" : 4908,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>socketPathFromURL<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 491,
                    "key.name" : "socketPathFromURL(_:)",
                    "key.namelength" : 29,
                    "key.nameoffset" : 4860,
                    "key.offset" : 4855,
                    "key.parsed_declaration" : "func socketPathFromURL(_ url: URL) throws -> String",
                    "key.parsed_scope.end" : 148,
                    "key.parsed_scope.start" : 136,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Request.Kind) -> (URL) throws -> String",
                    "key.typeusr" : "$sySS10Foundation3URLVKcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO17socketPathFromURLySS10Foundation0H0VKF"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>func uriFromURL(_ url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                    "key.bodylength" : 299,
                    "key.bodyoffset" : 5399,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>uriFromURL<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 339,
                    "key.name" : "uriFromURL(_:)",
                    "key.namelength" : 22,
                    "key.nameoffset" : 5365,
                    "key.offset" : 5360,
                    "key.parsed_declaration" : "func uriFromURL(_ url: URL) -> String",
                    "key.parsed_scope.end" : 159,
                    "key.parsed_scope.start" : 150,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Request.Kind) -> (URL) -> String",
                    "key.typeusr" : "$sySS10Foundation3URLVcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO10uriFromURLySS10Foundation0G0VF"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>func supportsRedirects(to scheme: <Type usr=\"s:SS\">String<\/Type>?) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                    "key.bodylength" : 342,
                    "key.bodyoffset" : 5765,
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>supportsRedirects<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scheme<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 395,
                    "key.name" : "supportsRedirects(to:)",
                    "key.namelength" : 37,
                    "key.nameoffset" : 5718,
                    "key.offset" : 5713,
                    "key.parsed_declaration" : "func supportsRedirects(to scheme: String?) -> Bool",
                    "key.parsed_scope.end" : 170,
                    "key.parsed_scope.start" : 161,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(HTTPClient.Request.Kind) -> (String?) -> Bool",
                    "key.typeusr" : "$s2toSbSSSg_tcD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO17supportsRedirects2toSbSSSg_tF"
                  }
                ],
                "key.typename" : "HTTPClient.Request.Kind.Type",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestV4KindOmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4KindO"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 6180
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Request HTTP method, defaults to `GET`.",
                "key.doc.declaration" : "public let method: HTTPMethod",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"174\" column=\"20\"><Name>method<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV6method8NIOHTTP110HTTPMethodOvp<\/USR><Declaration>public let method: HTTPMethod<\/Declaration><CommentParts><Abstract><Para>Request HTTP method, defaults to <codeVoice>GET<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 174,
                "key.doc.name" : "method",
                "key.doc.type" : "Other",
                "key.doclength" : 44,
                "key.docoffset" : 6128,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>method<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 22,
                "key.name" : "method",
                "key.namelength" : 6,
                "key.nameoffset" : 6191,
                "key.offset" : 6187,
                "key.parsed_declaration" : "public let method: HTTPMethod",
                "key.parsed_scope.end" : 174,
                "key.parsed_scope.start" : 174,
                "key.typename" : "HTTPMethod",
                "key.typeusr" : "$s8NIOHTTP110HTTPMethodOD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV6method8NIOHTTP110HTTPMethodOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 6242
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Remote URL.",
                "key.doc.declaration" : "public let url: URL",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"176\" column=\"20\"><Name>url<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV3url10Foundation3URLVvp<\/USR><Declaration>public let url: URL<\/Declaration><CommentParts><Abstract><Para>Remote URL.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 176,
                "key.doc.name" : "url",
                "key.doc.type" : "Other",
                "key.doclength" : 16,
                "key.docoffset" : 6218,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>url<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 12,
                "key.name" : "url",
                "key.namelength" : 3,
                "key.nameoffset" : 6253,
                "key.offset" : 6249,
                "key.parsed_declaration" : "public let url: URL",
                "key.parsed_scope.end" : 176,
                "key.parsed_scope.start" : 176,
                "key.typename" : "URL",
                "key.typeusr" : "$s10Foundation3URLVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV3url10Foundation3URLVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let scheme: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 6323
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Remote HTTP scheme, resolved from `URL`.",
                "key.doc.declaration" : "public let scheme: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"178\" column=\"20\"><Name>scheme<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV6schemeSSvp<\/USR><Declaration>public let scheme: String<\/Declaration><CommentParts><Abstract><Para>Remote HTTP scheme, resolved from <codeVoice>URL<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 178,
                "key.doc.name" : "scheme",
                "key.doc.type" : "Other",
                "key.doclength" : 45,
                "key.docoffset" : 6270,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>scheme<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "scheme",
                "key.namelength" : 6,
                "key.nameoffset" : 6334,
                "key.offset" : 6330,
                "key.parsed_declaration" : "public let scheme: String",
                "key.parsed_scope.end" : 178,
                "key.parsed_scope.start" : 178,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV6schemeSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let host: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 6403
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Remote host, resolved from `URL`.",
                "key.doc.declaration" : "public let host: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"180\" column=\"20\"><Name>host<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV4hostSSvp<\/USR><Declaration>public let host: String<\/Declaration><CommentParts><Abstract><Para>Remote host, resolved from <codeVoice>URL<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 180,
                "key.doc.name" : "host",
                "key.doc.type" : "Other",
                "key.doclength" : 38,
                "key.docoffset" : 6357,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>host<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "host",
                "key.namelength" : 4,
                "key.nameoffset" : 6414,
                "key.offset" : 6410,
                "key.parsed_declaration" : "public let host: String",
                "key.parsed_scope.end" : 180,
                "key.parsed_scope.start" : 180,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4hostSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let socketPath: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.doc.column" : 13,
                "key.doc.comment" : "Socket path, resolved from `URL`.",
                "key.doc.declaration" : "let socketPath: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"182\" column=\"13\"><Name>socketPath<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV10socketPathSSvp<\/USR><Declaration>let socketPath: String<\/Declaration><CommentParts><Abstract><Para>Socket path, resolved from <codeVoice>URL<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 182,
                "key.doc.name" : "socketPath",
                "key.doc.type" : "Other",
                "key.doclength" : 38,
                "key.docoffset" : 6435,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>socketPath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 22,
                "key.name" : "socketPath",
                "key.namelength" : 10,
                "key.nameoffset" : 6485,
                "key.offset" : 6481,
                "key.parsed_declaration" : "let socketPath: String",
                "key.parsed_scope.end" : 182,
                "key.parsed_scope.start" : 182,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV10socketPathSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let uri: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.doc.column" : 13,
                "key.doc.comment" : "URI composed of the path and query, resolved from `URL`.",
                "key.doc.declaration" : "let uri: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"184\" column=\"13\"><Name>uri<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV3uriSSvp<\/USR><Declaration>let uri: String<\/Declaration><CommentParts><Abstract><Para>URI composed of the path and query, resolved from <codeVoice>URL<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 184,
                "key.doc.name" : "uri",
                "key.doc.type" : "Other",
                "key.doclength" : 61,
                "key.docoffset" : 6512,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uri<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 15,
                "key.name" : "uri",
                "key.namelength" : 3,
                "key.nameoffset" : 6585,
                "key.offset" : 6581,
                "key.parsed_declaration" : "let uri: String",
                "key.parsed_scope.end" : 184,
                "key.parsed_scope.start" : 184,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV3uriSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 6670
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Request custom HTTP Headers, defaults to no headers.",
                "key.doc.declaration" : "public var headers: HTTPHeaders",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"186\" column=\"20\"><Name>headers<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV7headers8NIOHTTP111HTTPHeadersVvp<\/USR><Declaration>public var headers: HTTPHeaders<\/Declaration><CommentParts><Abstract><Para>Request custom HTTP Headers, defaults to no headers.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 186,
                "key.doc.name" : "headers",
                "key.doc.type" : "Other",
                "key.doclength" : 57,
                "key.docoffset" : 6605,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 24,
                "key.name" : "headers",
                "key.namelength" : 7,
                "key.nameoffset" : 6681,
                "key.offset" : 6677,
                "key.parsed_declaration" : "public var headers: HTTPHeaders",
                "key.parsed_scope.end" : 186,
                "key.parsed_scope.start" : 186,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPHeaders",
                "key.typeusr" : "$s8NIOHTTP111HTTPHeadersVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV7headers8NIOHTTP111HTTPHeadersVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 6757
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Request body, defaults to no body.",
                "key.doc.declaration" : "public var body: Body?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"188\" column=\"20\"><Name>body<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV4bodyAC4BodyVSgvp<\/USR><Declaration>public var body: Body?<\/Declaration><CommentParts><Abstract><Para>Request body, defaults to no body.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 188,
                "key.doc.name" : "body",
                "key.doc.type" : "Other",
                "key.doclength" : 39,
                "key.docoffset" : 6710,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>body<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 15,
                "key.name" : "body",
                "key.namelength" : 4,
                "key.nameoffset" : 6768,
                "key.offset" : 6764,
                "key.parsed_declaration" : "public var body: Body?",
                "key.parsed_scope.end" : 188,
                "key.parsed_scope.start" : 188,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPClient.Body?",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C4BodyVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4bodyAC4BodyVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>struct <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>.RedirectState<\/Declaration>",
                "key.bodylength" : 71,
                "key.bodyoffset" : 6811,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct>.<decl.name>RedirectState<\/decl.name><\/decl.struct>",
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 94,
                "key.name" : "RedirectState",
                "key.namelength" : 13,
                "key.nameoffset" : 6796,
                "key.offset" : 6789,
                "key.parsed_declaration" : "struct RedirectState",
                "key.parsed_scope.end" : 193,
                "key.parsed_scope.start" : 190,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var count: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 14,
                    "key.name" : "count",
                    "key.namelength" : 5,
                    "key.nameoffset" : 6828,
                    "key.offset" : 6824,
                    "key.parsed_declaration" : "var count: Int",
                    "key.parsed_scope.end" : 191,
                    "key.parsed_scope.start" : 191,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV13RedirectStateV5countSivp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var visited: <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:10Foundation3URLV\">URL<\/Type>&gt;?<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>visited<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>&gt;?<\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 22,
                    "key.name" : "visited",
                    "key.namelength" : 7,
                    "key.nameoffset" : 6855,
                    "key.offset" : 6851,
                    "key.parsed_declaration" : "var visited: Set<URL>?",
                    "key.parsed_scope.end" : 192,
                    "key.parsed_scope.start" : 192,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                    "key.typename" : "Set<URL>?",
                    "key.typeusr" : "$sShy10Foundation3URLVGSgD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV13RedirectStateV7visitedShy10Foundation3URLVGSgvp"
                  }
                ],
                "key.typename" : "HTTPClient.Request.RedirectState.Type",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestV13RedirectStateVmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV13RedirectStateV"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var redirectState: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV13RedirectStateV\">RedirectState<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>redirectState<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV13RedirectStateV\">RedirectState<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 33,
                "key.name" : "redirectState",
                "key.namelength" : 13,
                "key.nameoffset" : 6897,
                "key.offset" : 6893,
                "key.parsed_declaration" : "var redirectState: RedirectState?",
                "key.parsed_scope.end" : 195,
                "key.parsed_scope.start" : 195,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "HTTPClient.Request.RedirectState?",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestV13RedirectStateVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV13redirectStateAE08RedirectE0VSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let kind: <Type usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>kind<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 14,
                "key.name" : "kind",
                "key.namelength" : 4,
                "key.nameoffset" : 6939,
                "key.offset" : 6935,
                "key.parsed_declaration" : "let kind: Kind",
                "key.parsed_scope.end" : 196,
                "key.parsed_scope.start" : 196,
                "key.typename" : "HTTPClient.Request.Kind",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestV4KindOD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4kindAE4KindOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(url: <Type usr=\"s:SS\">String<\/Type>, method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type> = .GET, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = HTTPHeaders(), body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 7527
                  }
                ],
                "key.bodylength" : 207,
                "key.bodyoffset" : 7644,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create HTTP request.\n\n- parameters:\n    - url: Remote `URL`.\n    - version: HTTP version.\n    - method: HTTP method.\n    - headers: Custom HTTP headers.\n    - body: Request body.\n- throws:\n    - `invalidURL` if URL cannot be parsed.\n    - `emptyScheme` if URL does not contain HTTP scheme.\n    - `unsupportedScheme` if URL does contains unsupported HTTP scheme.\n    - `emptyHost` if URL does not contains a host.",
                "key.doc.declaration" : "public init(url: String, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"211\" column=\"16\"><Name>init(url:method:headers:body:)<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV3url6method7headers4bodyAESS_8NIOHTTP110HTTPMethodOAJ11HTTPHeadersVAC4BodyVSgtKcfc<\/USR><Declaration>public init(url: String, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Create HTTP request.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote <codeVoice>URL<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>version<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP version.<\/Para><\/Discussion><\/Parameter><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP method.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Custom HTTP headers.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><\/Para><List-Bullet><Item><Para><codeVoice>invalidURL<\/codeVoice> if URL cannot be parsed.<\/Para><\/Item><Item><Para><codeVoice>emptyScheme<\/codeVoice> if URL does not contain HTTP scheme.<\/Para><\/Item><Item><Para><codeVoice>unsupportedScheme<\/codeVoice> if URL does contains unsupported HTTP scheme.<\/Para><\/Item><Item><Para><codeVoice>emptyHost<\/codeVoice> if URL does not contains a host.<\/Para><\/Item><\/List-Bullet><\/ThrowsDiscussion><\/CommentParts><\/Function>",
                "key.doc.line" : 211,
                "key.doc.name" : "init(url:method:headers:body:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Remote `URL`."
                      }
                    ],
                    "name" : "url"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "HTTP version."
                      }
                    ],
                    "name" : "version"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "HTTP method."
                      }
                    ],
                    "name" : "method"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Custom HTTP headers."
                      }
                    ],
                    "name" : "headers"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Request body."
                      }
                    ],
                    "name" : "body"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 560,
                "key.docoffset" : 6959,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>method<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type> = .GET<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = HTTPHeaders()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 318,
                "key.name" : "init(url:method:headers:body:)",
                "key.namelength" : 101,
                "key.nameoffset" : 7534,
                "key.offset" : 7534,
                "key.parsed_declaration" : "public init(url: String, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws",
                "key.parsed_scope.end" : 217,
                "key.parsed_scope.start" : 211,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7RequestV3url6method7headers4bodyAE10Foundation3URLV_8NIOHTTP110HTTPMethodOAM11HTTPHeadersVAC4BodyVSgtKcfc\">init(url: URL, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Request.Type) -> (String, HTTPMethod, HTTPHeaders, HTTPClient.Body?) throws -> HTTPClient.Request",
                "key.typeusr" : "$s3url6method7headers4body15AsyncHTTPClient0F0C7RequestVSS_8NIOHTTP110HTTPMethodOAJ11HTTPHeadersVAG4BodyVSgtKcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV3url6method7headers4bodyAESS_8NIOHTTP110HTTPMethodOAJ11HTTPHeadersVAC4BodyVSgtKcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>, method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type> = .GET, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = HTTPHeaders(), body: <Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 8434
                  }
                ],
                "key.bodylength" : 555,
                "key.bodyoffset" : 8548,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create an HTTP `Request`.\n\n- parameters:\n    - url: Remote `URL`.\n    - method: HTTP method.\n    - headers: Custom HTTP headers.\n    - body: Request body.\n- throws:\n    - `emptyScheme` if URL does not contain HTTP scheme.\n    - `unsupportedScheme` if URL does contains unsupported HTTP scheme.\n    - `emptyHost` if URL does not contains a host.\n    - `missingSocketPath` if URL does not contains a socketPath as an encoded host.",
                "key.doc.declaration" : "public init(url: URL, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"231\" column=\"16\"><Name>init(url:method:headers:body:)<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV3url6method7headers4bodyAE10Foundation3URLV_8NIOHTTP110HTTPMethodOAM11HTTPHeadersVAC4BodyVSgtKcfc<\/USR><Declaration>public init(url: URL, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Create an HTTP <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote <codeVoice>URL<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP method.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Custom HTTP headers.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><\/Para><List-Bullet><Item><Para><codeVoice>emptyScheme<\/codeVoice> if URL does not contain HTTP scheme.<\/Para><\/Item><Item><Para><codeVoice>unsupportedScheme<\/codeVoice> if URL does contains unsupported HTTP scheme.<\/Para><\/Item><Item><Para><codeVoice>emptyHost<\/codeVoice> if URL does not contains a host.<\/Para><\/Item><Item><Para><codeVoice>missingSocketPath<\/codeVoice> if URL does not contains a socketPath as an encoded host.<\/Para><\/Item><\/List-Bullet><\/ThrowsDiscussion><\/CommentParts><\/Function>",
                "key.doc.line" : 231,
                "key.doc.name" : "init(url:method:headers:body:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Remote `URL`."
                      }
                    ],
                    "name" : "url"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "HTTP method."
                      }
                    ],
                    "name" : "method"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Custom HTTP headers."
                      }
                    ],
                    "name" : "headers"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Request body."
                      }
                    ],
                    "name" : "body"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 564,
                "key.docoffset" : 7862,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>method<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type> = .GET<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = HTTPHeaders()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 663,
                "key.name" : "init(url:method:headers:body:)",
                "key.namelength" : 98,
                "key.nameoffset" : 8441,
                "key.offset" : 8441,
                "key.parsed_declaration" : "public init(url: URL, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws",
                "key.parsed_scope.end" : 247,
                "key.parsed_scope.start" : 231,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C7RequestV3url6method7headers4bodyAESS_8NIOHTTP110HTTPMethodOAJ11HTTPHeadersVAC4BodyVSgtKcfc\">init(url: String, method: HTTPMethod = .GET, headers: HTTPHeaders = HTTPHeaders(), body: Body? = nil) throws<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Request.Type) -> (URL, HTTPMethod, HTTPHeaders, HTTPClient.Body?) throws -> HTTPClient.Request",
                "key.typeusr" : "$s3url6method7headers4body15AsyncHTTPClient0F0C7RequestV10Foundation3URLV_8NIOHTTP110HTTPMethodOAM11HTTPHeadersVAG4BodyVSgtKcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV3url6method7headers4bodyAE10Foundation3URLV_8NIOHTTP110HTTPMethodOAM11HTTPHeadersVAC4BodyVSgtKcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var useTLS: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9180
                  }
                ],
                "key.bodylength" : 82,
                "key.bodyoffset" : 9205,
                "key.doc.column" : 20,
                "key.doc.comment" : "Whether request will be executed using secure socket.",
                "key.doc.declaration" : "public var useTLS: Bool { get }",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"250\" column=\"20\"><Name>useTLS<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV6useTLSSbvp<\/USR><Declaration>public var useTLS: Bool { get }<\/Declaration><CommentParts><Abstract><Para>Whether request will be executed using secure socket.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 250,
                "key.doc.name" : "useTLS",
                "key.doc.type" : "Other",
                "key.doclength" : 58,
                "key.docoffset" : 9114,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>useTLS<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 101,
                "key.name" : "useTLS",
                "key.namelength" : 6,
                "key.nameoffset" : 9191,
                "key.offset" : 9187,
                "key.parsed_declaration" : "public var useTLS: Bool",
                "key.parsed_scope.end" : 252,
                "key.parsed_scope.start" : 250,
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV6useTLSSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var port: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9325
                  }
                ],
                "key.bodylength" : 70,
                "key.bodyoffset" : 9347,
                "key.doc.column" : 20,
                "key.doc.comment" : "Resolved port.",
                "key.doc.declaration" : "public var port: Int { get }",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"255\" column=\"20\"><Name>port<\/Name><USR>s:15AsyncHTTPClient0B0C7RequestV4portSivp<\/USR><Declaration>public var port: Int { get }<\/Declaration><CommentParts><Abstract><Para>Resolved port.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 255,
                "key.doc.name" : "port",
                "key.doc.type" : "Other",
                "key.doclength" : 19,
                "key.docoffset" : 9298,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>port<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 86,
                "key.name" : "port",
                "key.namelength" : 4,
                "key.nameoffset" : 9336,
                "key.offset" : 9332,
                "key.parsed_declaration" : "public var port: Int",
                "key.parsed_scope.end" : 257,
                "key.parsed_scope.start" : 255,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV4portSivp"
              }
            ],
            "key.typename" : "HTTPClient.Request.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C7RequestV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Response<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9463
              }
            ],
            "key.bodylength" : 1630,
            "key.bodyoffset" : 9487,
            "key.doc.column" : 19,
            "key.doc.comment" : "Represent HTTP response.",
            "key.doc.declaration" : "public struct Response",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"261\" column=\"19\"><Name>Response<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV<\/USR><Declaration>public struct Response<\/Declaration><CommentParts><Abstract><Para>Represent HTTP response.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 261,
            "key.doc.name" : "Response",
            "key.doc.type" : "Class",
            "key.doclength" : 29,
            "key.docoffset" : 9430,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Response<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 1648,
            "key.name" : "Response",
            "key.namelength" : 8,
            "key.nameoffset" : 9477,
            "key.offset" : 9470,
            "key.parsed_declaration" : "public struct Response",
            "key.parsed_scope.end" : 304,
            "key.parsed_scope.start" : 261,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var host: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9536
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Remote host of the request.",
                "key.doc.declaration" : "public var host: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"263\" column=\"20\"><Name>host<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV4hostSSvp<\/USR><Declaration>public var host: String<\/Declaration><CommentParts><Abstract><Para>Remote host of the request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 263,
                "key.doc.name" : "host",
                "key.doc.type" : "Other",
                "key.doclength" : 32,
                "key.docoffset" : 9496,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>host<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "host",
                "key.namelength" : 4,
                "key.nameoffset" : 9547,
                "key.offset" : 9543,
                "key.parsed_declaration" : "public var host: String",
                "key.parsed_scope.end" : 263,
                "key.parsed_scope.start" : 263,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV4hostSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9602
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Response HTTP status.",
                "key.doc.declaration" : "public var status: HTTPResponseStatus",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"265\" column=\"20\"><Name>status<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>public var status: HTTPResponseStatus<\/Declaration><CommentParts><Abstract><Para>Response HTTP status.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 265,
                "key.doc.name" : "status",
                "key.doc.type" : "Other",
                "key.doclength" : 26,
                "key.docoffset" : 9568,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 30,
                "key.name" : "status",
                "key.namelength" : 6,
                "key.nameoffset" : 9613,
                "key.offset" : 9609,
                "key.parsed_declaration" : "public var status: HTTPResponseStatus",
                "key.parsed_scope.end" : 265,
                "key.parsed_scope.start" : 265,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPResponseStatus",
                "key.typeusr" : "$s8NIOHTTP118HTTPResponseStatusOD",
                "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV6status8NIOHTTP118HTTPResponseStatusOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var version: <Type usr=\"s:8NIOHTTP111HTTPVersionV\">HTTPVersion<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9683
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Response HTTP version.",
                "key.doc.declaration" : "public var version: HTTPVersion",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"267\" column=\"20\"><Name>version<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV7version8NIOHTTP111HTTPVersionVvp<\/USR><Declaration>public var version: HTTPVersion<\/Declaration><CommentParts><Abstract><Para>Response HTTP version.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 267,
                "key.doc.name" : "version",
                "key.doc.type" : "Other",
                "key.doclength" : 27,
                "key.docoffset" : 9648,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>version<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPVersionV\">HTTPVersion<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 24,
                "key.name" : "version",
                "key.namelength" : 7,
                "key.nameoffset" : 9694,
                "key.offset" : 9690,
                "key.parsed_declaration" : "public var version: HTTPVersion",
                "key.parsed_scope.end" : 267,
                "key.parsed_scope.start" : 267,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPVersion",
                "key.typeusr" : "$s8NIOHTTP111HTTPVersionVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV7version8NIOHTTP111HTTPVersionVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9757
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Reponse HTTP headers.",
                "key.doc.declaration" : "public var headers: HTTPHeaders",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"269\" column=\"20\"><Name>headers<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV7headers8NIOHTTP111HTTPHeadersVvp<\/USR><Declaration>public var headers: HTTPHeaders<\/Declaration><CommentParts><Abstract><Para>Reponse HTTP headers.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 269,
                "key.doc.name" : "headers",
                "key.doc.type" : "Other",
                "key.doclength" : 26,
                "key.docoffset" : 9723,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 24,
                "key.name" : "headers",
                "key.namelength" : 7,
                "key.nameoffset" : 9768,
                "key.offset" : 9764,
                "key.parsed_declaration" : "public var headers: HTTPHeaders",
                "key.parsed_scope.end" : 269,
                "key.parsed_scope.start" : 269,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "HTTPHeaders",
                "key.typeusr" : "$s8NIOHTTP111HTTPHeadersVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV7headers8NIOHTTP111HTTPHeadersVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var body: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9824
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Response body.",
                "key.doc.declaration" : "public var body: ByteBuffer?",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"271\" column=\"20\"><Name>body<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV4body3NIO10ByteBufferVSgvp<\/USR><Declaration>public var body: ByteBuffer?<\/Declaration><CommentParts><Abstract><Para>Response body.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 271,
                "key.doc.name" : "body",
                "key.doc.type" : "Other",
                "key.doclength" : 19,
                "key.docoffset" : 9797,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>body<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 21,
                "key.name" : "body",
                "key.namelength" : 4,
                "key.nameoffset" : 9835,
                "key.offset" : 9831,
                "key.parsed_declaration" : "public var body: ByteBuffer?",
                "key.parsed_scope.end" : 271,
                "key.parsed_scope.start" : 271,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "ByteBuffer?",
                "key.typeusr" : "$s3NIO10ByteBufferVSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV4body3NIO10ByteBufferVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(host: <Type usr=\"s:SS\">String<\/Type>, status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type>, body: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>?)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 10210
                  },
                  {
                    "key.attribute" : "source.decl.attribute.available",
                    "key.length" : 77,
                    "key.offset" : 10124
                  }
                ],
                "key.bodylength" : 194,
                "key.bodyoffset" : 10306,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create HTTP `Response`.\n\n- parameters:\n    - host: Remote host of the request.\n    - status: Response HTTP status.\n    - headers: Reponse HTTP headers.\n    - body: Response body.",
                "key.doc.declaration" : "@available(*, deprecated, renamed: \"init(host:status:version:headers:body:)\")\npublic init(host: String, status: HTTPResponseStatus, headers: HTTPHeaders, body: ByteBuffer?)",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"281\" column=\"16\"><Name>init(host:status:headers:body:)<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV4host6status7headers4bodyAESS_8NIOHTTP118HTTPResponseStatusOAJ11HTTPHeadersV3NIO10ByteBufferVSgtcfc<\/USR><Declaration>@available(*, deprecated, renamed: &quot;init(host:status:version:headers:body:)&quot;)\npublic init(host: String, status: HTTPResponseStatus, headers: HTTPHeaders, body: ByteBuffer?)<\/Declaration><CommentParts><Abstract><Para>Create HTTP <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>host<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote host of the request.<\/Para><\/Discussion><\/Parameter><Parameter><Name>status<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Response HTTP status.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Reponse HTTP headers.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Response body.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 281,
                "key.doc.name" : "init(host:status:headers:body:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Remote host of the request."
                      }
                    ],
                    "name" : "host"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Response HTTP status."
                      }
                    ],
                    "name" : "status"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Reponse HTTP headers."
                      }
                    ],
                    "name" : "headers"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Response body."
                      }
                    ],
                    "name" : "body"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 254,
                "key.docoffset" : 9862,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>status<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 284,
                "key.name" : "init(host:status:headers:body:)",
                "key.namelength" : 87,
                "key.nameoffset" : 10217,
                "key.offset" : 10217,
                "key.parsed_declaration" : "public init(host: String, status: HTTPResponseStatus, headers: HTTPHeaders, body: ByteBuffer?)",
                "key.parsed_scope.end" : 287,
                "key.parsed_scope.start" : 281,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C8ResponseV4host6status7version7headers4bodyAESS_8NIOHTTP118HTTPResponseStatusOAK11HTTPVersionVAK11HTTPHeadersV3NIO10ByteBufferVSgtcfc\">init(host:status:version:headers:body:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Response.Type) -> (String, HTTPResponseStatus, HTTPHeaders, ByteBuffer?) -> HTTPClient.Response",
                "key.typeusr" : "$s4host6status7headers4body15AsyncHTTPClient0F0C8ResponseVSS_8NIOHTTP118HTTPResponseStatusOAJ11HTTPHeadersV3NIO10ByteBufferVSgtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV4host6status7headers4bodyAESS_8NIOHTTP118HTTPResponseStatusOAJ11HTTPHeadersV3NIO10ByteBufferVSgtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(host: <Type usr=\"s:SS\">String<\/Type>, status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type>, version: <Type usr=\"s:8NIOHTTP111HTTPVersionV\">HTTPVersion<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type>, body: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>?)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 10823
                  }
                ],
                "key.bodylength" : 170,
                "key.bodyoffset" : 10941,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create HTTP `Response`.\n\n- parameters:\n    - host: Remote host of the request.\n    - status: Response HTTP status.\n    - version: Response HTTP version.\n    - headers: Reponse HTTP headers.\n    - body: Response body.",
                "key.doc.declaration" : "public init(host: String, status: HTTPResponseStatus, version: HTTPVersion, headers: HTTPHeaders, body: ByteBuffer?)",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"297\" column=\"16\"><Name>init(host:status:version:headers:body:)<\/Name><USR>s:15AsyncHTTPClient0B0C8ResponseV4host6status7version7headers4bodyAESS_8NIOHTTP118HTTPResponseStatusOAK11HTTPVersionVAK11HTTPHeadersV3NIO10ByteBufferVSgtcfc<\/USR><Declaration>public init(host: String, status: HTTPResponseStatus, version: HTTPVersion, headers: HTTPHeaders, body: ByteBuffer?)<\/Declaration><CommentParts><Abstract><Para>Create HTTP <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>host<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Remote host of the request.<\/Para><\/Discussion><\/Parameter><Parameter><Name>status<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Response HTTP status.<\/Para><\/Discussion><\/Parameter><Parameter><Name>version<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Response HTTP version.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Reponse HTTP headers.<\/Para><\/Discussion><\/Parameter><Parameter><Name>body<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Response body.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 297,
                "key.doc.name" : "init(host:status:version:headers:body:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Remote host of the request."
                      }
                    ],
                    "name" : "host"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Response HTTP status."
                      }
                    ],
                    "name" : "status"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Response HTTP version."
                      }
                    ],
                    "name" : "version"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Reponse HTTP headers."
                      }
                    ],
                    "name" : "headers"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Response body."
                      }
                    ],
                    "name" : "body"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 304,
                "key.docoffset" : 10511,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>status<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPVersionV\">HTTPVersion<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 282,
                "key.name" : "init(host:status:version:headers:body:)",
                "key.namelength" : 109,
                "key.nameoffset" : 10830,
                "key.offset" : 10830,
                "key.parsed_declaration" : "public init(host: String, status: HTTPResponseStatus, version: HTTPVersion, headers: HTTPHeaders, body: ByteBuffer?)",
                "key.parsed_scope.end" : 303,
                "key.parsed_scope.start" : 297,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C8ResponseV4host6status7headers4bodyAESS_8NIOHTTP118HTTPResponseStatusOAJ11HTTPHeadersV3NIO10ByteBufferVSgtcfc\">init(host:status:headers:body:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Response.Type) -> (String, HTTPResponseStatus, HTTPVersion, HTTPHeaders, ByteBuffer?) -> HTTPClient.Response",
                "key.typeusr" : "$s4host6status7version7headers4body15AsyncHTTPClient0G0C8ResponseVSS_8NIOHTTP118HTTPResponseStatusOAK11HTTPVersionVAK11HTTPHeadersV3NIO10ByteBufferVSgtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV4host6status7version7headers4bodyAESS_8NIOHTTP118HTTPResponseStatusOAK11HTTPVersionVAK11HTTPHeadersV3NIO10ByteBufferVSgtcfc"
              }
            ],
            "key.typename" : "HTTPClient.Response.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C8ResponseVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C8ResponseV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Authorization<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11152
              }
            ],
            "key.bodylength" : 993,
            "key.bodyoffset" : 11181,
            "key.doc.column" : 19,
            "key.doc.comment" : "HTTP authentication",
            "key.doc.declaration" : "public struct Authorization",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"307\" column=\"19\"><Name>Authorization<\/Name><USR>s:15AsyncHTTPClient0B0C13AuthorizationV<\/USR><Declaration>public struct Authorization<\/Declaration><CommentParts><Abstract><Para>HTTP authentication<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 307,
            "key.doc.name" : "Authorization",
            "key.doc.type" : "Class",
            "key.doclength" : 24,
            "key.docoffset" : 11124,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Authorization<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 1016,
            "key.name" : "Authorization",
            "key.namelength" : 13,
            "key.nameoffset" : 11166,
            "key.offset" : 11159,
            "key.parsed_declaration" : "public struct Authorization",
            "key.parsed_scope.end" : 339,
            "key.parsed_scope.start" : 307,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private enum <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type>.Scheme<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 11190
                  }
                ],
                "key.bodylength" : 72,
                "key.bodyoffset" : 11211,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct>.<decl.name>Scheme<\/decl.name><\/decl.enum>",
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 86,
                "key.name" : "Scheme",
                "key.namelength" : 6,
                "key.nameoffset" : 11203,
                "key.offset" : 11198,
                "key.parsed_declaration" : "private enum Scheme",
                "key.parsed_scope.end" : 311,
                "key.parsed_scope.start" : 308,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 18,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 11224,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case Basic(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Basic<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 13,
                        "key.name" : "Basic(_:)",
                        "key.namelength" : 13,
                        "key.nameoffset" : 11229,
                        "key.offset" : 11229,
                        "key.parsed_declaration" : "case Basic(String)",
                        "key.parsed_scope.end" : 309,
                        "key.parsed_scope.start" : 309,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(HTTPClient.Authorization.Scheme.Type) -> (String) -> HTTPClient.Authorization.Scheme",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLOSScAHmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO5BasicyAHSScAHmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 19,
                    "key.namelength" : 0,
                    "key.nameoffset" : 0,
                    "key.offset" : 11255,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.internal",
                        "key.annotated_decl" : "<Declaration>case Bearer(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Bearer<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 14,
                        "key.name" : "Bearer(_:)",
                        "key.namelength" : 14,
                        "key.nameoffset" : 11260,
                        "key.offset" : 11260,
                        "key.parsed_declaration" : "case Bearer(String)",
                        "key.parsed_scope.end" : 310,
                        "key.parsed_scope.start" : 310,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(HTTPClient.Authorization.Scheme.Type) -> (String) -> HTTPClient.Authorization.Scheme",
                        "key.typeusr" : "$sy15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLOSScAHmcD",
                        "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO6BeareryAHSScAHmF"
                      }
                    ]
                  }
                ],
                "key.typename" : "HTTPClient.Authorization.Scheme.Type",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLOmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private let scheme: <Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO\">Scheme<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 11294
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>scheme<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO\">Scheme<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "scheme",
                "key.namelength" : 6,
                "key.nameoffset" : 11306,
                "key.offset" : 11302,
                "key.parsed_declaration" : "private let scheme: Scheme",
                "key.parsed_scope.end" : 313,
                "key.parsed_scope.start" : 313,
                "key.typename" : "HTTPClient.Authorization.Scheme",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLOD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV6scheme33_AE296A596A76009D398A2E5FEBCB0176LLAE6SchemeAGLLOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private init(scheme: <Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO\">Scheme<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 11330
                  }
                ],
                "key.bodylength" : 42,
                "key.bodyoffset" : 11360,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>scheme<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO\">Scheme<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 65,
                "key.name" : "init(scheme:)",
                "key.namelength" : 20,
                "key.nameoffset" : 11338,
                "key.offset" : 11338,
                "key.parsed_declaration" : "private init(scheme: Scheme)",
                "key.parsed_scope.end" : 317,
                "key.parsed_scope.start" : 315,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Authorization.Type) -> (HTTPClient.Authorization.Scheme) -> HTTPClient.Authorization",
                "key.typeusr" : "$s6scheme15AsyncHTTPClient0C0C13AuthorizationVAF6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO_tcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV6schemeA2E6Scheme33_AE296A596A76009D398A2E5FEBCB0176LLO_tcAHLlfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func basic(username: <Type usr=\"s:SS\">String<\/Type>, password: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 11413
                  }
                ],
                "key.bodylength" : 108,
                "key.bodyoffset" : 11503,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>basic<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>username<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>password<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 192,
                "key.name" : "basic(username:password:)",
                "key.namelength" : 41,
                "key.nameoffset" : 11432,
                "key.offset" : 11420,
                "key.parsed_declaration" : "public static func basic(username: String, password: String) -> HTTPClient.Authorization",
                "key.parsed_scope.end" : 321,
                "key.parsed_scope.start" : 319,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV5basic11credentialsAESS_tFZ\">basic(credentials:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Authorization.Type) -> (String, String) -> HTTPClient.Authorization",
                "key.typeusr" : "$s8username8password15AsyncHTTPClient0D0C13AuthorizationVSS_SStcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV5basic8username8passwordAESS_SStFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func basic(credentials: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 11622
                  }
                ],
                "key.bodylength" : 63,
                "key.bodyoffset" : 11697,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>basic<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>credentials<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 132,
                "key.name" : "basic(credentials:)",
                "key.namelength" : 26,
                "key.nameoffset" : 11641,
                "key.offset" : 11629,
                "key.parsed_declaration" : "public static func basic(credentials: String) -> HTTPClient.Authorization",
                "key.parsed_scope.end" : 325,
                "key.parsed_scope.start" : 323,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV5basic8username8passwordAESS_SStFZ\">basic(username:password:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Authorization.Type) -> (String) -> HTTPClient.Authorization",
                "key.typeusr" : "$s11credentials15AsyncHTTPClient0C0C13AuthorizationVSS_tcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV5basic11credentialsAESS_tFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func bearer(tokens: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 11771
                  }
                ],
                "key.bodylength" : 59,
                "key.bodyoffset" : 11842,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bearer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>tokens<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13AuthorizationV\">Authorization<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 124,
                "key.name" : "bearer(tokens:)",
                "key.namelength" : 22,
                "key.nameoffset" : 11790,
                "key.offset" : 11778,
                "key.parsed_declaration" : "public static func bearer(tokens: String) -> HTTPClient.Authorization",
                "key.parsed_scope.end" : 329,
                "key.parsed_scope.start" : 327,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.Authorization.Type) -> (String) -> HTTPClient.Authorization",
                "key.typeusr" : "$s6tokens15AsyncHTTPClient0C0C13AuthorizationVSS_tcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV6bearer6tokensAESS_tFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var headerValue: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 11912
                  }
                ],
                "key.bodylength" : 224,
                "key.bodyoffset" : 11944,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headerValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 250,
                "key.name" : "headerValue",
                "key.namelength" : 11,
                "key.nameoffset" : 11923,
                "key.offset" : 11919,
                "key.parsed_declaration" : "public var headerValue: String",
                "key.parsed_scope.end" : 338,
                "key.parsed_scope.start" : 331,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV11headerValueSSvp"
              }
            ],
            "key.typename" : "HTTPClient.Authorization.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C13AuthorizationVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C13AuthorizationV"
          }
        ],
        "key.typename" : "HTTPClient.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0CmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public class ResponseAccumulator : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 12179
          }
        ],
        "key.bodylength" : 2365,
        "key.bodyoffset" : 12241,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 26,
            "key.offset" : 12213
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ResponseAccumulator<\/decl.name> : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPClientResponseDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2421,
        "key.name" : "ResponseAccumulator",
        "key.namelength" : 19,
        "key.nameoffset" : 12192,
        "key.offset" : 12186,
        "key.parsed_declaration" : "public class ResponseAccumulator: HTTPClientResponseDelegate",
        "key.parsed_scope.end" : 412,
        "key.parsed_scope.start" : 342,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias <Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/Type>.Response = <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12246
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/ref.class>.<decl.name>Response<\/decl.name> = <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C8ResponseV\">Response<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 40,
            "key.name" : "Response",
            "key.namelength" : 8,
            "key.nameoffset" : 12263,
            "key.offset" : 12253,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa"
              }
            ],
            "key.parsed_declaration" : "public typealias Response = HTTPClient.Response",
            "key.parsed_scope.end" : 343,
            "key.parsed_scope.start" : 343,
            "key.typename" : "HTTPClient.Response.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C8ResponseVmD",
            "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC0C0a"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/Type>.State<\/Declaration>",
            "key.bodylength" : 150,
            "key.bodyoffset" : 12311,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/ref.class>.<decl.name>State<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 163,
            "key.name" : "State",
            "key.namelength" : 5,
            "key.nameoffset" : 12304,
            "key.offset" : 12299,
            "key.parsed_declaration" : "enum State",
            "key.parsed_scope.end" : 351,
            "key.parsed_scope.start" : 345,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 12320,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case idle<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>idle<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "idle",
                    "key.namelength" : 4,
                    "key.nameoffset" : 12325,
                    "key.offset" : 12325,
                    "key.parsed_declaration" : "case idle",
                    "key.parsed_scope.end" : 346,
                    "key.parsed_scope.start" : 346,
                    "key.typename" : "(ResponseAccumulator.State.Type) -> ResponseAccumulator.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient19ResponseAccumulatorC5StateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC5StateO4idleyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 27,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 12338,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case head(<Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>head<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 22,
                    "key.name" : "head(_:)",
                    "key.namelength" : 22,
                    "key.nameoffset" : 12343,
                    "key.offset" : 12343,
                    "key.parsed_declaration" : "case head(HTTPResponseHead)",
                    "key.parsed_scope.end" : 347,
                    "key.parsed_scope.start" : 347,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(ResponseAccumulator.State.Type) -> (HTTPResponseHead) -> ResponseAccumulator.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient19ResponseAccumulatorC5StateO8NIOHTTP116HTTPResponseHeadVcAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC5StateO4headyAE8NIOHTTP116HTTPResponseHeadVcAEmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 39,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 12374,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case body(<Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>, <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>body<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 34,
                    "key.name" : "body(_:_:)",
                    "key.namelength" : 34,
                    "key.nameoffset" : 12379,
                    "key.offset" : 12379,
                    "key.parsed_declaration" : "case body(HTTPResponseHead, ByteBuffer)",
                    "key.parsed_scope.end" : 348,
                    "key.parsed_scope.start" : 348,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(ResponseAccumulator.State.Type) -> (HTTPResponseHead, ByteBuffer) -> ResponseAccumulator.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient19ResponseAccumulatorC5StateO8NIOHTTP116HTTPResponseHeadV_3NIO10ByteBufferVtcAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC5StateO4bodyyAE8NIOHTTP116HTTPResponseHeadV_3NIO10ByteBufferVtcAEmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 8,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 12422,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case end<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>end<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 3,
                    "key.name" : "end",
                    "key.namelength" : 3,
                    "key.nameoffset" : 12427,
                    "key.offset" : 12427,
                    "key.parsed_declaration" : "case end",
                    "key.parsed_scope.end" : 349,
                    "key.parsed_scope.start" : 349,
                    "key.typename" : "(ResponseAccumulator.State.Type) -> ResponseAccumulator.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient19ResponseAccumulatorC5StateOAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC5StateO3endyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 17,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 12439,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case error(<Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>error<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 12,
                    "key.name" : "error(_:)",
                    "key.namelength" : 12,
                    "key.nameoffset" : 12444,
                    "key.offset" : 12444,
                    "key.parsed_declaration" : "case error(Error)",
                    "key.parsed_scope.end" : 350,
                    "key.parsed_scope.start" : 350,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(ResponseAccumulator.State.Type) -> (Error) -> ResponseAccumulator.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient19ResponseAccumulatorC5StateOs5Error_pcAEmcD",
                    "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC5StateO5erroryAEs5Error_pcAEmF"
                  }
                ]
              }
            ],
            "key.typename" : "ResponseAccumulator.State.Type",
            "key.typeusr" : "$s15AsyncHTTPClient19ResponseAccumulatorC5StateOmD",
            "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC5StateO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var state: <Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/Type>.<Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC5StateO\">State<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>state<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC\">ResponseAccumulator<\/ref.class>.<ref.enum usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC5StateO\">State<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "state",
            "key.namelength" : 5,
            "key.nameoffset" : 12472,
            "key.offset" : 12468,
            "key.parsed_declaration" : "var state = State.idle",
            "key.parsed_scope.end" : 353,
            "key.parsed_scope.start" : 353,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "ResponseAccumulator.State",
            "key.typeusr" : "$s15AsyncHTTPClient19ResponseAccumulatorC5StateOD",
            "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC5stateAC5StateOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>request<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.name" : "request",
            "key.namelength" : 7,
            "key.nameoffset" : 12499,
            "key.offset" : 12495,
            "key.parsed_declaration" : "let request: HTTPClient.Request",
            "key.parsed_scope.end" : 354,
            "key.parsed_scope.start" : 354,
            "key.typename" : "HTTPClient.Request",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestVD",
            "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC7requestAA0B0C7RequestVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12532
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 12574,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 72,
            "key.name" : "init(request:)",
            "key.namelength" : 33,
            "key.nameoffset" : 12539,
            "key.offset" : 12539,
            "key.parsed_declaration" : "public init(request: HTTPClient.Request)",
            "key.parsed_scope.end" : 358,
            "key.parsed_scope.start" : 356,
            "key.substructure" : [

            ],
            "key.typename" : "(ResponseAccumulator.Type) -> (HTTPClient.Request) -> ResponseAccumulator",
            "key.typeusr" : "$s7request15AsyncHTTPClient19ResponseAccumulatorCAB0C0C7RequestV_tcD",
            "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC7requestAcA0B0C7RequestV_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveHead(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/Type>&gt;, _ head: <Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12617
              }
            ],
            "key.bodylength" : 429,
            "key.bodyoffset" : 12729,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveHead(task: HTTPClient.Task<Response>, _ head: HTTPResponseHead) -> EventLoopFuture<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"455\" column=\"10\"><Name>didReceiveHead(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF<\/USR><Declaration>func didReceiveHead(task: HTTPClient.Task&lt;Response&gt;, _ head: HTTPResponseHead) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when response head is received. Will be called once. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>head<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received reposonse head.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 455,
            "key.doc.name" : "didReceiveHead(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received reposonse head."
                  }
                ],
                "name" : "head"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveHead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>head<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 535,
            "key.name" : "didReceiveHead(task:_:)",
            "key.namelength" : 73,
            "key.nameoffset" : 12629,
            "key.offset" : 12624,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF"
              }
            ],
            "key.parsed_declaration" : "public func didReceiveHead(task: HTTPClient.Task<Response>, _ head: HTTPResponseHead) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 374,
            "key.parsed_scope.start" : 360,
            "key.substructure" : [

            ],
            "key.typename" : "(ResponseAccumulator) -> (HTTPClient.Task<HTTPClient.Response>, HTTPResponseHead) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_AH8ResponseVG_8NIOHTTP116HTTPResponseHeadVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveBodyPart(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/Type>&gt;, _ part: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13165
              }
            ],
            "key.bodylength" : 520,
            "key.bodyoffset" : 13275,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveBodyPart(task: HTTPClient.Task<Response>, _ buffer: ByteBuffer) -> EventLoopFuture<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"465\" column=\"10\"><Name>didReceiveBodyPart(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF<\/USR><Declaration>func didReceiveBodyPart(task: HTTPClient.Task&lt;Response&gt;, _ buffer: ByteBuffer) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when part of a response body is received. Could be called zero or more times. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>buffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received body <codeVoice>Part<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 465,
            "key.doc.name" : "didReceiveBodyPart(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received body `Part`."
                  }
                ],
                "name" : "buffer"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveBodyPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>part<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 624,
            "key.name" : "didReceiveBodyPart(task:_:)",
            "key.namelength" : 71,
            "key.nameoffset" : 13177,
            "key.offset" : 13172,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
              }
            ],
            "key.parsed_declaration" : "public func didReceiveBodyPart(task: HTTPClient.Task<Response>, _ part: ByteBuffer) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 392,
            "key.parsed_scope.start" : 376,
            "key.substructure" : [

            ],
            "key.typename" : "(ResponseAccumulator) -> (HTTPClient.Task<HTTPClient.Response>, ByteBuffer) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_AH8ResponseVG_AB10ByteBufferVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveError(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/Type>&gt;, _ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13802
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 13880,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveError(task: HTTPClient.Task<Response>, _ error: Error)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"472\" column=\"10\"><Name>didReceiveError(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF<\/USR><Declaration>func didReceiveError(task: HTTPClient.Task&lt;Response&gt;, _ error: Error)<\/Declaration><CommentParts><Abstract><Para>Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Error that occured during response processing.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 472,
            "key.doc.name" : "didReceiveError(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Error that occured during response processing."
                  }
                ],
                "name" : "error"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveError<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 112,
            "key.name" : "didReceiveError(task:_:)",
            "key.namelength" : 64,
            "key.nameoffset" : 13814,
            "key.offset" : 13809,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF"
              }
            ],
            "key.parsed_declaration" : "public func didReceiveError(task: HTTPClient.Task<Response>, _ error: Error)",
            "key.parsed_scope.end" : 396,
            "key.parsed_scope.start" : 394,
            "key.substructure" : [

            ],
            "key.typename" : "(ResponseAccumulator) -> (HTTPClient.Task<HTTPClient.Response>, Error) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_AD8ResponseVG_s5Error_ptcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didFinishRequest(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/Type>&gt;) throws -&gt; <Type usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13927
              }
            ],
            "key.bodylength" : 595,
            "key.bodyoffset" : 14009,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didFinishRequest(task: HTTPClient.Task<Response>) throws -> Response",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"479\" column=\"10\"><Name>didFinishRequest(task:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF<\/USR><Declaration>func didFinishRequest(task: HTTPClient.Task&lt;Response&gt;) throws -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Called when the complete HTTP request is finished. You must return an instance of your <codeVoice>Response<\/codeVoice> associated type. Will be called once, except if an error occurred.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Result of processing.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 479,
            "key.doc.name" : "didFinishRequest(task:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Result of processing."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didFinishRequest<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a\">Response<\/ref.typealias><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 671,
            "key.name" : "didFinishRequest(task:)",
            "key.namelength" : 49,
            "key.nameoffset" : 13939,
            "key.offset" : 13934,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF"
              }
            ],
            "key.parsed_declaration" : "public func didFinishRequest(task: HTTPClient.Task<Response>) throws -> Response",
            "key.parsed_scope.end" : 411,
            "key.parsed_scope.start" : 398,
            "key.substructure" : [

            ],
            "key.typename" : "(ResponseAccumulator) -> (HTTPClient.Task<HTTPClient.Response>) throws -> HTTPClient.Response",
            "key.typeusr" : "$s4task15AsyncHTTPClient0C0C8ResponseVAD4TaskCy_AFG_tKcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF"
          }
        ],
        "key.typename" : "ResponseAccumulator.Type",
        "key.typeusr" : "$s15AsyncHTTPClient19ResponseAccumulatorCmD",
        "key.usr" : "s:15AsyncHTTPClient19ResponseAccumulatorC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol HTTPClientResponseDelegate : AnyObject<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 15574
          }
        ],
        "key.bodylength" : 2721,
        "key.bodyoffset" : 15629,
        "key.doc.column" : 17,
        "key.doc.comment" : "`HTTPClientResponseDelegate` allows an implementation to receive notifications about request processing and to control how response parts are processed.\nYou can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response\nheaders before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming\nclass to the `HTTPClient.execute()` method and this package will call each delegate method appropriately as the request takes place.\n\n - note: This delegate is strongly held by the `HTTPTaskHandler`\n         for the duration of the `Request` processing and will be\n         released together with the `HTTPTaskHandler` when channel is closed.\n         Users of the library are not required to keep a reference to the\n         object that implements this protocol, but may do so if needed.",
        "key.doc.declaration" : "public protocol HTTPClientResponseDelegate : AnyObject",
        "key.doc.discussion" : [
          {
            "Note" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"424\" column=\"17\"><Name>HTTPClientResponseDelegate<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP<\/USR><Declaration>public protocol HTTPClientResponseDelegate : AnyObject<\/Declaration><CommentParts><Abstract><Para><codeVoice>HTTPClientResponseDelegate<\/codeVoice> allows an implementation to receive notifications about request processing and to control how response parts are processed. You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming class to the <codeVoice>HTTPClient.execute()<\/codeVoice> method and this package will call each delegate method appropriately as the request takes place.<\/Para><\/Abstract><Discussion><Note><Para>This delegate is strongly held by the <codeVoice>HTTPTaskHandler<\/codeVoice> for the duration of the <codeVoice>Request<\/codeVoice> processing and will be released together with the <codeVoice>HTTPTaskHandler<\/codeVoice> when channel is closed. Users of the library are not required to keep a reference to the object that implements this protocol, but may do so if needed.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 424,
        "key.doc.name" : "HTTPClientResponseDelegate",
        "key.doc.type" : "Class",
        "key.doclength" : 965,
        "key.docoffset" : 14609,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 15618
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HTTPClientResponseDelegate<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AnyObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 2770,
        "key.name" : "HTTPClientResponseDelegate",
        "key.namelength" : 26,
        "key.nameoffset" : 15590,
        "key.offset" : 15581,
        "key.parsed_declaration" : "public protocol HTTPClientResponseDelegate: AnyObject",
        "key.parsed_scope.end" : 480,
        "key.parsed_scope.start" : 424,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Response<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Response<\/decl.name><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 23,
            "key.name" : "Response",
            "key.namelength" : 8,
            "key.nameoffset" : 15649,
            "key.offset" : 15634,
            "key.parsed_declaration" : "associatedtype Response",
            "key.parsed_scope.end" : 425,
            "key.parsed_scope.start" : 425,
            "key.typename" : "Self.Response.Type",
            "key.typeusr" : "$s8Response15AsyncHTTPClient0cA8DelegatePQzmD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didSendRequestHead(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _ head: <Type usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/Type>)<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when the request head is sent. Will be called once.\n\n- parameters:\n    - task: Current request context.\n    - head: Request head.",
            "key.doc.declaration" : "func didSendRequestHead(task: HTTPClient.Task<Response>, _ head: HTTPRequestHead)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"432\" column=\"10\"><Name>didSendRequestHead(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestHead4task_yAA0B0C4TaskCy_0C0QzG_8NIOHTTP1011HTTPRequestH0VtF<\/USR><Declaration>func didSendRequestHead(task: HTTPClient.Task&lt;Response&gt;, _ head: HTTPRequestHead)<\/Declaration><CommentParts><Abstract><Para>Called when the request head is sent. Will be called once.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>head<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request head.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 432,
            "key.doc.name" : "didSendRequestHead(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request head."
                  }
                ],
                "name" : "head"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 172,
            "key.docoffset" : 15663,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didSendRequestHead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>head<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 81,
            "key.name" : "didSendRequestHead(task:_:)",
            "key.namelength" : 76,
            "key.nameoffset" : 15844,
            "key.offset" : 15839,
            "key.parsed_declaration" : "func didSendRequestHead(task: HTTPClient.Task<Response>, _ head: HTTPRequestHead)",
            "key.parsed_scope.end" : 432,
            "key.parsed_scope.start" : 432,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegatePAAE18didSendRequestHead4task_yAA0B0C4TaskCy_0C0QzG_8NIOHTTP1011HTTPRequestH0VtF\">didSendRequestHead(task: HTTPClient.Task&lt;Response&gt;, _: HTTPRequestHead)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, HTTPRequestHead) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_8NIOHTTP115HTTPRequestHeadVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestHead4task_yAA0B0C4TaskCy_0C0QzG_8NIOHTTP1011HTTPRequestH0VtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didSendRequestPart(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _ part: <Type usr=\"s:3NIO6IODataO\">IOData<\/Type>)<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when a part of the request body is sent. Could be called zero or more times.\n\n- parameters:\n    - task: Current request context.\n    - part: Request body `Part`.",
            "key.doc.declaration" : "func didSendRequestPart(task: HTTPClient.Task<Response>, _ part: IOData)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"439\" column=\"10\"><Name>didSendRequestPart(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestPart4task_yAA0B0C4TaskCy_0C0QzG_3NIO6IODataOtF<\/USR><Declaration>func didSendRequestPart(task: HTTPClient.Task&lt;Response&gt;, _ part: IOData)<\/Declaration><CommentParts><Abstract><Para>Called when a part of the request body is sent. Could be called zero or more times.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>part<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body <codeVoice>Part<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 439,
            "key.doc.name" : "didSendRequestPart(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body `Part`."
                  }
                ],
                "name" : "part"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 204,
            "key.docoffset" : 15926,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didSendRequestPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>part<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:3NIO6IODataO\">IOData<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 72,
            "key.name" : "didSendRequestPart(task:_:)",
            "key.namelength" : 67,
            "key.nameoffset" : 16139,
            "key.offset" : 16134,
            "key.parsed_declaration" : "func didSendRequestPart(task: HTTPClient.Task<Response>, _ part: IOData)",
            "key.parsed_scope.end" : 439,
            "key.parsed_scope.start" : 439,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegatePAAE18didSendRequestPart4task_yAA0B0C4TaskCy_0C0QzG_3NIO6IODataOtF\">didSendRequestPart(task: HTTPClient.Task&lt;Response&gt;, _: IOData)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, IOData) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_3NIO6IODataOtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestPart4task_yAA0B0C4TaskCy_0C0QzG_3NIO6IODataOtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didSendRequest(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;)<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when the request is fully sent. Will be called once.\n\n- parameters:\n    - task: Current request context.",
            "key.doc.declaration" : "func didSendRequest(task: HTTPClient.Task<Response>)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"445\" column=\"10\"><Name>didSendRequest(task:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP14didSendRequest4taskyAA0B0C4TaskCy_0C0QzG_tF<\/USR><Declaration>func didSendRequest(task: HTTPClient.Task&lt;Response&gt;)<\/Declaration><CommentParts><Abstract><Para>Called when the request is fully sent. Will be called once.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 445,
            "key.doc.name" : "didSendRequest(task:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 139,
            "key.docoffset" : 16212,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didSendRequest<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 52,
            "key.name" : "didSendRequest(task:)",
            "key.namelength" : 47,
            "key.nameoffset" : 16360,
            "key.offset" : 16355,
            "key.parsed_declaration" : "func didSendRequest(task: HTTPClient.Task<Response>)",
            "key.parsed_scope.end" : 445,
            "key.parsed_scope.start" : 445,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegatePAAE14didSendRequest4taskyAA0B0C4TaskCy_0C0QzG_tF\">didSendRequest(task: HTTPClient.Task&lt;Response&gt;)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>) -> ()",
            "key.typeusr" : "$s4tasky15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_tcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didSendRequest4taskyAA0B0C4TaskCy_0C0QzG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didReceiveHead(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _ head: <Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when response head is received. Will be called once.\nYou must return an `EventLoopFuture<Void>` that you complete when you have finished processing the body part.\nYou can create an already succeeded future by calling `task.eventLoop.makeSucceededFuture(())`.\n\n- parameters:\n    - task: Current request context.\n    - head: Received reposonse head.\n- returns: `EventLoopFuture` that will be used for backpressure.",
            "key.doc.declaration" : "func didReceiveHead(task: HTTPClient.Task<Response>, _ head: HTTPResponseHead) -> EventLoopFuture<Void>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"455\" column=\"10\"><Name>didReceiveHead(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF<\/USR><Declaration>func didReceiveHead(task: HTTPClient.Task&lt;Response&gt;, _ head: HTTPResponseHead) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when response head is received. Will be called once. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>head<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received reposonse head.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 455,
            "key.doc.name" : "didReceiveHead(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received reposonse head."
                  }
                ],
                "name" : "head"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 479,
            "key.docoffset" : 16413,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveHead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>head<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 103,
            "key.name" : "didReceiveHead(task:_:)",
            "key.namelength" : 73,
            "key.nameoffset" : 16901,
            "key.offset" : 16896,
            "key.parsed_declaration" : "func didReceiveHead(task: HTTPClient.Task<Response>, _ head: HTTPResponseHead) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 455,
            "key.parsed_scope.start" : 455,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegatePAAE14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF\">didReceiveHead(task: HTTPClient.Task&lt;Response&gt;, _: HTTPResponseHead) -&gt; EventLoopFuture&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, HTTPResponseHead) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_8ResponseQzG_8NIOHTTP116HTTPResponseHeadVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didReceiveBodyPart(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _ buffer: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when part of a response body is received. Could be called zero or more times.\nYou must return an `EventLoopFuture<Void>` that you complete when you have finished processing the body part.\nYou can create an already succeeded future by calling `task.eventLoop.makeSucceededFuture(())`.\n\n- parameters:\n    - task: Current request context.\n    - buffer: Received body `Part`.\n- returns: `EventLoopFuture` that will be used for backpressure.",
            "key.doc.declaration" : "func didReceiveBodyPart(task: HTTPClient.Task<Response>, _ buffer: ByteBuffer) -> EventLoopFuture<Void>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"465\" column=\"10\"><Name>didReceiveBodyPart(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF<\/USR><Declaration>func didReceiveBodyPart(task: HTTPClient.Task&lt;Response&gt;, _ buffer: ByteBuffer) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when part of a response body is received. Could be called zero or more times. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>buffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received body <codeVoice>Part<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 465,
            "key.doc.name" : "didReceiveBodyPart(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received body `Part`."
                  }
                ],
                "name" : "buffer"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 503,
            "key.docoffset" : 17005,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveBodyPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>buffer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 103,
            "key.name" : "didReceiveBodyPart(task:_:)",
            "key.namelength" : 73,
            "key.nameoffset" : 17517,
            "key.offset" : 17512,
            "key.parsed_declaration" : "func didReceiveBodyPart(task: HTTPClient.Task<Response>, _ buffer: ByteBuffer) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 465,
            "key.parsed_scope.start" : 465,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegatePAAE18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF\">didReceiveBodyPart(task: HTTPClient.Task&lt;Response&gt;, _: ByteBuffer) -&gt; EventLoopFuture&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, ByteBuffer) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_8ResponseQzG_AB10ByteBufferVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didReceiveError(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.\n\n- parameters:\n    - task: Current request context.\n    - error: Error that occured during response processing.",
            "key.doc.declaration" : "func didReceiveError(task: HTTPClient.Task<Response>, _ error: Error)",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"472\" column=\"10\"><Name>didReceiveError(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF<\/USR><Declaration>func didReceiveError(task: HTTPClient.Task&lt;Response&gt;, _ error: Error)<\/Declaration><CommentParts><Abstract><Para>Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Error that occured during response processing.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 472,
            "key.doc.name" : "didReceiveError(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Error that occured during response processing."
                  }
                ],
                "name" : "error"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 287,
            "key.docoffset" : 17621,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveError<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 69,
            "key.name" : "didReceiveError(task:_:)",
            "key.namelength" : 64,
            "key.nameoffset" : 17917,
            "key.offset" : 17912,
            "key.parsed_declaration" : "func didReceiveError(task: HTTPClient.Task<Response>, _ error: Error)",
            "key.parsed_scope.end" : 472,
            "key.parsed_scope.start" : 472,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegatePAAE15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF\">didReceiveError(task: HTTPClient.Task&lt;Response&gt;, _: Error)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, Error) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_s5Error_ptcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didFinishRequest(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;) throws -&gt; <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type><\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called when the complete HTTP request is finished. You must return an instance of your `Response` associated type. Will be called once, except if an error occurred.\n\n- parameters:\n    - task: Current request context.\n- returns: Result of processing.",
            "key.doc.declaration" : "func didFinishRequest(task: HTTPClient.Task<Response>) throws -> Response",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"479\" column=\"10\"><Name>didFinishRequest(task:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF<\/USR><Declaration>func didFinishRequest(task: HTTPClient.Task&lt;Response&gt;) throws -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Called when the complete HTTP request is finished. You must return an instance of your <codeVoice>Response<\/codeVoice> associated type. Will be called once, except if an error occurred.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Result of processing.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 479,
            "key.doc.name" : "didFinishRequest(task:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Result of processing."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 285,
            "key.docoffset" : 17987,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didFinishRequest<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 73,
            "key.name" : "didFinishRequest(task:)",
            "key.namelength" : 49,
            "key.nameoffset" : 18281,
            "key.offset" : 18276,
            "key.parsed_declaration" : "func didFinishRequest(task: HTTPClient.Task<Response>) throws -> Response",
            "key.parsed_scope.end" : 479,
            "key.parsed_scope.start" : 479,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>) throws -> Self.Response",
            "key.typeusr" : "$s4task8ResponseQz15AsyncHTTPClient0D0C4TaskCy_ACG_tKcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF"
          }
        ],
        "key.typename" : "HTTPClientResponseDelegate.Protocol",
        "key.typeusr" : "$s15AsyncHTTPClient0B16ResponseDelegate_pmD",
        "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol HTTPClientResponseDelegate : AnyObject<\/Declaration>",
        "key.bodylength" : 676,
        "key.bodyoffset" : 18391,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol HTTPClientResponseDelegate : AnyObject",
        "key.doc.discussion" : [
          {
            "Note" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"424\" column=\"17\"><Name>HTTPClientResponseDelegate<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP<\/USR><Declaration>public protocol HTTPClientResponseDelegate : AnyObject<\/Declaration><CommentParts><Abstract><Para><codeVoice>HTTPClientResponseDelegate<\/codeVoice> allows an implementation to receive notifications about request processing and to control how response parts are processed. You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming class to the <codeVoice>HTTPClient.execute()<\/codeVoice> method and this package will call each delegate method appropriately as the request takes place.<\/Para><\/Abstract><Discussion><Note><Para>This delegate is strongly held by the <codeVoice>HTTPTaskHandler<\/codeVoice> for the duration of the <codeVoice>Request<\/codeVoice> processing and will be released together with the <codeVoice>HTTPTaskHandler<\/codeVoice> when channel is closed. Users of the library are not required to keep a reference to the object that implements this protocol, but may do so if needed.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 424,
        "key.doc.name" : "HTTPClientResponseDelegate",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HTTPClientResponseDelegate<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 715,
        "key.name" : "HTTPClientResponseDelegate",
        "key.namelength" : 26,
        "key.nameoffset" : 18363,
        "key.offset" : 18353,
        "key.parsed_declaration" : "extension HTTPClientResponseDelegate",
        "key.parsed_scope.end" : 498,
        "key.parsed_scope.start" : 482,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didSendRequestHead(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _ head: <Type usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18396
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 18486,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didSendRequestHead(task: HTTPClient.Task<Response>, _ head: HTTPRequestHead)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"432\" column=\"10\"><Name>didSendRequestHead(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestHead4task_yAA0B0C4TaskCy_0C0QzG_8NIOHTTP1011HTTPRequestH0VtF<\/USR><Declaration>func didSendRequestHead(task: HTTPClient.Task&lt;Response&gt;, _ head: HTTPRequestHead)<\/Declaration><CommentParts><Abstract><Para>Called when the request head is sent. Will be called once.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>head<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request head.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 432,
            "key.doc.name" : "didSendRequestHead(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request head."
                  }
                ],
                "name" : "head"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didSendRequestHead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>head<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 84,
            "key.name" : "didSendRequestHead(task:_:)",
            "key.namelength" : 76,
            "key.nameoffset" : 18408,
            "key.offset" : 18403,
            "key.parsed_declaration" : "public func didSendRequestHead(task: HTTPClient.Task<Response>, _ head: HTTPRequestHead)",
            "key.parsed_scope.end" : 483,
            "key.parsed_scope.start" : 483,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestHead4task_yAA0B0C4TaskCy_0C0QzG_8NIOHTTP1011HTTPRequestH0VtF\">didSendRequestHead(task: HTTPClient.Task&lt;Response&gt;, _: HTTPRequestHead)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, HTTPRequestHead) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_8NIOHTTP115HTTPRequestHeadVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestHead4task_yAA0B0C4TaskCy_0C0QzG_8NIOHTTP1011HTTPRequestH0VtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didSendRequestPart(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _ part: <Type usr=\"s:3NIO6IODataO\">IOData<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18493
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 18574,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didSendRequestPart(task: HTTPClient.Task<Response>, _ part: IOData)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"439\" column=\"10\"><Name>didSendRequestPart(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestPart4task_yAA0B0C4TaskCy_0C0QzG_3NIO6IODataOtF<\/USR><Declaration>func didSendRequestPart(task: HTTPClient.Task&lt;Response&gt;, _ part: IOData)<\/Declaration><CommentParts><Abstract><Para>Called when a part of the request body is sent. Could be called zero or more times.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>part<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request body <codeVoice>Part<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 439,
            "key.doc.name" : "didSendRequestPart(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request body `Part`."
                  }
                ],
                "name" : "part"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didSendRequestPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>part<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:3NIO6IODataO\">IOData<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 75,
            "key.name" : "didSendRequestPart(task:_:)",
            "key.namelength" : 67,
            "key.nameoffset" : 18505,
            "key.offset" : 18500,
            "key.parsed_declaration" : "public func didSendRequestPart(task: HTTPClient.Task<Response>, _ part: IOData)",
            "key.parsed_scope.end" : 485,
            "key.parsed_scope.start" : 485,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestPart4task_yAA0B0C4TaskCy_0C0QzG_3NIO6IODataOtF\">didSendRequestPart(task: HTTPClient.Task&lt;Response&gt;, _: IOData)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, IOData) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_3NIO6IODataOtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didSendRequestPart4task_yAA0B0C4TaskCy_0C0QzG_3NIO6IODataOtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didSendRequest(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18581
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 18642,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didSendRequest(task: HTTPClient.Task<Response>)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"445\" column=\"10\"><Name>didSendRequest(task:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP14didSendRequest4taskyAA0B0C4TaskCy_0C0QzG_tF<\/USR><Declaration>func didSendRequest(task: HTTPClient.Task&lt;Response&gt;)<\/Declaration><CommentParts><Abstract><Para>Called when the request is fully sent. Will be called once.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 445,
            "key.doc.name" : "didSendRequest(task:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didSendRequest<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 55,
            "key.name" : "didSendRequest(task:)",
            "key.namelength" : 47,
            "key.nameoffset" : 18593,
            "key.offset" : 18588,
            "key.parsed_declaration" : "public func didSendRequest(task: HTTPClient.Task<Response>)",
            "key.parsed_scope.end" : 487,
            "key.parsed_scope.start" : 487,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP14didSendRequest4taskyAA0B0C4TaskCy_0C0QzG_tF\">didSendRequest(task: HTTPClient.Task&lt;Response&gt;)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>) -> ()",
            "key.typeusr" : "$s4tasky15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_tcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didSendRequest4taskyAA0B0C4TaskCy_0C0QzG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveHead(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _: <Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18649
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 18756,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveHead(task: HTTPClient.Task<Response>, _ head: HTTPResponseHead) -> EventLoopFuture<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"455\" column=\"10\"><Name>didReceiveHead(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF<\/USR><Declaration>func didReceiveHead(task: HTTPClient.Task&lt;Response&gt;, _ head: HTTPResponseHead) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when response head is received. Will be called once. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>head<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received reposonse head.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 455,
            "key.doc.name" : "didReceiveHead(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received reposonse head."
                  }
                ],
                "name" : "head"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveHead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 160,
            "key.name" : "didReceiveHead(task:_:)",
            "key.namelength" : 68,
            "key.nameoffset" : 18661,
            "key.offset" : 18656,
            "key.parsed_declaration" : "public func didReceiveHead(task: HTTPClient.Task<Response>, _: HTTPResponseHead) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 491,
            "key.parsed_scope.start" : 489,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF\">didReceiveHead(task: HTTPClient.Task&lt;Response&gt;, _: HTTPResponseHead) -&gt; EventLoopFuture&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, HTTPResponseHead) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_8ResponseQzG_8NIOHTTP116HTTPResponseHeadVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveBodyPart(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18822
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 18927,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveBodyPart(task: HTTPClient.Task<Response>, _ buffer: ByteBuffer) -> EventLoopFuture<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"465\" column=\"10\"><Name>didReceiveBodyPart(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF<\/USR><Declaration>func didReceiveBodyPart(task: HTTPClient.Task&lt;Response&gt;, _ buffer: ByteBuffer) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when part of a response body is received. Could be called zero or more times. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>buffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received body <codeVoice>Part<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 465,
            "key.doc.name" : "didReceiveBodyPart(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received body `Part`."
                  }
                ],
                "name" : "buffer"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveBodyPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 158,
            "key.name" : "didReceiveBodyPart(task:_:)",
            "key.namelength" : 66,
            "key.nameoffset" : 18834,
            "key.offset" : 18829,
            "key.parsed_declaration" : "public func didReceiveBodyPart(task: HTTPClient.Task<Response>, _: ByteBuffer) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 495,
            "key.parsed_scope.start" : 493,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF\">didReceiveBodyPart(task: HTTPClient.Task&lt;Response&gt;, _: ByteBuffer) -&gt; EventLoopFuture&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, ByteBuffer) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_8ResponseQzG_AB10ByteBufferVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveError(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, _: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18993
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 19065,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveError(task: HTTPClient.Task<Response>, _ error: Error)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"472\" column=\"10\"><Name>didReceiveError(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF<\/USR><Declaration>func didReceiveError(task: HTTPClient.Task&lt;Response&gt;, _ error: Error)<\/Declaration><CommentParts><Abstract><Para>Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Error that occured during response processing.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 472,
            "key.doc.name" : "didReceiveError(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Error that occured during response processing."
                  }
                ],
                "name" : "error"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveError<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 66,
            "key.name" : "didReceiveError(task:_:)",
            "key.namelength" : 58,
            "key.nameoffset" : 19005,
            "key.offset" : 19000,
            "key.parsed_declaration" : "public func didReceiveError(task: HTTPClient.Task<Response>, _: Error)",
            "key.parsed_scope.end" : 497,
            "key.parsed_scope.start" : 497,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF\">didReceiveError(task: HTTPClient.Task&lt;Response&gt;, _: Error)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HTTPClientResponseDelegate> (Self) -> (HTTPClient.Task<Self.Response>, Error) -> ()",
            "key.typeusr" : "$s4task_y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_s5Error_ptcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP15didReceiveError4task_yAA0B0C4TaskCy_0C0QzG_s0G0_ptF"
          }
        ],
        "key.typename" : "HTTPClientResponseDelegate.Protocol",
        "key.typeusr" : "$s15AsyncHTTPClient0B16ResponseDelegate_pmD",
        "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP"
      },
      {
        "key.annotated_decl" : "<Declaration>struct URL : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.bodylength" : 2203,
        "key.bodyoffset" : 19085,
        "key.doc.declaration" : "struct URL : ReferenceConvertible, Equatable",
        "key.doc.discussion" : [
          {
            "Para" : "You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide."
          },
          {
            "Para" : "URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as `String` by calling `func init(contentsOf:encoding) throws`, or as a `Data` by calling `func init(contentsOf:options) throws`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>URL<\/Name><USR>s:10Foundation3URLV<\/USR><Declaration>struct URL : ReferenceConvertible, Equatable<\/Declaration><CommentParts><Abstract><Para>A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data.<\/Para><\/Abstract><Discussion><Para>You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide.<\/Para><Para>URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as <codeVoice>String<\/codeVoice> by calling <codeVoice>func init(contentsOf:encoding) throws<\/codeVoice>, or as a <codeVoice>Data<\/codeVoice> by calling <codeVoice>func init(contentsOf:options) throws<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "URL",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>URL<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2219,
        "key.modulename" : "Foundation",
        "key.name" : "URL",
        "key.namelength" : 3,
        "key.nameoffset" : 19080,
        "key.offset" : 19070,
        "key.parsed_declaration" : "extension URL",
        "key.parsed_scope.end" : 551,
        "key.parsed_scope.start" : 500,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var percentEncodedPath: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 174,
            "key.bodyoffset" : 19122,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>percentEncodedPath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 207,
            "key.name" : "percentEncodedPath",
            "key.namelength" : 18,
            "key.nameoffset" : 19094,
            "key.offset" : 19090,
            "key.parsed_declaration" : "var percentEncodedPath: String",
            "key.parsed_scope.end" : 506,
            "key.parsed_scope.start" : 501,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE18percentEncodedPathSSvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var uri: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 145,
            "key.bodyoffset" : 19320,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uri<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 163,
            "key.name" : "uri",
            "key.namelength" : 3,
            "key.nameoffset" : 19307,
            "key.offset" : 19303,
            "key.parsed_declaration" : "var uri: String",
            "key.parsed_scope.end" : 516,
            "key.parsed_scope.start" : 508,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE3uriSSvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var uri: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uri<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 33,
            "key.name" : "uri",
            "key.namelength" : 3,
            "key.nameoffset" : 19333,
            "key.offset" : 19329,
            "key.parsed_declaration" : "var uri = self.percentEncodedPath",
            "key.parsed_scope.end" : 509,
            "key.parsed_scope.start" : 509,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15AsyncHTTPClientE3uriSSvp\">uri<\/RelatedName>"
              }
            ],
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE3uriSSvgAEL_SSvp"
          },
          {
            "key.annotated_decl" : "<Declaration>func hasTheSameOrigin(as other: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 102,
            "key.bodyoffset" : 19518,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasTheSameOrigin<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 149,
            "key.name" : "hasTheSameOrigin(as:)",
            "key.namelength" : 31,
            "key.nameoffset" : 19477,
            "key.offset" : 19472,
            "key.parsed_declaration" : "func hasTheSameOrigin(as other: URL) -> Bool",
            "key.parsed_scope.end" : 520,
            "key.parsed_scope.start" : 518,
            "key.substructure" : [

            ],
            "key.typename" : "(URL) -> (URL) -> Bool",
            "key.typeusr" : "$s2asSb10Foundation3URLV_tcD",
            "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE16hasTheSameOrigin2asSbAC_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init?(httpURLWithSocketPath socketPath: <Type usr=\"s:SS\">String<\/Type>, uri: <Type usr=\"s:SS\">String<\/Type> = &quot;\/&quot;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 20017
              }
            ],
            "key.bodylength" : 354,
            "key.bodyoffset" : 20092,
            "key.doc.column" : 12,
            "key.doc.comment" : "Initializes a newly created HTTP URL connecting to a unix domain socket path. The socket path is encoded as the URL's host, replacing percent encoding invalid path characters, and will use the \"http+unix\" scheme.\n- Parameters:\n  - socketPath: The path to the unix domain socket to connect to.\n  - uri: The URI path and query that will be sent to the server.",
            "key.doc.declaration" : "public init?(httpURLWithSocketPath socketPath: String, uri: String = \"\/\")",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"526\" column=\"12\"><Name>init(httpURLWithSocketPath:uri:)<\/Name><USR>s:10Foundation3URLV15AsyncHTTPClientE21httpURLWithSocketPath3uriACSgSS_SStcfc<\/USR><Declaration>public init?(httpURLWithSocketPath socketPath: String, uri: String = &quot;\/&quot;)<\/Declaration><CommentParts><Abstract><Para>Initializes a newly created HTTP URL connecting to a unix domain socket path. The socket path is encoded as the URL’s host, replacing percent encoding invalid path characters, and will use the “http+unix” scheme.<\/Para><\/Abstract><Parameters><Parameter><Name>socketPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The path to the unix domain socket to connect to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>uri<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The URI path and query that will be sent to the server.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 526,
            "key.doc.name" : "init(httpURLWithSocketPath:uri:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The path to the unix domain socket to connect to."
                  }
                ],
                "name" : "socketPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The URI path and query that will be sent to the server."
                  }
                ],
                "name" : "uri"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 386,
            "key.docoffset" : 19627,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>httpURLWithSocketPath<\/decl.var.parameter.argument_label> <decl.var.parameter.name>socketPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>uri<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;\/&quot;<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 423,
            "key.name" : "init(httpURLWithSocketPath:uri:)",
            "key.namelength" : 66,
            "key.nameoffset" : 20024,
            "key.offset" : 20024,
            "key.parsed_declaration" : "public init?(httpURLWithSocketPath socketPath: String, uri: String = \"\/\")",
            "key.parsed_scope.end" : 535,
            "key.parsed_scope.start" : 526,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV6stringACSgSSh_tcfc\">init(string:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV6string10relativeToACSgSSh_AFhtcfc\">init(string:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPath11isDirectory10relativeToACSSh_SbACSghtcfc\">init(fileURLWithPath:isDirectory:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPath10relativeToACSSh_ACSghtcfc\">init(fileURLWithPath:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPath11isDirectoryACSSh_Sbtcfc\">init(fileURLWithPath:isDirectory:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPathACSSh_tcfc\">init(fileURLWithPath:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV18dataRepresentation10relativeTo10isAbsoluteACSgAA4DataVh_AGhSbtcfc\">init(dataRepresentation:relativeTo:isAbsolute:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV21resolvingBookmarkData7options10relativeTo08bookmarkE7IsStaleAcA0E0Vh_So30NSURLBookmarkResolutionOptionsVACSghSbztKcfc\">init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV20resolvingAliasFileAt7optionsA2Ch_So30NSURLBookmarkResolutionOptionsVtKcfc\">init(resolvingAliasFileAt:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV35fileURLWithFileSystemRepresentation11isDirectory10relativeToACSPys4Int8VG_SbACSghtcfc\">init(fileURLWithFileSystemRepresentation:isDirectory:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15AsyncHTTPClientE22httpsURLWithSocketPath3uriACSgSS_SStcfc\">init(httpsURLWithSocketPath:uri:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV32fileReferenceLiteralResourceNameACSS_tcfc\">init(fileReferenceLiteralResourceName:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var urlString: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>urlString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "urlString",
                "key.namelength" : 9,
                "key.nameoffset" : 20223,
                "key.offset" : 20219,
                "key.parsed_declaration" : "var urlString: String",
                "key.parsed_scope.end" : 528,
                "key.parsed_scope.start" : 528,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE21httpURLWithSocketPath3uriACSgSS_SStcfc9urlStringL_SSvp"
              }
            ],
            "key.typename" : "(URL.Type) -> (String, String) -> URL?",
            "key.typeusr" : "$s21httpURLWithSocketPath3uri10Foundation3URLVSgSS_SStcD",
            "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE21httpURLWithSocketPath3uriACSgSS_SStcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init?(httpsURLWithSocketPath socketPath: <Type usr=\"s:SS\">String<\/Type>, uri: <Type usr=\"s:SS\">String<\/Type> = &quot;\/&quot;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 20854
              }
            ],
            "key.bodylength" : 356,
            "key.bodyoffset" : 20930,
            "key.doc.column" : 12,
            "key.doc.comment" : "Initializes a newly created HTTPS URL connecting to a unix domain socket path over TLS. The socket path is encoded as the URL's host, replacing percent encoding invalid path characters, and will use the \"https+unix\" scheme.\n- Parameters:\n  - socketPath: The path to the unix domain socket to connect to.\n  - uri: The URI path and query that will be sent to the server.",
            "key.doc.declaration" : "public init?(httpsURLWithSocketPath socketPath: String, uri: String = \"\/\")",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"541\" column=\"12\"><Name>init(httpsURLWithSocketPath:uri:)<\/Name><USR>s:10Foundation3URLV15AsyncHTTPClientE22httpsURLWithSocketPath3uriACSgSS_SStcfc<\/USR><Declaration>public init?(httpsURLWithSocketPath socketPath: String, uri: String = &quot;\/&quot;)<\/Declaration><CommentParts><Abstract><Para>Initializes a newly created HTTPS URL connecting to a unix domain socket path over TLS. The socket path is encoded as the URL’s host, replacing percent encoding invalid path characters, and will use the “https+unix” scheme.<\/Para><\/Abstract><Parameters><Parameter><Name>socketPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The path to the unix domain socket to connect to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>uri<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The URI path and query that will be sent to the server.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 541,
            "key.doc.name" : "init(httpsURLWithSocketPath:uri:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The path to the unix domain socket to connect to."
                  }
                ],
                "name" : "socketPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The URI path and query that will be sent to the server."
                  }
                ],
                "name" : "uri"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 397,
            "key.docoffset" : 20453,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>httpsURLWithSocketPath<\/decl.var.parameter.argument_label> <decl.var.parameter.name>socketPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>uri<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;\/&quot;<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 426,
            "key.name" : "init(httpsURLWithSocketPath:uri:)",
            "key.namelength" : 67,
            "key.nameoffset" : 20861,
            "key.offset" : 20861,
            "key.parsed_declaration" : "public init?(httpsURLWithSocketPath socketPath: String, uri: String = \"\/\")",
            "key.parsed_scope.end" : 550,
            "key.parsed_scope.start" : 541,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV6stringACSgSSh_tcfc\">init(string:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV6string10relativeToACSgSSh_AFhtcfc\">init(string:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPath11isDirectory10relativeToACSSh_SbACSghtcfc\">init(fileURLWithPath:isDirectory:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPath10relativeToACSSh_ACSghtcfc\">init(fileURLWithPath:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPath11isDirectoryACSSh_Sbtcfc\">init(fileURLWithPath:isDirectory:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15fileURLWithPathACSSh_tcfc\">init(fileURLWithPath:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV18dataRepresentation10relativeTo10isAbsoluteACSgAA4DataVh_AGhSbtcfc\">init(dataRepresentation:relativeTo:isAbsolute:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV21resolvingBookmarkData7options10relativeTo08bookmarkE7IsStaleAcA0E0Vh_So30NSURLBookmarkResolutionOptionsVACSghSbztKcfc\">init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV20resolvingAliasFileAt7optionsA2Ch_So30NSURLBookmarkResolutionOptionsVtKcfc\">init(resolvingAliasFileAt:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV35fileURLWithFileSystemRepresentation11isDirectory10relativeToACSPys4Int8VG_SbACSghtcfc\">init(fileURLWithFileSystemRepresentation:isDirectory:relativeTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV15AsyncHTTPClientE21httpURLWithSocketPath3uriACSgSS_SStcfc\">init(httpURLWithSocketPath:uri:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV32fileReferenceLiteralResourceNameACSS_tcfc\">init(fileReferenceLiteralResourceName:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var urlString: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>urlString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "urlString",
                "key.namelength" : 9,
                "key.nameoffset" : 21061,
                "key.offset" : 21057,
                "key.parsed_declaration" : "var urlString: String",
                "key.parsed_scope.end" : 543,
                "key.parsed_scope.start" : 543,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE22httpsURLWithSocketPath3uriACSgSS_SStcfc9urlStringL_SSvp"
              }
            ],
            "key.typename" : "(URL.Type) -> (String, String) -> URL?",
            "key.typeusr" : "$s22httpsURLWithSocketPath3uri10Foundation3URLVSgSS_SStcD",
            "key.usr" : "s:10Foundation3URLV15AsyncHTTPClientE22httpsURLWithSocketPath3uriACSgSS_SStcfc"
          }
        ],
        "key.typename" : "URL.Type",
        "key.typeusr" : "$s10Foundation3URLVmD",
        "key.usr" : "s:10Foundation3URLV"
      },
      {
        "key.annotated_decl" : "<Declaration>public class HTTPClient<\/Declaration>",
        "key.bodylength" : 4647,
        "key.bodyoffset" : 21313,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class HTTPClient",
        "key.doc.discussion" : [
          {
            "Para" : "Example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO `EventLoopGroup`:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"65\" column=\"14\"><Name>HTTPClient<\/Name><USR>s:15AsyncHTTPClient0B0C<\/USR><Declaration>public class HTTPClient<\/Declaration><CommentParts><Abstract><Para>HTTPClient class provides API for request execution.<\/Para><\/Abstract><Discussion><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    let client = HTTPClient(eventLoopGroupProvider: .createNew)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    client.get(url: \"https:\/\/swift.org\", deadline: .now() + .seconds(1)).whenComplete { result in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        switch result {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .failure(let error):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ process error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .success(let response):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            if let response.status == .ok {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle response]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle remote error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO <codeVoice>EventLoopGroup<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    try client.syncShutdown()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 65,
        "key.doc.name" : "HTTPClient",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTPClient<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4670,
        "key.name" : "HTTPClient",
        "key.namelength" : 10,
        "key.nameoffset" : 21301,
        "key.offset" : 21291,
        "key.parsed_declaration" : "extension HTTPClient",
        "key.parsed_scope.end" : 659,
        "key.parsed_scope.start" : 553,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public final class Task&lt;Response&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.final",
                "key.length" : 5,
                "key.offset" : 21511
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 21504
              }
            ],
            "key.bodylength" : 4419,
            "key.bodyoffset" : 21539,
            "key.doc.column" : 24,
            "key.doc.comment" : "Response execution context. Will be created by the library and could be used for obtaining\n`EventLoopFuture<Response>` of the execution or cancellation of the execution.",
            "key.doc.declaration" : "public final class Task<Response>",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"556\" column=\"24\"><Name>Task<\/Name><USR>s:15AsyncHTTPClient0B0C4TaskC<\/USR><Declaration>public final class Task&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Response execution context. Will be created by the library and could be used for obtaining <codeVoice>EventLoopFuture&lt;Response&gt;<\/codeVoice> of the execution or cancellation of the execution.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 556,
            "key.doc.name" : "Task",
            "key.doc.type" : "Class",
            "key.doclength" : 182,
            "key.docoffset" : 21318,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Task<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\"><decl.generic_type_param.name>Response<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.class>",
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 4442,
            "key.name" : "Task",
            "key.namelength" : 4,
            "key.nameoffset" : 21523,
            "key.offset" : 21517,
            "key.parsed_declaration" : "public final class Task<Response>",
            "key.parsed_scope.end" : 658,
            "key.parsed_scope.start" : 556,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Response<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Response<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 8,
                "key.name" : "Response",
                "key.namelength" : 8,
                "key.nameoffset" : 21528,
                "key.offset" : 21528,
                "key.parsed_declaration" : "public final class Task<Response",
                "key.parsed_scope.end" : 556,
                "key.parsed_scope.start" : 556,
                "key.typename" : "Response.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 21610
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The `EventLoop` the delegate will be executed on.",
                "key.doc.declaration" : "public let eventLoop: EventLoop",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"558\" column=\"20\"><Name>eventLoop<\/Name><USR>s:15AsyncHTTPClient0B0C4TaskC9eventLoop3NIO05EventE0_pvp<\/USR><Declaration>public let eventLoop: EventLoop<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>EventLoop<\/codeVoice> the delegate will be executed on.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 558,
                "key.doc.name" : "eventLoop",
                "key.doc.type" : "Other",
                "key.doclength" : 54,
                "key.docoffset" : 21548,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 24,
                "key.name" : "eventLoop",
                "key.namelength" : 9,
                "key.nameoffset" : 21621,
                "key.offset" : 21617,
                "key.parsed_declaration" : "public let eventLoop: EventLoop",
                "key.parsed_scope.end" : 558,
                "key.parsed_scope.start" : 558,
                "key.typename" : "EventLoop",
                "key.typeusr" : "$s3NIO9EventLoop_pD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC9eventLoop3NIO05EventE0_pvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 39,
                "key.name" : "promise",
                "key.namelength" : 7,
                "key.nameoffset" : 21655,
                "key.offset" : 21651,
                "key.parsed_declaration" : "let promise: EventLoopPromise<Response>",
                "key.parsed_scope.end" : 560,
                "key.parsed_scope.start" : 560,
                "key.typename" : "EventLoopPromise<Response>",
                "key.typeusr" : "$s3NIO16EventLoopPromiseVyxGD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC7promise3NIO16EventLoopPromiseVyxGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var completion: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>completion<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 37,
                "key.name" : "completion",
                "key.namelength" : 10,
                "key.nameoffset" : 21703,
                "key.offset" : 21699,
                "key.parsed_declaration" : "var completion: EventLoopFuture<Void>",
                "key.parsed_scope.end" : 561,
                "key.parsed_scope.start" : 561,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "EventLoopFuture<()>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCyytGD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC10completion3NIO15EventLoopFutureCyytGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var connection: <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>connection<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 27,
                "key.name" : "connection",
                "key.namelength" : 10,
                "key.nameoffset" : 21749,
                "key.offset" : 21745,
                "key.parsed_declaration" : "var connection: Connection?",
                "key.parsed_scope.end" : 562,
                "key.parsed_scope.start" : 562,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "Connection?",
                "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCSgD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC10connectionAA10ConnectionCSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var cancelled: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>cancelled<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 19,
                "key.name" : "cancelled",
                "key.namelength" : 9,
                "key.nameoffset" : 21785,
                "key.offset" : 21781,
                "key.parsed_declaration" : "var cancelled: Bool",
                "key.parsed_scope.end" : 563,
                "key.parsed_scope.start" : 563,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC9cancelledSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let lock: <Type usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>lock<\/decl.name>: <decl.var.type><ref.class usr=\"s:21NIOConcurrencyHelpers4LockC\">Lock<\/ref.class><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 14,
                "key.name" : "lock",
                "key.namelength" : 4,
                "key.nameoffset" : 21813,
                "key.offset" : 21809,
                "key.parsed_declaration" : "let lock: Lock",
                "key.parsed_scope.end" : 564,
                "key.parsed_scope.start" : 564,
                "key.typename" : "Lock",
                "key.typeusr" : "$s21NIOConcurrencyHelpers4LockCD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC4lock21NIOConcurrencyHelpers4LockCvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logger<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "logger",
                "key.namelength" : 6,
                "key.nameoffset" : 21836,
                "key.offset" : 21832,
                "key.parsed_declaration" : "let logger: Logger",
                "key.parsed_scope.end" : 565,
                "key.parsed_scope.start" : 565,
                "key.typename" : "Logger",
                "key.typeusr" : "$s7Logging6LoggerVD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC6logger7Logging6LoggerVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
                "key.bodylength" : 267,
                "key.bodyoffset" : 21984,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 312,
                "key.name" : "init(eventLoop:logger:)",
                "key.namelength" : 42,
                "key.nameoffset" : 21940,
                "key.offset" : 21940,
                "key.parsed_declaration" : "init(eventLoop: EventLoop, logger: Logger)",
                "key.parsed_scope.end" : 574,
                "key.parsed_scope.start" : 567,
                "key.substructure" : [

                ],
                "key.typename" : "<Response> (HTTPClient.Task<Response>.Type) -> (EventLoop, Logger) -> HTTPClient.Task<Response>",
                "key.typeusr" : "$s9eventLoop6logger15AsyncHTTPClient0E0C4TaskCy_xG3NIO05EventB0_p_7Logging6LoggerVtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC9eventLoop6loggerAEy_xG3NIO05EventE0_p_7Logging6LoggerVtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>static func failedTask(eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, error: <Type usr=\"s:s5ErrorP\">Error<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/Type>&gt;<\/Declaration>",
                "key.bodylength" : 141,
                "key.bodyoffset" : 22356,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>failedTask<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 236,
                "key.name" : "failedTask(eventLoop:error:logger:)",
                "key.namelength" : 62,
                "key.nameoffset" : 22274,
                "key.offset" : 22262,
                "key.parsed_declaration" : "static func failedTask(eventLoop: EventLoop, error: Error, logger: Logger) -> Task<Response>",
                "key.parsed_scope.end" : 580,
                "key.parsed_scope.start" : 576,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;Response&gt;<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;Response&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 58,
                    "key.name" : "task",
                    "key.namelength" : 4,
                    "key.nameoffset" : 22373,
                    "key.offset" : 22369,
                    "key.parsed_declaration" : "let task = self.init(eventLoop: eventLoop, logger: logger)",
                    "key.parsed_scope.end" : 577,
                    "key.parsed_scope.start" : 577,
                    "key.typename" : "HTTPClient.Task<Response>",
                    "key.typeusr" : "$s15AsyncHTTPClient0B0C4TaskCy_xGD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC06failedC09eventLoop5error6loggerAEy_xG3NIO05EventF0_p_s5Error_p7Logging6LoggerVtFZ4taskL_AJvp"
                  }
                ],
                "key.typename" : "<Response> (HTTPClient.Task<Response>.Type) -> (EventLoop, Error, Logger) -> HTTPClient.Task<Response>",
                "key.typeusr" : "$s9eventLoop5error6logger15AsyncHTTPClient0F0C4TaskCy_xG3NIO05EventB0_p_s5Error_p7Logging6LoggerVtcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC06failedC09eventLoop5error6loggerAEy_xG3NIO05EventF0_p_s5Error_p7Logging6LoggerVtFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var futureResult: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/Type>&gt; { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 22581
                  }
                ],
                "key.bodylength" : 54,
                "key.bodyoffset" : 22633,
                "key.doc.column" : 20,
                "key.doc.comment" : "`EventLoopFuture` for the response returned by this request.",
                "key.doc.declaration" : "public var futureResult: EventLoopFuture<Response> { get }",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"583\" column=\"20\"><Name>futureResult<\/Name><USR>s:15AsyncHTTPClient0B0C4TaskC12futureResult3NIO15EventLoopFutureCyxGvp<\/USR><Declaration>public var futureResult: EventLoopFuture&lt;Response&gt; { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>EventLoopFuture<\/codeVoice> for the response returned by this request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 583,
                "key.doc.name" : "futureResult",
                "key.doc.type" : "Other",
                "key.doclength" : 65,
                "key.docoffset" : 22508,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>futureResult<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 100,
                "key.name" : "futureResult",
                "key.namelength" : 12,
                "key.nameoffset" : 22592,
                "key.offset" : 22588,
                "key.parsed_declaration" : "public var futureResult: EventLoopFuture<Response>",
                "key.parsed_scope.end" : 585,
                "key.parsed_scope.start" : 583,
                "key.typename" : "EventLoopFuture<Response>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCyxGD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC12futureResult3NIO15EventLoopFutureCyxGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func wait() throws -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 22925
                  }
                ],
                "key.bodylength" : 65,
                "key.bodyoffset" : 22964,
                "key.doc.column" : 21,
                "key.doc.comment" : "Waits for execution of this request to complete.\n\n- returns: The value of the `EventLoopFuture` when it completes.\n- throws: The error value of the `EventLoopFuture` if it errors.",
                "key.doc.declaration" : "public func wait() throws -> Response",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"591\" column=\"21\"><Name>wait()<\/Name><USR>s:15AsyncHTTPClient0B0C4TaskC4waitxyKF<\/USR><Declaration>public func wait() throws -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Waits for execution of this request to complete.<\/Para><\/Abstract><ResultDiscussion><Para>The value of the <codeVoice>EventLoopFuture<\/codeVoice> when it completes.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>The error value of the <codeVoice>EventLoopFuture<\/codeVoice> if it errors.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
                "key.doc.line" : 591,
                "key.doc.name" : "wait()",
                "key.doc.result_discussion" : [
                  {
                    "Para" : "The value of the `EventLoopFuture` when it completes."
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 219,
                "key.docoffset" : 22698,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>wait<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 98,
                "key.name" : "wait()",
                "key.namelength" : 6,
                "key.nameoffset" : 22937,
                "key.offset" : 22932,
                "key.parsed_declaration" : "public func wait() throws -> Response",
                "key.parsed_scope.end" : 593,
                "key.parsed_scope.start" : 591,
                "key.substructure" : [

                ],
                "key.typename" : "<Response> (HTTPClient.Task<Response>) -> () throws -> Response",
                "key.typeusr" : "$sxyKcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC4waitxyKF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func cancel()<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 23083
                  }
                ],
                "key.bodylength" : 364,
                "key.bodyoffset" : 23105,
                "key.doc.column" : 21,
                "key.doc.comment" : "Cancels the request execution.",
                "key.doc.declaration" : "public func cancel()",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"596\" column=\"21\"><Name>cancel()<\/Name><USR>s:15AsyncHTTPClient0B0C4TaskC6cancelyyF<\/USR><Declaration>public func cancel()<\/Declaration><CommentParts><Abstract><Para>Cancels the request execution.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 596,
                "key.doc.name" : "cancel()",
                "key.doc.type" : "Function",
                "key.doclength" : 35,
                "key.docoffset" : 23040,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>cancel<\/decl.name>()<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 380,
                "key.name" : "cancel()",
                "key.namelength" : 8,
                "key.nameoffset" : 23095,
                "key.offset" : 23090,
                "key.parsed_declaration" : "public func cancel()",
                "key.parsed_scope.end" : 606,
                "key.parsed_scope.start" : 596,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let channel: <Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>?<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>channel<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol>?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 263,
                    "key.name" : "channel",
                    "key.namelength" : 7,
                    "key.nameoffset" : 23122,
                    "key.offset" : 23118,
                    "key.parsed_declaration" : "let channel: Channel? = self.lock.withLock {\n    if !self.cancelled {\n        self.cancelled = true\n        return self.connection?.channel\n    } else {\n        return nil\n    }\n}",
                    "key.parsed_scope.end" : 597,
                    "key.parsed_scope.start" : 597,
                    "key.typename" : "Channel?",
                    "key.typeusr" : "$s3NIO7Channel_pSgD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC6cancelyyF7channelL_3NIO7Channel_pSgvp"
                  }
                ],
                "key.typename" : "<Response> (HTTPClient.Task<Response>) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC6cancelyyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>@discardableResult func setConnection(_ connection: <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.discardableResult",
                    "key.length" : 18,
                    "key.offset" : 23480
                  }
                ],
                "key.bodylength" : 293,
                "key.bodyoffset" : 23567,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>setConnection<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>connection<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient10ConnectionC\">Connection<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 354,
                "key.name" : "setConnection(_:)",
                "key.namelength" : 39,
                "key.nameoffset" : 23512,
                "key.offset" : 23507,
                "key.parsed_declaration" : "func setConnection(_ connection: Connection) -> Connection",
                "key.parsed_scope.end" : 617,
                "key.parsed_scope.start" : 609,
                "key.substructure" : [

                ],
                "key.typename" : "<Response> (HTTPClient.Task<Response>) -> (Connection) -> Connection",
                "key.typeusr" : "$sy15AsyncHTTPClient10ConnectionCACcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC13setConnectionyAA0E0CAHF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func succeed&lt;Delegate&gt;(promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/Type>&gt;?, with value: <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/Type>, delegateType: <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC7succeed7promise4with12delegateType7closingy3NIO16EventLoopPromiseVyxGSg_xqd__mSbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp\">Delegate<\/Type>.Type, closing: <Type usr=\"s:Sb\">Bool<\/Type>) where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                "key.bodylength" : 213,
                "key.bodyoffset" : 24204,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>succeed<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC7succeed7promise4with12delegateType7closingy3NIO16EventLoopPromiseVyxGSg_xqd__mSbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>promise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC8Responsexmfp\">Response<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegateType<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC7succeed7promise4with12delegateType7closingy3NIO16EventLoopPromiseVyxGSg_xqd__mSbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp\">Delegate<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>closing<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 547,
                "key.name" : "succeed(promise:with:delegateType:closing:)",
                "key.namelength" : 326,
                "key.nameoffset" : 23876,
                "key.offset" : 23871,
                "key.parsed_declaration" : "func succeed<Delegate: HTTPClientResponseDelegate>(promise: EventLoopPromise<Response>?,\n                                                   with value: Response,\n                                                   delegateType: Delegate.Type,\n                                                   closing: Bool)",
                "key.parsed_scope.end" : 627,
                "key.parsed_scope.start" : 619,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                    "key.elements" : [
                      {
                        "key.kind" : "source.lang.swift.structure.elem.typeref",
                        "key.length" : 26,
                        "key.offset" : 23894
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                    "key.inheritedtypes" : [
                      {
                        "key.name" : "HTTPClientResponseDelegate"
                      }
                    ],
                    "key.kind" : "source.lang.swift.decl.generic_type_param",
                    "key.length" : 36,
                    "key.name" : "Delegate",
                    "key.namelength" : 8,
                    "key.nameoffset" : 23884,
                    "key.offset" : 23884,
                    "key.parsed_declaration" : "func succeed<Delegate: HTTPClientResponseDelegate",
                    "key.parsed_scope.end" : 619,
                    "key.parsed_scope.start" : 619,
                    "key.typename" : "Delegate.Type",
                    "key.typeusr" : "$sqd__mD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC7succeed7promise4with12delegateType7closingy3NIO16EventLoopPromiseVyxGSg_xqd__mSbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp"
                  }
                ],
                "key.typename" : "<Response, Delegate where Delegate : HTTPClientResponseDelegate> (HTTPClient.Task<Response>) -> (EventLoopPromise<Response>?, Response, Delegate.Type, Bool) -> ()",
                "key.typeusr" : "$s7promise4with12delegateType7closingy3NIO16EventLoopPromiseVyxGSg_xqd__mSbtc15AsyncHTTPClient0K16ResponseDelegateRd__luD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC7succeed7promise4with12delegateType7closingy3NIO16EventLoopPromiseVyxGSg_xqd__mSbtAA0B16ResponseDelegateRd__lF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func fail&lt;Delegate&gt;(with error: <Type usr=\"s:s5ErrorP\">Error<\/Type>, delegateType: <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC4fail4with12delegateTypeys5Error_p_qd__mtAA0B16ResponseDelegateRd__lF0J0L_qd__mfp\">Delegate<\/Type>.Type) where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                "key.bodylength" : 334,
                "key.bodyoffset" : 24581,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fail<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC4fail4with12delegateTypeys5Error_p_qd__mtAA0B16ResponseDelegateRd__lF0J0L_qd__mfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegateType<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC4fail4with12delegateTypeys5Error_p_qd__mtAA0B16ResponseDelegateRd__lF0J0L_qd__mfp\">Delegate<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 488,
                "key.name" : "fail(with:delegateType:)",
                "key.namelength" : 146,
                "key.nameoffset" : 24433,
                "key.offset" : 24428,
                "key.parsed_declaration" : "func fail<Delegate: HTTPClientResponseDelegate>(with error: Error,\n                                                delegateType: Delegate.Type)",
                "key.parsed_scope.end" : 638,
                "key.parsed_scope.start" : 629,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                    "key.elements" : [
                      {
                        "key.kind" : "source.lang.swift.structure.elem.typeref",
                        "key.length" : 26,
                        "key.offset" : 24448
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                    "key.inheritedtypes" : [
                      {
                        "key.name" : "HTTPClientResponseDelegate"
                      }
                    ],
                    "key.kind" : "source.lang.swift.decl.generic_type_param",
                    "key.length" : 36,
                    "key.name" : "Delegate",
                    "key.namelength" : 8,
                    "key.nameoffset" : 24438,
                    "key.offset" : 24438,
                    "key.parsed_declaration" : "func fail<Delegate: HTTPClientResponseDelegate",
                    "key.parsed_scope.end" : 629,
                    "key.parsed_scope.start" : 629,
                    "key.typename" : "Delegate.Type",
                    "key.typeusr" : "$sqd__mD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC4fail4with12delegateTypeys5Error_p_qd__mtAA0B16ResponseDelegateRd__lF0J0L_qd__mfp"
                  }
                ],
                "key.typename" : "<Response, Delegate where Delegate : HTTPClientResponseDelegate> (HTTPClient.Task<Response>) -> (Error, Delegate.Type) -> ()",
                "key.typeusr" : "$s4with12delegateTypeys5Error_p_qd__mtc15AsyncHTTPClient0F16ResponseDelegateRd__luD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC4fail4with12delegateTypeys5Error_p_qd__mtAA0B16ResponseDelegateRd__lF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func releaseAssociatedConnection&lt;Delegate&gt;(delegateType: <Type usr=\"s:15AsyncHTTPClient0B0C4TaskC27releaseAssociatedConnection12delegateType7closing3NIO15EventLoopFutureCyytGqd__m_SbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp\">Delegate<\/Type>.Type, closing: <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt; where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                "key.bodylength" : 806,
                "key.bodyoffset" : 25146,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>releaseAssociatedConnection<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC27releaseAssociatedConnection12delegateType7closing3NIO15EventLoopFutureCyytGqd__m_SbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>delegateType<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient0B0C4TaskC27releaseAssociatedConnection12delegateType7closing3NIO15EventLoopFutureCyytGqd__m_SbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp\">Delegate<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>closing<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 1027,
                "key.name" : "releaseAssociatedConnection(delegateType:closing:)",
                "key.namelength" : 188,
                "key.nameoffset" : 24931,
                "key.offset" : 24926,
                "key.parsed_declaration" : "func releaseAssociatedConnection<Delegate: HTTPClientResponseDelegate>(delegateType: Delegate.Type,\n                                                                       closing: Bool) -> EventLoopFuture<Void>",
                "key.parsed_scope.end" : 657,
                "key.parsed_scope.start" : 640,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
                    "key.elements" : [
                      {
                        "key.kind" : "source.lang.swift.structure.elem.typeref",
                        "key.length" : 26,
                        "key.offset" : 24969
                      }
                    ],
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                    "key.inheritedtypes" : [
                      {
                        "key.name" : "HTTPClientResponseDelegate"
                      }
                    ],
                    "key.kind" : "source.lang.swift.decl.generic_type_param",
                    "key.length" : 36,
                    "key.name" : "Delegate",
                    "key.namelength" : 8,
                    "key.nameoffset" : 24959,
                    "key.offset" : 24959,
                    "key.parsed_declaration" : "func releaseAssociatedConnection<Delegate: HTTPClientResponseDelegate",
                    "key.parsed_scope.end" : 640,
                    "key.parsed_scope.start" : 640,
                    "key.typename" : "Delegate.Type",
                    "key.typeusr" : "$sqd__mD",
                    "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC27releaseAssociatedConnection12delegateType7closing3NIO15EventLoopFutureCyytGqd__m_SbtAA0B16ResponseDelegateRd__lF0O0L_qd__mfp"
                  }
                ],
                "key.typename" : "<Response, Delegate where Delegate : HTTPClientResponseDelegate> (HTTPClient.Task<Response>) -> (Delegate.Type, Bool) -> EventLoopFuture<()>",
                "key.typeusr" : "$s12delegateType7closing3NIO15EventLoopFutureCyytGqd__m_Sbtc15AsyncHTTPClient0I16ResponseDelegateRd__luD",
                "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC27releaseAssociatedConnection12delegateType7closing3NIO15EventLoopFutureCyytGqd__m_SbtAA0B16ResponseDelegateRd__lF"
              }
            ],
            "key.typename" : "HTTPClient.Task<Response>.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C4TaskCy_xGmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C4TaskC"
          }
        ],
        "key.typename" : "HTTPClient.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0CmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>internal struct TaskCancelEvent<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 25963
          }
        ],
        "key.bodylength" : 0,
        "key.bodyoffset" : 25996,
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>TaskCancelEvent<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 25,
        "key.name" : "TaskCancelEvent",
        "key.namelength" : 15,
        "key.nameoffset" : 25979,
        "key.offset" : 25972,
        "key.parsed_declaration" : "internal struct TaskCancelEvent",
        "key.parsed_scope.end" : 661,
        "key.parsed_scope.start" : 661,
        "key.typename" : "TaskCancelEvent.Type",
        "key.typeusr" : "$s15AsyncHTTPClient15TaskCancelEventVmD",
        "key.usr" : "s:15AsyncHTTPClient15TaskCancelEventV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 19,
        "key.name" : "MARK: - TaskHandler",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 26002
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>internal class TaskHandler&lt;Delegate&gt; : <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type> where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 26023
          }
        ],
        "key.bodylength" : 1367,
        "key.bodyoffset" : 26114,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 26089
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TaskHandler<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "RemovableChannelHandler"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1450,
        "key.name" : "TaskHandler",
        "key.namelength" : 11,
        "key.nameoffset" : 26038,
        "key.offset" : 26032,
        "key.parsed_declaration" : "internal class TaskHandler<Delegate: HTTPClientResponseDelegate>: RemovableChannelHandler",
        "key.parsed_scope.end" : 709,
        "key.parsed_scope.start" : 665,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 26,
                "key.offset" : 26060
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "HTTPClientResponseDelegate"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 36,
            "key.name" : "Delegate",
            "key.namelength" : 8,
            "key.nameoffset" : 26050,
            "key.offset" : 26050,
            "key.parsed_declaration" : "internal class TaskHandler<Delegate: HTTPClientResponseDelegate",
            "key.parsed_scope.end" : 665,
            "key.parsed_scope.start" : 665,
            "key.typename" : "Delegate.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/Type>&lt;Delegate&gt;.State<\/Declaration>",
            "key.bodylength" : 170,
            "key.bodyoffset" : 26131,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/ref.class>&lt;Delegate&gt;.<decl.name>State<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 183,
            "key.name" : "State",
            "key.namelength" : 5,
            "key.nameoffset" : 26124,
            "key.offset" : 26119,
            "key.parsed_declaration" : "enum State",
            "key.parsed_scope.end" : 674,
            "key.parsed_scope.start" : 666,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 26140,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case idle<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>idle<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "idle",
                    "key.namelength" : 4,
                    "key.nameoffset" : 26145,
                    "key.offset" : 26145,
                    "key.parsed_declaration" : "case idle",
                    "key.parsed_scope.end" : 667,
                    "key.parsed_scope.start" : 667,
                    "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.State.Type) -> TaskHandler<Delegate>.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient11TaskHandlerC5StateOyx_GAFmcAA0B16ResponseDelegateRzluD",
                    "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO4idleyAEyx_GAGmAA0B16ResponseDelegateRzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 13,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 26158,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case bodySent<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>bodySent<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 8,
                    "key.name" : "bodySent",
                    "key.namelength" : 8,
                    "key.nameoffset" : 26163,
                    "key.offset" : 26163,
                    "key.parsed_declaration" : "case bodySent",
                    "key.parsed_scope.end" : 668,
                    "key.parsed_scope.start" : 668,
                    "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.State.Type) -> TaskHandler<Delegate>.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient11TaskHandlerC5StateOyx_GAFmcAA0B16ResponseDelegateRzluD",
                    "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO8bodySentyAEyx_GAGmAA0B16ResponseDelegateRzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 26180,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case sent<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>sent<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "sent",
                    "key.namelength" : 4,
                    "key.nameoffset" : 26185,
                    "key.offset" : 26185,
                    "key.parsed_declaration" : "case sent",
                    "key.parsed_scope.end" : 669,
                    "key.parsed_scope.start" : 669,
                    "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.State.Type) -> TaskHandler<Delegate>.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient11TaskHandlerC5StateOyx_GAFmcAA0B16ResponseDelegateRzluD",
                    "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO4sentyAEyx_GAGmAA0B16ResponseDelegateRzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 26198,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case head<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>head<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "head",
                    "key.namelength" : 4,
                    "key.nameoffset" : 26203,
                    "key.offset" : 26203,
                    "key.parsed_declaration" : "case head",
                    "key.parsed_scope.end" : 670,
                    "key.parsed_scope.start" : 670,
                    "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.State.Type) -> TaskHandler<Delegate>.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient11TaskHandlerC5StateOyx_GAFmcAA0B16ResponseDelegateRzluD",
                    "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO4headyAEyx_GAGmAA0B16ResponseDelegateRzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 38,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 26216,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case redirected(<Type usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/Type>, <Type usr=\"s:10Foundation3URLV\">URL<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>redirected<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP116HTTPResponseHeadV\">HTTPResponseHead<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 33,
                    "key.name" : "redirected(_:_:)",
                    "key.namelength" : 33,
                    "key.nameoffset" : 26221,
                    "key.offset" : 26221,
                    "key.parsed_declaration" : "case redirected(HTTPResponseHead, URL)",
                    "key.parsed_scope.end" : 671,
                    "key.parsed_scope.start" : 671,
                    "key.substructure" : [

                    ],
                    "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.State.Type) -> (HTTPResponseHead, URL) -> TaskHandler<Delegate>.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient11TaskHandlerC5StateOyx_G8NIOHTTP116HTTPResponseHeadV_10Foundation3URLVtcAFmcAA0B16ResponseDelegateRzluD",
                    "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO10redirectedyAEyx_G8NIOHTTP116HTTPResponseHeadV_10Foundation3URLVtcAGmAA0B16ResponseDelegateRzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 26263,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case body<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>body<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "body",
                    "key.namelength" : 4,
                    "key.nameoffset" : 26268,
                    "key.offset" : 26268,
                    "key.parsed_declaration" : "case body",
                    "key.parsed_scope.end" : 672,
                    "key.parsed_scope.start" : 672,
                    "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.State.Type) -> TaskHandler<Delegate>.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient11TaskHandlerC5StateOyx_GAFmcAA0B16ResponseDelegateRzluD",
                    "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO4bodyyAEyx_GAGmAA0B16ResponseDelegateRzlF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 15,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 26281,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case endOrError<\/Declaration>",
                    "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>endOrError<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 10,
                    "key.name" : "endOrError",
                    "key.namelength" : 10,
                    "key.nameoffset" : 26286,
                    "key.offset" : 26286,
                    "key.parsed_declaration" : "case endOrError",
                    "key.parsed_scope.end" : 673,
                    "key.parsed_scope.start" : 673,
                    "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.State.Type) -> TaskHandler<Delegate>.State",
                    "key.typeusr" : "$sy15AsyncHTTPClient11TaskHandlerC5StateOyx_GAFmcAA0B16ResponseDelegateRzluD",
                    "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO10endOrErroryAEyx_GAGmAA0B16ResponseDelegateRzlF"
                  }
                ]
              }
            ],
            "key.typename" : "TaskHandler<Delegate>.State.Type",
            "key.typeusr" : "$s15AsyncHTTPClient11TaskHandlerC5StateOyx_GmD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5StateO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "task",
            "key.namelength" : 4,
            "key.nameoffset" : 26312,
            "key.offset" : 26308,
            "key.parsed_declaration" : "let task: HTTPClient.Task<Delegate.Response>",
            "key.parsed_scope.end" : 676,
            "key.parsed_scope.start" : 676,
            "key.typename" : "HTTPClient.Task<Delegate.Response>",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C4TaskCy_8ResponseAA0bD8DelegatePQzGD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC4taskAA0B0C0C0Cy_8ResponseQzGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let delegate: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>delegate<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "delegate",
            "key.namelength" : 8,
            "key.nameoffset" : 26361,
            "key.offset" : 26357,
            "key.parsed_declaration" : "let delegate: Delegate",
            "key.parsed_scope.end" : 677,
            "key.parsed_scope.start" : 677,
            "key.typename" : "Delegate",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC8delegatexvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let redirectHandler: <Type usr=\"s:15AsyncHTTPClient15RedirectHandlerV\">RedirectHandler<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;?<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>redirectHandler<\/decl.name>: <decl.var.type><ref.struct usr=\"s:15AsyncHTTPClient15RedirectHandlerV\">RedirectHandler<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 56,
            "key.name" : "redirectHandler",
            "key.namelength" : 15,
            "key.nameoffset" : 26388,
            "key.offset" : 26384,
            "key.parsed_declaration" : "let redirectHandler: RedirectHandler<Delegate.Response>?",
            "key.parsed_scope.end" : 678,
            "key.parsed_scope.start" : 678,
            "key.typename" : "RedirectHandler<Delegate.Response>?",
            "key.typeusr" : "$s15AsyncHTTPClient15RedirectHandlerVy8ResponseAA0bE8DelegatePQzGSgD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC08redirectD0AA08RedirectD0Vy8ResponseQzGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ignoreUncleanSSLShutdown<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.name" : "ignoreUncleanSSLShutdown",
            "key.namelength" : 24,
            "key.nameoffset" : 26449,
            "key.offset" : 26445,
            "key.parsed_declaration" : "let ignoreUncleanSSLShutdown: Bool",
            "key.parsed_scope.end" : 679,
            "key.parsed_scope.start" : 679,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC24ignoreUncleanSSLShutdownSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logger<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "logger",
            "key.namelength" : 6,
            "key.nameoffset" : 26488,
            "key.offset" : 26484,
            "key.parsed_declaration" : "let logger: Logger",
            "key.parsed_scope.end" : 680,
            "key.parsed_scope.start" : 680,
            "key.typename" : "Logger",
            "key.typeusr" : "$s7Logging6LoggerVD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC6logger7Logging6LoggerVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var state: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC5StateO\">State<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>state<\/decl.name>: <decl.var.type><ref.enum usr=\"s:15AsyncHTTPClient11TaskHandlerC5StateO\">State<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "state",
            "key.namelength" : 5,
            "key.nameoffset" : 26599,
            "key.offset" : 26595,
            "key.parsed_declaration" : "var state: State = .idle",
            "key.parsed_scope.end" : 682,
            "key.parsed_scope.start" : 682,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "TaskHandler<Delegate>.State",
            "key.typeusr" : "$s15AsyncHTTPClient11TaskHandlerC5StateOyx_GD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5stateAC5StateOyx_Gvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var expectedBodyLength: <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>expectedBodyLength<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "expectedBodyLength",
            "key.namelength" : 18,
            "key.nameoffset" : 26628,
            "key.offset" : 26624,
            "key.parsed_declaration" : "var expectedBodyLength: Int?",
            "key.parsed_scope.end" : 683,
            "key.parsed_scope.start" : 683,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Int?",
            "key.typeusr" : "$sSiSgD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC18expectedBodyLengthSiSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var actualBodyLength: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>actualBodyLength<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "actualBodyLength",
            "key.namelength" : 16,
            "key.nameoffset" : 26661,
            "key.offset" : 26657,
            "key.parsed_declaration" : "var actualBodyLength: Int = 0",
            "key.parsed_scope.end" : 684,
            "key.parsed_scope.start" : 684,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC16actualBodyLengthSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var pendingRead: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pendingRead<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.name" : "pendingRead",
            "key.namelength" : 11,
            "key.nameoffset" : 26695,
            "key.offset" : 26691,
            "key.parsed_declaration" : "var pendingRead = false",
            "key.parsed_scope.end" : 685,
            "key.parsed_scope.start" : 685,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC11pendingReadSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var mayRead: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>mayRead<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "mayRead",
            "key.namelength" : 7,
            "key.nameoffset" : 26723,
            "key.offset" : 26719,
            "key.parsed_declaration" : "var mayRead = true",
            "key.parsed_scope.end" : 686,
            "key.parsed_scope.start" : 686,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC7mayReadSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var closing: <Type usr=\"s:Sb\">Bool<\/Type> { get set }<\/Declaration>",
            "key.bodylength" : 195,
            "key.bodyoffset" : 26763,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>closing<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 217,
            "key.name" : "closing",
            "key.namelength" : 7,
            "key.nameoffset" : 26746,
            "key.offset" : 26742,
            "key.parsed_declaration" : "var closing = false",
            "key.parsed_scope.end" : 692,
            "key.parsed_scope.start" : 687,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC7closingSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let kind: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>kind<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct>.<ref.enum usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "kind",
            "key.namelength" : 4,
            "key.nameoffset" : 26969,
            "key.offset" : 26965,
            "key.parsed_declaration" : "let kind: HTTPClient.Request.Kind",
            "key.parsed_scope.end" : 694,
            "key.parsed_scope.start" : 694,
            "key.typename" : "HTTPClient.Request.Kind",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestV4KindOD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC4kindAA0B0C7RequestV4KindOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, kind: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/Type>, delegate: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>, redirectHandler: <Type usr=\"s:15AsyncHTTPClient15RedirectHandlerV\">RedirectHandler<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;?, ignoreUncleanSSLShutdown: <Type usr=\"s:Sb\">Bool<\/Type>, logger: <Type usr=\"s:7Logging6LoggerV\">Logger<\/Type>)<\/Declaration>",
            "key.bodylength" : 229,
            "key.bodyoffset" : 27250,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>kind<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct>.<ref.enum usr=\"s:15AsyncHTTPClient0B0C7RequestV4KindO\">Kind<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delegate<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>redirectHandler<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:15AsyncHTTPClient15RedirectHandlerV\">RedirectHandler<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ignoreUncleanSSLShutdown<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logger<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Logging6LoggerV\">Logger<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 476,
            "key.name" : "init(task:kind:delegate:redirectHandler:ignoreUncleanSSLShutdown:logger:)",
            "key.namelength" : 244,
            "key.nameoffset" : 27004,
            "key.offset" : 27004,
            "key.parsed_declaration" : "init(task: HTTPClient.Task<Delegate.Response>,\n     kind: HTTPClient.Request.Kind,\n     delegate: Delegate,\n     redirectHandler: RedirectHandler<Delegate.Response>?,\n     ignoreUncleanSSLShutdown: Bool,\n     logger: Logger)",
            "key.parsed_scope.end" : 708,
            "key.parsed_scope.start" : 696,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>.Type) -> (HTTPClient.Task<Delegate.Response>, HTTPClient.Request.Kind, Delegate, RedirectHandler<Delegate.Response>?, Bool, Logger) -> TaskHandler<Delegate>",
            "key.typeusr" : "$s4task4kind8delegate15redirectHandler24ignoreUncleanSSLShutdown6logger15AsyncHTTPClient04TaskE0CyxGAG0K0C0L0Cy_8ResponseQzG_AL7RequestV4KindOxAG08RedirectE0VyAPGSgSb7Logging6LoggerVtcD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC4task4kind8delegate08redirectD024ignoreUncleanSSLShutdown6loggerACyxGAA0B0C0C0Cy_8ResponseQzG_AL7RequestV4KindOxAA08RedirectD0VyAPGSgSb7Logging6LoggerVtcfc"
          }
        ],
        "key.typename" : "TaskHandler<Delegate>.Type",
        "key.typeusr" : "$s15AsyncHTTPClient11TaskHandlerCyxGmD",
        "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 23,
        "key.name" : "MARK: Delegate Callouts",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 27487
      },
      {
        "key.annotated_decl" : "<Declaration>internal class TaskHandler&lt;Delegate&gt; : <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type> where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
        "key.bodylength" : 2907,
        "key.bodyoffset" : 27535,
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TaskHandler<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2931,
        "key.name" : "TaskHandler",
        "key.namelength" : 11,
        "key.nameoffset" : 27522,
        "key.offset" : 27512,
        "key.parsed_declaration" : "extension TaskHandler",
        "key.parsed_scope.end" : 787,
        "key.parsed_scope.start" : 713,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func failTaskAndNotifyDelegate&lt;Err&gt;(error: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF3ErrL_qd__mfp\">Err<\/Type>, _ body: @escaping (<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF3ErrL_qd__mfp\">Err<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) where Err : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.bodylength" : 312,
            "key.bodyoffset" : 27712,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>failTaskAndNotifyDelegate<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF3ErrL_qd__mfp\"><decl.generic_type_param.name>Err<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF3ErrL_qd__mfp\">Err<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF3ErrL_qd__mfp\">Err<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Err : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 485,
            "key.name" : "failTaskAndNotifyDelegate(error:_:)",
            "key.namelength" : 165,
            "key.nameoffset" : 27545,
            "key.offset" : 27540,
            "key.parsed_declaration" : "func failTaskAndNotifyDelegate<Err: Error>(error: Err,\n                                           _ body: @escaping (HTTPClient.Task<Delegate.Response>, Err) -> Void)",
            "key.parsed_scope.end" : 728,
            "key.parsed_scope.start" : 714,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Err : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 5,
                    "key.offset" : 27576
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Err<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Error"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 10,
                "key.name" : "Err",
                "key.namelength" : 3,
                "key.nameoffset" : 27571,
                "key.offset" : 27571,
                "key.parsed_declaration" : "func failTaskAndNotifyDelegate<Err: Error",
                "key.parsed_scope.end" : 714,
                "key.parsed_scope.start" : 714,
                "key.typename" : "Err.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF3ErrL_qd__mfp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func doIt()<\/Declaration>",
                "key.bodylength" : 113,
                "key.bodyoffset" : 27734,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>doIt<\/decl.name>()<\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 127,
                "key.name" : "doIt()",
                "key.namelength" : 6,
                "key.nameoffset" : 27726,
                "key.offset" : 27721,
                "key.parsed_declaration" : "func doIt()",
                "key.parsed_scope.end" : 719,
                "key.parsed_scope.start" : 716,
                "key.substructure" : [

                ],
                "key.typename" : "<Delegate, Err where Delegate : HTTPClientResponseDelegate, Err : Error> () -> ()",
                "key.typeusr" : "$syyc15AsyncHTTPClient0B16ResponseDelegateRzs5ErrorRd__r__luD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF4doItL_yyAA0bjH0RzsAMRd__r__lF"
              }
            ],
            "key.typename" : "<Delegate, Err where Delegate : HTTPClientResponseDelegate, Err : Error> (TaskHandler<Delegate>) -> (Err, @escaping (HTTPClient.Task<Delegate.Response>, Err) -> ()) -> ()",
            "key.typeusr" : "$s5error_yqd___y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_qd__tctcs5ErrorRd__luD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC04failC17AndNotifyDelegate5error_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tcts5ErrorRd__lF"
          },
          {
            "key.annotated_decl" : "<Declaration>func callOutToDelegateFireAndForget(_ body: @escaping (<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 92,
            "key.bodyoffset" : 28132,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>callOutToDelegateFireAndForget<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 194,
            "key.name" : "callOutToDelegateFireAndForget(_:)",
            "key.namelength" : 94,
            "key.nameoffset" : 28036,
            "key.offset" : 28031,
            "key.parsed_declaration" : "func callOutToDelegateFireAndForget(_ body: @escaping (HTTPClient.Task<Delegate.Response>) -> Void)",
            "key.parsed_scope.end" : 732,
            "key.parsed_scope.start" : 730,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF\">callOutToDelegateFireAndForget(value:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (@escaping (HTTPClient.Task<Delegate.Response>) -> ()) -> ()",
            "key.typeusr" : "$syyy15AsyncHTTPClient0B0C4TaskCy_8ResponseQzGccD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForgetyyyAA0B0C0C0Cy_8ResponseQzGcF"
          },
          {
            "key.annotated_decl" : "<Declaration>func callOutToDelegateFireAndForget&lt;Value&gt;(value: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/Type>, _ body: @escaping (<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 207,
            "key.bodyoffset" : 28407,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>callOutToDelegateFireAndForget<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 384,
            "key.name" : "callOutToDelegateFireAndForget(value:_:)",
            "key.namelength" : 169,
            "key.nameoffset" : 28236,
            "key.offset" : 28231,
            "key.parsed_declaration" : "func callOutToDelegateFireAndForget<Value>(value: Value,\n                                           _ body: @escaping (HTTPClient.Task<Delegate.Response>, Value) -> Void)",
            "key.parsed_scope.end" : 743,
            "key.parsed_scope.start" : 734,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForgetyyyAA0B0C0C0Cy_8ResponseQzGcF\">callOutToDelegateFireAndForget(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Value<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 5,
                "key.name" : "Value",
                "key.namelength" : 5,
                "key.nameoffset" : 28267,
                "key.offset" : 28267,
                "key.parsed_declaration" : "func callOutToDelegateFireAndForget<Value",
                "key.parsed_scope.end" : 734,
                "key.parsed_scope.start" : 734,
                "key.typename" : "Value.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp"
              }
            ],
            "key.typename" : "<Delegate, Value where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (Value, @escaping (HTTPClient.Task<Delegate.Response>, Value) -> ()) -> ()",
            "key.typeusr" : "$s5value_yqd___y15AsyncHTTPClient0C0C4TaskCy_8ResponseQzG_qd__tctcluD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC30callOutToDelegateFireAndForget5value_yqd___yAA0B0C0C0Cy_8ResponseQzG_qd__tctlF"
          },
          {
            "key.annotated_decl" : "<Declaration>func callOutToDelegate&lt;Value&gt;(value: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/Type>, channelEventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, _ body: @escaping (<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;, <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 287,
            "key.bodyoffset" : 28876,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>callOutToDelegate<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>channelEventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 543,
            "key.name" : "callOutToDelegate(value:channelEventLoop:_:)",
            "key.namelength" : 223,
            "key.nameoffset" : 28626,
            "key.offset" : 28621,
            "key.parsed_declaration" : "func callOutToDelegate<Value>(value: Value,\n                              channelEventLoop: EventLoop,\n                              _ body: @escaping (HTTPClient.Task<Delegate.Response>, Value) -> EventLoopFuture<Void>) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 755,
            "key.parsed_scope.start" : 745,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF\">callOutToDelegate(promise:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF\">callOutToDelegate(channelEventLoop:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Value<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 5,
                "key.name" : "Value",
                "key.namelength" : 5,
                "key.nameoffset" : 28644,
                "key.offset" : 28644,
                "key.parsed_declaration" : "func callOutToDelegate<Value",
                "key.parsed_scope.end" : 745,
                "key.parsed_scope.start" : 745,
                "key.typename" : "Value.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF5ValueL_qd__mfp"
              }
            ],
            "key.typename" : "<Delegate, Value where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (Value, EventLoop, @escaping (HTTPClient.Task<Delegate.Response>, Value) -> EventLoopFuture<()>) -> EventLoopFuture<()>",
            "key.typeusr" : "$s5value16channelEventLoop_3NIO0cD6FutureCyytGqd___AC0cD0_pAF15AsyncHTTPClient0H0C4TaskCy_8ResponseQzG_qd__tctcluD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF"
          },
          {
            "key.annotated_decl" : "<Declaration>func callOutToDelegate&lt;Response&gt;(promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/Type>&gt;? = nil, _ body: @escaping (<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;) throws -&gt; <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/Type>) where Response == Delegate.Response<\/Declaration>",
            "key.bodylength" : 631,
            "key.bodyoffset" : 29396,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>callOutToDelegate<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\"><decl.generic_type_param.name>Response<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>promise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Response == Delegate.Response<\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 858,
            "key.name" : "callOutToDelegate(promise:_:)",
            "key.namelength" : 183,
            "key.nameoffset" : 29175,
            "key.offset" : 29170,
            "key.parsed_declaration" : "func callOutToDelegate<Response>(promise: EventLoopPromise<Response>? = nil,\n                                 _ body: @escaping (HTTPClient.Task<Delegate.Response>) throws -> Response) where Response == Delegate.Response",
            "key.parsed_scope.end" : 779,
            "key.parsed_scope.start" : 757,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF\">callOutToDelegate(value:channelEventLoop:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF\">callOutToDelegate(channelEventLoop:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Response<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Response<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 8,
                "key.name" : "Response",
                "key.namelength" : 8,
                "key.nameoffset" : 29193,
                "key.offset" : 29193,
                "key.parsed_declaration" : "func callOutToDelegate<Response",
                "key.parsed_scope.end" : 757,
                "key.parsed_scope.start" : 757,
                "key.typename" : "Response.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func doIt()<\/Declaration>",
                "key.bodylength" : 405,
                "key.bodyoffset" : 29418,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>doIt<\/decl.name>()<\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 419,
                "key.name" : "doIt()",
                "key.namelength" : 6,
                "key.nameoffset" : 29410,
                "key.offset" : 29405,
                "key.parsed_declaration" : "func doIt()",
                "key.parsed_scope.end" : 770,
                "key.parsed_scope.start" : 759,
                "key.substructure" : [

                ],
                "key.typename" : "<Delegate, Response where Delegate : HTTPClientResponseDelegate, Response == Delegate.Response> () -> ()",
                "key.typeusr" : "$syyc15AsyncHTTPClient0B16ResponseDelegateRz0C0QzRsd__r__luD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF4doItL_yyAA0bnH0RzAQRsd__r__lF"
              }
            ],
            "key.typename" : "<Delegate, Response where Delegate : HTTPClientResponseDelegate, Response == Delegate.Response> (TaskHandler<Delegate>) -> (EventLoopPromise<Response>?, @escaping (HTTPClient.Task<Delegate.Response>) throws -> Response) -> ()",
            "key.typeusr" : "$s7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__15AsyncHTTPClient0G0C4TaskCy_qd__GKctc8ResponseQzRsd__luD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF"
          },
          {
            "key.annotated_decl" : "<Declaration>func callOutToDelegate&lt;Response&gt;(channelEventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, _ body: @escaping (<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/Type>&gt;) throws -&gt; <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/Type>&gt; where Response == Delegate.Response<\/Declaration>",
            "key.bodylength" : 166,
            "key.bodyoffset" : 30274,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>callOutToDelegate<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\"><decl.generic_type_param.name>Response<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>channelEventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\">Delegate<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa\">Response<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp\">Response<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Response == Delegate.Response<\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 407,
            "key.name" : "callOutToDelegate(channelEventLoop:_:)",
            "key.namelength" : 168,
            "key.nameoffset" : 30039,
            "key.offset" : 30034,
            "key.parsed_declaration" : "func callOutToDelegate<Response>(channelEventLoop: EventLoop,\n                                 _ body: @escaping (HTTPClient.Task<Delegate.Response>) throws -> Response) -> EventLoopFuture<Response> where Response == Delegate.Response",
            "key.parsed_scope.end" : 786,
            "key.parsed_scope.start" : 781,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate5value16channelEventLoop_3NIO0kL6FutureCyytGqd___AG0kL0_pAjA0B0C0C0Cy_8ResponseQzG_qd__tctlF\">callOutToDelegate(value:channelEventLoop:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate7promise_y3NIO16EventLoopPromiseVyqd__GSg_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF\">callOutToDelegate(promise:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Response<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Response<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 8,
                "key.name" : "Response",
                "key.namelength" : 8,
                "key.nameoffset" : 30057,
                "key.offset" : 30057,
                "key.parsed_declaration" : "func callOutToDelegate<Response",
                "key.parsed_scope.end" : 781,
                "key.parsed_scope.start" : 781,
                "key.typename" : "Response.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lFAPL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;Response&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;Response&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 61,
                "key.name" : "promise",
                "key.namelength" : 7,
                "key.nameoffset" : 30287,
                "key.offset" : 30283,
                "key.parsed_declaration" : "let promise = channelEventLoop.makePromise(of: Response.self)",
                "key.parsed_scope.end" : 783,
                "key.parsed_scope.start" : 783,
                "key.typename" : "EventLoopPromise<Response>",
                "key.typeusr" : "$s3NIO16EventLoopPromiseVyqd__GD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF7promiseL_AF0jK7PromiseVyqd__Gvp"
              }
            ],
            "key.typename" : "<Delegate, Response where Delegate : HTTPClientResponseDelegate, Response == Delegate.Response> (TaskHandler<Delegate>) -> (EventLoop, @escaping (HTTPClient.Task<Delegate.Response>) throws -> Response) -> EventLoopFuture<Response>",
            "key.typeusr" : "$s16channelEventLoop_3NIO0bC6FutureCyqd__GAB0bC0_p_qd__15AsyncHTTPClient0G0C4TaskCy_qd__GKctc8ResponseQzRsd__luD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC17callOutToDelegate16channelEventLoop_3NIO0jK6FutureCyqd__GAF0jK0_p_qd__AA0B0C0C0Cy_qd__GKct8ResponseQzRsd__lF"
          }
        ],
        "key.typename" : "TaskHandler<Delegate>.Type",
        "key.typeusr" : "$s15AsyncHTTPClient11TaskHandlerCyxGmD",
        "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 35,
        "key.name" : "MARK: ChannelHandler implementation",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 30448
      },
      {
        "key.annotated_decl" : "<Declaration>internal class TaskHandler&lt;Delegate&gt; : <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type> where Delegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
        "key.bodylength" : 10510,
        "key.bodyoffset" : 30530,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 20,
            "key.offset" : 30508
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TaskHandler<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient11TaskHandlerC8Delegatexmfp\"><decl.generic_type_param.name>Delegate<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Delegate : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ChannelDuplexHandler"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 10556,
        "key.name" : "TaskHandler",
        "key.namelength" : 11,
        "key.nameoffset" : 30495,
        "key.offset" : 30485,
        "key.parsed_declaration" : "extension TaskHandler: ChannelDuplexHandler",
        "key.parsed_scope.end" : 1054,
        "key.parsed_scope.start" : 791,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>typealias OutboundIn = <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype OutboundIn",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"72\" column=\"20\"><Name>OutboundIn<\/Name><USR>s:3NIO22ChannelOutboundHandlerP0C2InQa<\/USR><Declaration>associatedtype OutboundIn<\/Declaration><CommentParts><Abstract><Para>The type of the outbound data which is wrapped in <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelOutboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 72,
            "key.doc.name" : "OutboundIn",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>OutboundIn<\/decl.name> = <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 41,
            "key.name" : "OutboundIn",
            "key.namelength" : 10,
            "key.nameoffset" : 30545,
            "key.offset" : 30535,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22ChannelOutboundHandlerP0C2InQa"
              }
            ],
            "key.parsed_declaration" : "typealias OutboundIn = HTTPClient.Request",
            "key.parsed_scope.end" : 792,
            "key.parsed_scope.start" : 792,
            "key.typename" : "HTTPClient.Request.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestVmD",
            "key.usr" : "s:3NIO22ChannelOutboundHandlerP0C2InQa"
          },
          {
            "key.annotated_decl" : "<Declaration>typealias InboundIn = <Type usr=\"s:8NIOHTTP122HTTPClientResponseParta\">HTTPClientResponsePart<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype InboundIn",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"40\" column=\"20\"><Name>InboundIn<\/Name><USR>s:3NIO21ChannelInboundHandlerP0C2InQa<\/USR><Declaration>associatedtype InboundIn<\/Declaration><CommentParts><Abstract><Para>The type of the inbound data which is wrapped in <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "InboundIn",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>InboundIn<\/decl.name> = <ref.typealias usr=\"s:8NIOHTTP122HTTPClientResponseParta\">HTTPClientResponsePart<\/ref.typealias><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 44,
            "key.name" : "InboundIn",
            "key.namelength" : 9,
            "key.nameoffset" : 30591,
            "key.offset" : 30581,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
              }
            ],
            "key.parsed_declaration" : "typealias InboundIn = HTTPClientResponsePart",
            "key.parsed_scope.end" : 793,
            "key.parsed_scope.start" : 793,
            "key.typename" : "HTTPPart<HTTPResponseHead, ByteBuffer>.Type",
            "key.typeusr" : "$s8NIOHTTP18HTTPPartOyAA16HTTPResponseHeadV3NIO10ByteBufferVGmD",
            "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
          },
          {
            "key.annotated_decl" : "<Declaration>typealias OutboundOut = <Type usr=\"s:8NIOHTTP121HTTPClientRequestParta\">HTTPClientRequestPart<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype OutboundOut = Never",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"20\" column=\"20\"><Name>OutboundOut<\/Name><USR>s:3NIO23_EmittingChannelHandlerP11OutboundOutQa<\/USR><Declaration>associatedtype OutboundOut = Never<\/Declaration><CommentParts><Abstract><Para>The type of the outbound data which will be forwarded to the next <codeVoice>ChannelOutboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>_EmittingChannelHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "OutboundOut",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>OutboundOut<\/decl.name> = <ref.typealias usr=\"s:8NIOHTTP121HTTPClientRequestParta\">HTTPClientRequestPart<\/ref.typealias><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 45,
            "key.name" : "OutboundOut",
            "key.namelength" : 11,
            "key.nameoffset" : 30640,
            "key.offset" : 30630,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO23_EmittingChannelHandlerP11OutboundOutQa"
              }
            ],
            "key.parsed_declaration" : "typealias OutboundOut = HTTPClientRequestPart",
            "key.parsed_scope.end" : 794,
            "key.parsed_scope.start" : 794,
            "key.typename" : "HTTPPart<HTTPRequestHead, IOData>.Type",
            "key.typeusr" : "$s8NIOHTTP18HTTPPartOyAA15HTTPRequestHeadV3NIO6IODataOGmD",
            "key.usr" : "s:3NIO23_EmittingChannelHandlerP11OutboundOutQa"
          },
          {
            "key.annotated_decl" : "<Declaration>func write(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, data: <Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type>, promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;?)<\/Declaration>",
            "key.bodylength" : 2900,
            "key.bodyoffset" : 30773,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func write(context: NIO.ChannelHandlerContext, data: NIO.NIOAny, promise: NIO.EventLoopPromise<Void>?)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.write` to forward the operation to the next `_ChannelOutboundHandler` in the `ChannelPipeline` or complete the `EventLoopPromise` to let the caller know that the operation completed."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"86\" column=\"10\"><Name>write(context:data:promise:)<\/Name><USR>s:3NIO23_ChannelOutboundHandlerP5write7context4data7promiseyAA0bD7ContextC_AA6NIOAnyVAA16EventLoopPromiseVyytGSgtF<\/USR><Declaration>func write(context: NIO.ChannelHandlerContext, data: NIO.NIOAny, promise: NIO.EventLoopPromise&lt;Void&gt;?)<\/Declaration><CommentParts><Abstract><Para>Called to request a write operation. The write operation will write the messages through the <codeVoice>ChannelPipeline<\/codeVoice>. Those are then ready to be flushed to the actual <codeVoice>Channel<\/codeVoice> when <codeVoice>Channel.flush<\/codeVoice> or <codeVoice>ChannelHandlerContext.flush<\/codeVoice> is called.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The data to write through the <codeVoice>Channel<\/codeVoice>, wrapped in a <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>promise<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>EventLoopPromise<\/codeVoice> which should be notified once the operation completes, or nil if no notification should take place.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.write<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelOutboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> or complete the <codeVoice>EventLoopPromise<\/codeVoice> to let the caller know that the operation completed.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelOutboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 86,
            "key.doc.name" : "write(context:data:promise:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The data to write through the `Channel`, wrapped in a `NIOAny`."
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `EventLoopPromise` which should be notified once the operation completes, or nil if no notification should take place."
                  }
                ],
                "name" : "promise"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>promise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 2993,
            "key.name" : "write(context:data:promise:)",
            "key.namelength" : 85,
            "key.nameoffset" : 30686,
            "key.offset" : 30681,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO23_ChannelOutboundHandlerP5write7context4data7promiseyAA0bD7ContextC_AA6NIOAnyVAA16EventLoopPromiseVyytGSgtF"
              }
            ],
            "key.parsed_declaration" : "func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)",
            "key.parsed_scope.end" : 866,
            "key.parsed_scope.start" : 796,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let request: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/Type>&lt;Delegate&gt;.<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC10OutboundIna\">OutboundIn<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>request<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/ref.class>&lt;Delegate&gt;.<ref.typealias usr=\"s:15AsyncHTTPClient11TaskHandlerC10OutboundIna\">OutboundIn<\/ref.typealias><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.name" : "request",
                "key.namelength" : 7,
                "key.nameoffset" : 30813,
                "key.offset" : 30809,
                "key.parsed_declaration" : "let request = self.unwrapOutboundIn(data)",
                "key.parsed_scope.end" : 798,
                "key.parsed_scope.start" : 798,
                "key.typename" : "HTTPClient.Request",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestVD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5write7context4data7promisey3NIO07ChannelD7ContextC_AH6NIOAnyVAH16EventLoopPromiseVyytGSgtF7requestL_AA0B0C7RequestVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var head: <Type usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>head<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP115HTTPRequestHeadV\">HTTPRequestHead<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 180,
                "key.name" : "head",
                "key.namelength" : 4,
                "key.nameoffset" : 30864,
                "key.offset" : 30860,
                "key.parsed_declaration" : "var head = HTTPRequestHead(version: HTTPVersion(major: 1, minor: 1),\n                           method: request.method,\n                           uri: request.uri)",
                "key.parsed_scope.end" : 800,
                "key.parsed_scope.start" : 800,
                "key.typename" : "HTTPRequestHead",
                "key.typeusr" : "$s8NIOHTTP115HTTPRequestHeadVD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5write7context4data7promisey3NIO07ChannelD7ContextC_AH6NIOAnyVAH16EventLoopPromiseVyytGSgtF4headL_8NIOHTTP115HTTPRequestHeadVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "headers",
                "key.namelength" : 7,
                "key.nameoffset" : 31053,
                "key.offset" : 31049,
                "key.parsed_declaration" : "var headers = request.headers",
                "key.parsed_scope.end" : 803,
                "key.parsed_scope.start" : 803,
                "key.typename" : "HTTPHeaders",
                "key.typeusr" : "$s8NIOHTTP111HTTPHeadersVD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5write7context4data7promisey3NIO07ChannelD7ContextC_AH6NIOAnyVAH16EventLoopPromiseVyytGSgtF7headersL_8NIOHTTP111HTTPHeadersVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let contentLengths: [<Type usr=\"s:Ss\">Substring<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>contentLengths<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:Ss\">Substring<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 66,
                "key.name" : "contentLengths",
                "key.namelength" : 14,
                "key.nameoffset" : 32224,
                "key.offset" : 32220,
                "key.parsed_declaration" : "let contentLengths = head.headers[canonicalForm: \"content-length\"]",
                "key.parsed_scope.end" : 832,
                "key.parsed_scope.start" : 832,
                "key.typename" : "[Substring]",
                "key.typeusr" : "$sSaySsGD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC5write7context4data7promisey3NIO07ChannelD7ContextC_AH6NIOAnyVAH16EventLoopPromiseVyytGSgtF14contentLengthsL_SaySsGvp"
              }
            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext, NIOAny, EventLoopPromise<()>?) -> ()",
            "key.typeusr" : "$s7context4data7promisey3NIO21ChannelHandlerContextC_AD6NIOAnyVAD16EventLoopPromiseVyytGSgtcD",
            "key.usr" : "s:3NIO23_ChannelOutboundHandlerP5write7context4data7promiseyAA0bD7ContextC_AA6NIOAnyVAA16EventLoopPromiseVyytGSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func writeBody(request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>, context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 33680
              }
            ],
            "key.bodylength" : 1257,
            "key.bodyoffset" : 33790,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>writeBody<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1360,
            "key.name" : "writeBody(request:context:)",
            "key.namelength" : 70,
            "key.nameoffset" : 33693,
            "key.offset" : 33688,
            "key.parsed_declaration" : "private func writeBody(request: HTTPClient.Request, context: ChannelHandlerContext) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 901,
            "key.parsed_scope.start" : 868,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let channel: <Type usr=\"s:3NIO7ChannelP\">Channel<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>channel<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "channel",
                "key.namelength" : 7,
                "key.nameoffset" : 33920,
                "key.offset" : 33916,
                "key.parsed_declaration" : "let channel = context.channel",
                "key.parsed_scope.end" : 873,
                "key.parsed_scope.start" : 873,
                "key.typename" : "Channel",
                "key.typeusr" : "$s3NIO7Channel_pD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC9writeBody33_AE296A596A76009D398A2E5FEBCB0176LL7request7context3NIO15EventLoopFutureCyytGAA0B0C7RequestV_AH07ChannelD7ContextCtF7channelL_AH0U0_pvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func doIt() -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
                "key.bodylength" : 784,
                "key.bodyoffset" : 33993,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>doIt<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 823,
                "key.name" : "doIt()",
                "key.namelength" : 6,
                "key.nameoffset" : 33960,
                "key.offset" : 33955,
                "key.parsed_declaration" : "func doIt() -> EventLoopFuture<Void>",
                "key.parsed_scope.end" : 891,
                "key.parsed_scope.start" : 875,
                "key.substructure" : [

                ],
                "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> () -> EventLoopFuture<()>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCyytGyc15AsyncHTTPClient0F16ResponseDelegateRzluD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC9writeBody33_AE296A596A76009D398A2E5FEBCB0176LL7request7context3NIO15EventLoopFutureCyytGAA0B0C7RequestV_AH07ChannelD7ContextCtF4doItL_AKyAA0B16ResponseDelegateRzlF"
              }
            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (HTTPClient.Request, ChannelHandlerContext) -> EventLoopFuture<()>",
            "key.typeusr" : "$s7request7context3NIO15EventLoopFutureCyytG15AsyncHTTPClient0H0C7RequestV_AC21ChannelHandlerContextCtcD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC9writeBody33_AE296A596A76009D398A2E5FEBCB0176LL7request7context3NIO15EventLoopFutureCyytGAA0B0C7RequestV_AH07ChannelD7ContextCtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func writeBodyPart(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, part: <Type usr=\"s:3NIO6IODataO\">IOData<\/Type>, promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 35054
              }
            ],
            "key.bodylength" : 684,
            "key.bodyoffset" : 35161,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>writeBodyPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:3NIO6IODataO\">IOData<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>promise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 784,
            "key.name" : "writeBodyPart(context:part:promise:)",
            "key.namelength" : 92,
            "key.nameoffset" : 35067,
            "key.offset" : 35062,
            "key.parsed_declaration" : "private func writeBodyPart(context: ChannelHandlerContext, part: IOData, promise: EventLoopPromise<Void>)",
            "key.parsed_scope.end" : 919,
            "key.parsed_scope.start" : 903,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext, IOData, EventLoopPromise<()>) -> ()",
            "key.typeusr" : "$s7context4part7promisey3NIO21ChannelHandlerContextC_AD6IODataOAD16EventLoopPromiseVyytGtcD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC13writeBodyPart33_AE296A596A76009D398A2E5FEBCB0176LL7context4part7promisey3NIO07ChannelD7ContextC_AI6IODataOAI16EventLoopPromiseVyytGtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func read(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 35852
              }
            ],
            "key.bodylength" : 158,
            "key.bodyoffset" : 35902,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func read(context: NIO.ChannelHandlerContext)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.read` to forward the operation to the next `_ChannelOutboundHandler` in the `ChannelPipeline` or just discard it if the read should be suppressed."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"105\" column=\"10\"><Name>read(context:)<\/Name><USR>s:3NIO23_ChannelOutboundHandlerP4read7contextyAA0bD7ContextC_tF<\/USR><Declaration>func read(context: NIO.ChannelHandlerContext)<\/Declaration><CommentParts><Abstract><Para>Called to request that the <codeVoice>Channel<\/codeVoice> perform a read when data is ready. The read operation will signal that we are ready to read more data.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.read<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelOutboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> or just discard it if the read should be suppressed.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelOutboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 105,
            "key.doc.name" : "read(context:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 202,
            "key.name" : "read(context:)",
            "key.namelength" : 36,
            "key.nameoffset" : 35864,
            "key.offset" : 35859,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO23_ChannelOutboundHandlerP4read7contextyAA0bD7ContextC_tF"
              }
            ],
            "key.parsed_declaration" : "public func read(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 928,
            "key.parsed_scope.start" : 921,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:3NIO23_ChannelOutboundHandlerP4read7contextyAA0bD7ContextC_tF"
          },
          {
            "key.annotated_decl" : "<Declaration>func channelRead(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, data: <Type usr=\"s:3NIO6NIOAnyV\">NIOAny<\/Type>)<\/Declaration>",
            "key.bodylength" : 1994,
            "key.bodyoffset" : 36131,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func channelRead(context: NIO.ChannelHandlerContext, data: NIO.NIOAny)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireChannelRead` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"179\" column=\"10\"><Name>channelRead(context:data:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP11channelRead7context4datayAA0bD7ContextC_AA6NIOAnyVtF<\/USR><Declaration>func channelRead(context: NIO.ChannelHandlerContext, data: NIO.NIOAny)<\/Declaration><CommentParts><Abstract><Para>Called when some data has been read from the remote peer.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The data read from the remote peer, wrapped in a <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireChannelRead<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 179,
            "key.doc.name" : "channelRead(context:data:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The data read from the remote peer, wrapped in a `NIOAny`."
                  }
                ],
                "name" : "data"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>channelRead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO6NIOAnyV\">NIOAny<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 2059,
            "key.name" : "channelRead(context:data:)",
            "key.namelength" : 57,
            "key.nameoffset" : 36072,
            "key.offset" : 36067,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP11channelRead7context4datayAA0bD7ContextC_AA6NIOAnyVtF"
              }
            ],
            "key.parsed_declaration" : "func channelRead(context: ChannelHandlerContext, data: NIOAny)",
            "key.parsed_scope.end" : 978,
            "key.parsed_scope.start" : 930,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let response: <Type usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/Type>&lt;Delegate&gt;.<Type usr=\"s:15AsyncHTTPClient11TaskHandlerC9InboundIna\">InboundIn<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>response<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient11TaskHandlerC\">TaskHandler<\/ref.class>&lt;Delegate&gt;.<ref.typealias usr=\"s:15AsyncHTTPClient11TaskHandlerC9InboundIna\">InboundIn<\/ref.typealias><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.name" : "response",
                "key.namelength" : 8,
                "key.nameoffset" : 36144,
                "key.offset" : 36140,
                "key.parsed_declaration" : "let response = self.unwrapInboundIn(data)",
                "key.parsed_scope.end" : 931,
                "key.parsed_scope.start" : 931,
                "key.typename" : "HTTPPart<HTTPResponseHead, ByteBuffer>",
                "key.typeusr" : "$s8NIOHTTP18HTTPPartOyAA16HTTPResponseHeadV3NIO10ByteBufferVGD",
                "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC11channelRead7context4datay3NIO07ChannelD7ContextC_AG6NIOAnyVtF8responseL_8NIOHTTP18HTTPPartOyAM16HTTPResponseHeadVAG10ByteBufferVGvp"
              }
            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext, NIOAny) -> ()",
            "key.typeusr" : "$s7context4datay3NIO21ChannelHandlerContextC_AC6NIOAnyVtcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP11channelRead7context4datayAA0bD7ContextC_AA6NIOAnyVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func handleBackpressureResult(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, result: <Type usr=\"s:s6ResultO\">Result<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 38132
              }
            ],
            "key.bodylength" : 314,
            "key.bodyoffset" : 38232,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>handleBackpressureResult<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>result<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 407,
            "key.name" : "handleBackpressureResult(context:result:)",
            "key.namelength" : 85,
            "key.nameoffset" : 38145,
            "key.offset" : 38140,
            "key.parsed_declaration" : "private func handleBackpressureResult(context: ChannelHandlerContext, result: Result<Void, Error>)",
            "key.parsed_scope.end" : 991,
            "key.parsed_scope.start" : 980,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext, Result<(), Error>) -> ()",
            "key.typeusr" : "$s7context6resulty3NIO21ChannelHandlerContextC_s6ResultOyyts5Error_pGtcD",
            "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC24handleBackpressureResult33_AE296A596A76009D398A2E5FEBCB0176LL7context6resulty3NIO07ChannelD7ContextC_s0G0Oyyts5Error_pGtF"
          },
          {
            "key.annotated_decl" : "<Declaration>func userInboundEventTriggered(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, event: Any)<\/Declaration>",
            "key.bodylength" : 238,
            "key.bodyoffset" : 38629,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func userInboundEventTriggered(context: NIO.ChannelHandlerContext, event: Any)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireUserInboundEventTriggered` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"206\" column=\"10\"><Name>userInboundEventTriggered(context:event:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF<\/USR><Declaration>func userInboundEventTriggered(context: NIO.ChannelHandlerContext, event: Any)<\/Declaration><CommentParts><Abstract><Para>Called when a user inbound event has been triggered.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>event<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The event.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireUserInboundEventTriggered<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 206,
            "key.doc.name" : "userInboundEventTriggered(context:event:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The event."
                  }
                ],
                "name" : "event"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>userInboundEventTriggered<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>event<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 315,
            "key.name" : "userInboundEventTriggered(context:event:)",
            "key.namelength" : 69,
            "key.nameoffset" : 38558,
            "key.offset" : 38553,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF"
              }
            ],
            "key.parsed_declaration" : "func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)",
            "key.parsed_scope.end" : 999,
            "key.parsed_scope.start" : 993,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext, Any) -> ()",
            "key.typeusr" : "$s7context5eventy3NIO21ChannelHandlerContextC_yptcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP04userC14EventTriggered7context5eventyAA0bD7ContextC_yptF"
          },
          {
            "key.annotated_decl" : "<Declaration>func triggerUserOutboundEvent(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, event: Any, promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;?)<\/Declaration>",
            "key.bodylength" : 264,
            "key.bodyoffset" : 38983,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func triggerUserOutboundEvent(context: NIO.ChannelHandlerContext, event: Any, promise: NIO.EventLoopPromise<Void>?)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.triggerUserOutboundEvent` to forward the operation to the next `_ChannelOutboundHandler` in the `ChannelPipeline` or complete the `EventLoopPromise` to let the caller know that the operation completed."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"127\" column=\"10\"><Name>triggerUserOutboundEvent(context:event:promise:)<\/Name><USR>s:3NIO23_ChannelOutboundHandlerP011triggerUserC5Event7context5event7promiseyAA0bD7ContextC_ypAA0G11LoopPromiseVyytGSgtF<\/USR><Declaration>func triggerUserOutboundEvent(context: NIO.ChannelHandlerContext, event: Any, promise: NIO.EventLoopPromise&lt;Void&gt;?)<\/Declaration><CommentParts><Abstract><Para>Called when an user outbound event is triggered.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>event<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The triggered event.<\/Para><\/Discussion><\/Parameter><Parameter><Name>promise<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>EventLoopPromise<\/codeVoice> which should be notified once the operation completes, or nil if no notification should take place.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.triggerUserOutboundEvent<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelOutboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> or complete the <codeVoice>EventLoopPromise<\/codeVoice> to let the caller know that the operation completed.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelOutboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 127,
            "key.doc.name" : "triggerUserOutboundEvent(context:event:promise:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The triggered event."
                  }
                ],
                "name" : "event"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `EventLoopPromise` which should be notified once the operation completes, or nil if no notification should take place."
                  }
                ],
                "name" : "promise"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>triggerUserOutboundEvent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>event<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>promise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 374,
            "key.name" : "triggerUserOutboundEvent(context:event:promise:)",
            "key.namelength" : 102,
            "key.nameoffset" : 38879,
            "key.offset" : 38874,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO23_ChannelOutboundHandlerP011triggerUserC5Event7context5event7promiseyAA0bD7ContextC_ypAA0G11LoopPromiseVyytGSgtF"
              }
            ],
            "key.parsed_declaration" : "func triggerUserOutboundEvent(context: ChannelHandlerContext, event: Any, promise: EventLoopPromise<Void>?)",
            "key.parsed_scope.end" : 1008,
            "key.parsed_scope.start" : 1001,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext, Any, EventLoopPromise<()>?) -> ()",
            "key.typeusr" : "$s7context5event7promisey3NIO21ChannelHandlerContextC_ypAD16EventLoopPromiseVyytGSgtcD",
            "key.usr" : "s:3NIO23_ChannelOutboundHandlerP011triggerUserC5Event7context5event7promiseyAA0bD7ContextC_ypAA0G11LoopPromiseVyytGSgtF"
          },
          {
            "key.annotated_decl" : "<Declaration>func channelInactive(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.bodylength" : 284,
            "key.bodyoffset" : 39308,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func channelInactive(context: NIO.ChannelHandlerContext)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireChannelInactive` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the event."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"170\" column=\"10\"><Name>channelInactive(context:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP15channelInactive7contextyAA0bD7ContextC_tF<\/USR><Declaration>func channelInactive(context: NIO.ChannelHandlerContext)<\/Declaration><CommentParts><Abstract><Para>Called when the <codeVoice>Channel<\/codeVoice> has become inactive and is no longer able to send and receive data`.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireChannelInactive<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the event.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 170,
            "key.doc.name" : "channelInactive(context:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>channelInactive<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 339,
            "key.name" : "channelInactive(context:)",
            "key.namelength" : 47,
            "key.nameoffset" : 39259,
            "key.offset" : 39254,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP15channelInactive7contextyAA0bD7ContextC_tF"
              }
            ],
            "key.parsed_declaration" : "func channelInactive(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 1018,
            "key.parsed_scope.start" : 1010,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP15channelInactive7contextyAA0bD7ContextC_tF"
          },
          {
            "key.annotated_decl" : "<Declaration>func errorCaught(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, error: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
            "key.bodylength" : 1143,
            "key.bodyoffset" : 39663,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func errorCaught(context: NIO.ChannelHandlerContext, error: Error)",
            "key.doc.discussion" : [
              {
                "Para" : "This should call `context.fireErrorCaught` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the error."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"215\" column=\"10\"><Name>errorCaught(context:error:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF<\/USR><Declaration>func errorCaught(context: NIO.ChannelHandlerContext, error: Error)<\/Declaration><CommentParts><Abstract><Para>An error was encountered earlier in the inbound <codeVoice>ChannelPipeline<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Error<\/codeVoice> that was encountered.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireErrorCaught<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the error.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 215,
            "key.doc.name" : "errorCaught(context:error:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `Error` that was encountered."
                  }
                ],
                "name" : "error"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>errorCaught<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1208,
            "key.name" : "errorCaught(context:error:)",
            "key.namelength" : 57,
            "key.nameoffset" : 39604,
            "key.offset" : 39599,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF"
              }
            ],
            "key.parsed_declaration" : "func errorCaught(context: ChannelHandlerContext, error: Error)",
            "key.parsed_scope.end" : 1046,
            "key.parsed_scope.start" : 1020,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext, Error) -> ()",
            "key.typeusr" : "$s7context5errory3NIO21ChannelHandlerContextC_s5Error_ptcD",
            "key.usr" : "s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF"
          },
          {
            "key.annotated_decl" : "<Declaration>func handlerAdded(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>)<\/Declaration>",
            "key.bodylength" : 174,
            "key.bodyoffset" : 40864,
            "key.doc.column" : 10,
            "key.doc.comment" : "We can also ignore this error like `.end`.",
            "key.doc.declaration" : "func handlerAdded(context: NIO.ChannelHandlerContext)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"25\" column=\"10\"><Name>handlerAdded(context:)<\/Name><USR>s:3NIO14ChannelHandlerP12handlerAdded7contextyAA0bC7ContextC_tF<\/USR><Declaration>func handlerAdded(context: NIO.ChannelHandlerContext)<\/Declaration><CommentParts><Abstract><Para>Called when this <codeVoice>ChannelHandler<\/codeVoice> is added to the <codeVoice>ChannelPipeline<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "handlerAdded(context:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                  }
                ],
                "name" : "context"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>handlerAdded<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 226,
            "key.name" : "handlerAdded(context:)",
            "key.namelength" : 44,
            "key.nameoffset" : 40818,
            "key.offset" : 40813,
            "key.overrides" : [
              {
                "key.usr" : "s:3NIO14ChannelHandlerP12handlerAdded7contextyAA0bC7ContextC_tF"
              }
            ],
            "key.parsed_declaration" : "func handlerAdded(context: ChannelHandlerContext)",
            "key.parsed_scope.end" : 1053,
            "key.parsed_scope.start" : 1048,
            "key.substructure" : [

            ],
            "key.typename" : "<Delegate where Delegate : HTTPClientResponseDelegate> (TaskHandler<Delegate>) -> (ChannelHandlerContext) -> ()",
            "key.typeusr" : "$s7contexty3NIO21ChannelHandlerContextC_tcD",
            "key.usr" : "s:3NIO14ChannelHandlerP12handlerAdded7contextyAA0bC7ContextC_tF"
          }
        ],
        "key.typename" : "TaskHandler<Delegate>.Type",
        "key.typeusr" : "$s15AsyncHTTPClient11TaskHandlerCyxGmD",
        "key.usr" : "s:15AsyncHTTPClient11TaskHandlerC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 23,
        "key.name" : "MARK: - RedirectHandler",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 41046
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>internal struct RedirectHandler&lt;ResponseType&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 41071
          }
        ],
        "key.bodylength" : 2897,
        "key.bodyoffset" : 41118,
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>RedirectHandler<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient15RedirectHandlerV12ResponseTypexmfp\"><decl.generic_type_param.name>ResponseType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2936,
        "key.name" : "RedirectHandler",
        "key.namelength" : 15,
        "key.nameoffset" : 41087,
        "key.offset" : 41080,
        "key.parsed_declaration" : "internal struct RedirectHandler<ResponseType>",
        "key.parsed_scope.end" : 1149,
        "key.parsed_scope.start" : 1058,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>ResponseType<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>ResponseType<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 12,
            "key.name" : "ResponseType",
            "key.namelength" : 12,
            "key.nameoffset" : 41103,
            "key.offset" : 41103,
            "key.parsed_declaration" : "internal struct RedirectHandler<ResponseType",
            "key.parsed_scope.end" : 1058,
            "key.parsed_scope.start" : 1058,
            "key.typename" : "ResponseType.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV12ResponseTypexmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let request: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>request<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.name" : "request",
            "key.namelength" : 7,
            "key.nameoffset" : 41127,
            "key.offset" : 41123,
            "key.parsed_declaration" : "let request: HTTPClient.Request",
            "key.parsed_scope.end" : 1059,
            "key.parsed_scope.start" : 1059,
            "key.typename" : "HTTPClient.Request",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestVD",
            "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV7requestAA0B0C7RequestVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let execute: (<Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>) -&gt; <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient15RedirectHandlerV12ResponseTypexmfp\">ResponseType<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient15RedirectHandlerV12ResponseTypexmfp\">ResponseType<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 66,
            "key.name" : "execute",
            "key.namelength" : 7,
            "key.nameoffset" : 41163,
            "key.offset" : 41159,
            "key.parsed_declaration" : "let execute: (HTTPClient.Request) -> HTTPClient.Task<ResponseType>",
            "key.parsed_scope.end" : 1060,
            "key.parsed_scope.start" : 1060,
            "key.typename" : "(HTTPClient.Request) -> HTTPClient.Task<ResponseType>",
            "key.typeusr" : "$sy15AsyncHTTPClient0B0C4TaskCy_xGAC7RequestVcD",
            "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV7executeyAA0B0C4TaskCy_xGAF7RequestVcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func redirectTarget(status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type>) -&gt; <Type usr=\"s:10Foundation3URLV\">URL<\/Type>?<\/Declaration>",
            "key.bodylength" : 627,
            "key.bodyoffset" : 41310,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>redirectTarget<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>status<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 707,
            "key.name" : "redirectTarget(status:headers:)",
            "key.namelength" : 64,
            "key.nameoffset" : 41236,
            "key.offset" : 41231,
            "key.parsed_declaration" : "func redirectTarget(status: HTTPResponseStatus, headers: HTTPHeaders) -> URL?",
            "key.parsed_scope.end" : 1087,
            "key.parsed_scope.start" : 1062,
            "key.substructure" : [

            ],
            "key.typename" : "<ResponseType> (RedirectHandler<ResponseType>) -> (HTTPResponseStatus, HTTPHeaders) -> URL?",
            "key.typeusr" : "$s6status7headers10Foundation3URLVSg8NIOHTTP118HTTPResponseStatusO_AG11HTTPHeadersVtcD",
            "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV14redirectTarget6status7headers10Foundation3URLVSg8NIOHTTP118HTTPResponseStatusO_AK11HTTPHeadersVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func redirect(status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type>, to redirectURL: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>, promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:15AsyncHTTPClient15RedirectHandlerV12ResponseTypexmfp\">ResponseType<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 1964,
            "key.bodyoffset" : 42049,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>redirect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>status<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>redirectURL<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>promise<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:15AsyncHTTPClient15RedirectHandlerV12ResponseTypexmfp\">ResponseType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 2070,
            "key.name" : "redirect(status:to:promise:)",
            "key.namelength" : 98,
            "key.nameoffset" : 41949,
            "key.offset" : 41944,
            "key.parsed_declaration" : "func redirect(status: HTTPResponseStatus, to redirectURL: URL, promise: EventLoopPromise<ResponseType>)",
            "key.parsed_scope.end" : 1148,
            "key.parsed_scope.start" : 1089,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var nextState: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV13RedirectStateV\">RedirectState<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>nextState<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV13RedirectStateV\">RedirectState<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 48,
                "key.name" : "nextState",
                "key.namelength" : 9,
                "key.nameoffset" : 42062,
                "key.offset" : 42058,
                "key.parsed_declaration" : "var nextState: HTTPClient.Request.RedirectState?",
                "key.parsed_scope.end" : 1090,
                "key.parsed_scope.start" : 1090,
                "key.typename" : "HTTPClient.Request.RedirectState?",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestV13RedirectStateVSgD",
                "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV8redirect6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtF9nextStateL_AA0B0C7RequestV0cS0VSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let originalRequest: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>originalRequest<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C7RequestV\">Request<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 34,
                "key.name" : "originalRequest",
                "key.namelength" : 15,
                "key.nameoffset" : 42669,
                "key.offset" : 42665,
                "key.parsed_declaration" : "let originalRequest = self.request",
                "key.parsed_scope.end" : 1110,
                "key.parsed_scope.start" : 1110,
                "key.typename" : "HTTPClient.Request",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C7RequestVD",
                "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV8redirect6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtF15originalRequestL_AA0B0C0S0Vvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var convertToGet: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>convertToGet<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.name" : "convertToGet",
                "key.namelength" : 12,
                "key.nameoffset" : 42713,
                "key.offset" : 42709,
                "key.parsed_declaration" : "var convertToGet = false",
                "key.parsed_scope.end" : 1112,
                "key.parsed_scope.start" : 1112,
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV8redirect6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtF12convertToGetL_Sbvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>method<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 35,
                "key.name" : "method",
                "key.namelength" : 6,
                "key.nameoffset" : 42982,
                "key.offset" : 42978,
                "key.parsed_declaration" : "var method = originalRequest.method",
                "key.parsed_scope.end" : 1119,
                "key.parsed_scope.start" : 1119,
                "key.typename" : "HTTPMethod",
                "key.typeusr" : "$s8NIOHTTP110HTTPMethodOD",
                "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV8redirect6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtF6methodL_AH10HTTPMethodOvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 37,
                "key.name" : "headers",
                "key.namelength" : 7,
                "key.nameoffset" : 43026,
                "key.offset" : 43022,
                "key.parsed_declaration" : "var headers = originalRequest.headers",
                "key.parsed_scope.end" : 1120,
                "key.parsed_scope.start" : 1120,
                "key.typename" : "HTTPHeaders",
                "key.typeusr" : "$s8NIOHTTP111HTTPHeadersVD",
                "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV8redirect6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtF7headersL_AH11HTTPHeadersVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var body: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>body<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 31,
                "key.name" : "body",
                "key.namelength" : 4,
                "key.nameoffset" : 43072,
                "key.offset" : 43068,
                "key.parsed_declaration" : "var body = originalRequest.body",
                "key.parsed_scope.end" : 1121,
                "key.parsed_scope.start" : 1121,
                "key.typename" : "HTTPClient.Body?",
                "key.typeusr" : "$s15AsyncHTTPClient0B0C4BodyVSgD",
                "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV8redirect6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtF4bodyL_AA0B0C4BodyVSgvp"
              }
            ],
            "key.typename" : "<ResponseType> (RedirectHandler<ResponseType>) -> (HTTPResponseStatus, URL, EventLoopPromise<ResponseType>) -> ()",
            "key.typeusr" : "$s6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtcD",
            "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV8redirect6status2to7promisey8NIOHTTP118HTTPResponseStatusO_10Foundation3URLV3NIO16EventLoopPromiseVyxGtF"
          }
        ],
        "key.typename" : "RedirectHandler<ResponseType>.Type",
        "key.typeusr" : "$s15AsyncHTTPClient15RedirectHandlerVyxGmD",
        "key.usr" : "s:15AsyncHTTPClient15RedirectHandlerV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2974,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public class HTTPClient<\/Declaration>",
        "key.bodylength" : 2314,
        "key.bodyoffset" : 651,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class HTTPClient",
        "key.doc.discussion" : [
          {
            "Para" : "Example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO `EventLoopGroup`:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"65\" column=\"14\"><Name>HTTPClient<\/Name><USR>s:15AsyncHTTPClient0B0C<\/USR><Declaration>public class HTTPClient<\/Declaration><CommentParts><Abstract><Para>HTTPClient class provides API for request execution.<\/Para><\/Abstract><Discussion><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    let client = HTTPClient(eventLoopGroupProvider: .createNew)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    client.get(url: \"https:\/\/swift.org\", deadline: .now() + .seconds(1)).whenComplete { result in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        switch result {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .failure(let error):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ process error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .success(let response):]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            if let response.status == .ok {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle response]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                \/\/ handle remote error]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>It is important to close the client instance, for example in a defer statement, after use to cleanly shutdown the underlying NIO <codeVoice>EventLoopGroup<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    try client.syncShutdown()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 65,
        "key.doc.name" : "HTTPClient",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTPClient<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2337,
        "key.name" : "HTTPClient",
        "key.namelength" : 10,
        "key.nameoffset" : 639,
        "key.offset" : 629,
        "key.parsed_declaration" : "extension HTTPClient",
        "key.parsed_scope.end" : 83,
        "key.parsed_scope.start" : 22,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct NWPOSIXError : <Type usr=\"s:s5ErrorP\">Error<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 660
              }
            ],
            "key.bodylength" : 608,
            "key.bodyoffset" : 720,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 5,
                "key.offset" : 688
              },
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 23,
                "key.offset" : 695
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NWPOSIXError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.struct>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Error"
              },
              {
                "key.name" : "CustomStringConvertible"
              }
            ],
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 662,
            "key.name" : "NWPOSIXError",
            "key.namelength" : 12,
            "key.nameoffset" : 674,
            "key.offset" : 667,
            "key.parsed_declaration" : "public struct NWPOSIXError: Error, CustomStringConvertible",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 23,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let errorCode: <Type usr=\"c:@M@Darwin@E@POSIXErrorCode\">POSIXErrorCode<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 773
                  }
                ],
                "key.doc.column" : 24,
                "key.doc.comment" : "POSIX error code (enum)",
                "key.doc.declaration" : "public let errorCode: POSIXErrorCode",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift\" line=\"25\" column=\"24\"><Name>errorCode<\/Name><USR>s:15AsyncHTTPClient0B0C12NWPOSIXErrorV9errorCode6Darwin010POSIXErrorE0Ovp<\/USR><Declaration>public let errorCode: POSIXErrorCode<\/Declaration><CommentParts><Abstract><Para>POSIX error code (enum)<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 25,
                "key.doc.name" : "errorCode",
                "key.doc.type" : "Other",
                "key.doclength" : 28,
                "key.docoffset" : 733,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>errorCode<\/decl.name>: <decl.var.type><ref.enum usr=\"c:@M@Darwin@E@POSIXErrorCode\">POSIXErrorCode<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 29,
                "key.name" : "errorCode",
                "key.namelength" : 9,
                "key.nameoffset" : 784,
                "key.offset" : 780,
                "key.parsed_declaration" : "public let errorCode: POSIXErrorCode",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.typename" : "POSIXErrorCode",
                "key.typeusr" : "$s6Darwin14POSIXErrorCodeOD",
                "key.usr" : "s:15AsyncHTTPClient0B0C12NWPOSIXErrorV9errorCode6Darwin010POSIXErrorE0Ovp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private let reason: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 877
                  }
                ],
                "key.doc.column" : 25,
                "key.doc.comment" : "actual reason, in human readable form",
                "key.doc.declaration" : "private let reason: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift\" line=\"28\" column=\"25\"><Name>reason<\/Name><USR>s:15AsyncHTTPClient0B0C12NWPOSIXErrorV6reason33_298AAD9FA0306DC84B2F5FC5F7B28C99LLSSvp<\/USR><Declaration>private let reason: String<\/Declaration><CommentParts><Abstract><Para>actual reason, in human readable form<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 28,
                "key.doc.name" : "reason",
                "key.doc.type" : "Other",
                "key.doclength" : 42,
                "key.docoffset" : 823,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "reason",
                "key.namelength" : 6,
                "key.nameoffset" : 889,
                "key.offset" : 885,
                "key.parsed_declaration" : "private let reason: String",
                "key.parsed_scope.end" : 28,
                "key.parsed_scope.start" : 28,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C12NWPOSIXErrorV6reason33_298AAD9FA0306DC84B2F5FC5F7B28C99LLSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(_ errorCode: <Type usr=\"c:@M@Darwin@E@POSIXErrorCode\">POSIXErrorCode<\/Type>, reason: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1100
                  }
                ],
                "key.bodylength" : 93,
                "key.bodyoffset" : 1158,
                "key.doc.column" : 20,
                "key.doc.comment" : "Initialise a NWPOSIXError\n- Parameters:\n  - errorType: posix error type\n  - reason: String describing reason for error",
                "key.doc.declaration" : "public init(_ errorCode: POSIXErrorCode, reason: String)",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift\" line=\"34\" column=\"20\"><Name>init(_:reason:)<\/Name><USR>s:15AsyncHTTPClient0B0C12NWPOSIXErrorV_6reasonAE6Darwin14POSIXErrorCodeO_SStcfc<\/USR><Declaration>public init(_ errorCode: POSIXErrorCode, reason: String)<\/Declaration><CommentParts><Abstract><Para>Initialise a NWPOSIXError<\/Para><\/Abstract><Parameters><Parameter><Name>errorType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>posix error type<\/Para><\/Discussion><\/Parameter><Parameter><Name>reason<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>String describing reason for error<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 34,
                "key.doc.name" : "init(_:reason:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "posix error type"
                      }
                    ],
                    "name" : "errorType"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "String describing reason for error"
                      }
                    ],
                    "name" : "reason"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 171,
                "key.docoffset" : 917,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>errorCode<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@M@Darwin@E@POSIXErrorCode\">POSIXErrorCode<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reason<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 145,
                "key.name" : "init(_:reason:)",
                "key.namelength" : 49,
                "key.nameoffset" : 1107,
                "key.offset" : 1107,
                "key.parsed_declaration" : "public init(_ errorCode: POSIXErrorCode, reason: String)",
                "key.parsed_scope.end" : 37,
                "key.parsed_scope.start" : 34,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.NWPOSIXError.Type) -> (POSIXErrorCode, String) -> HTTPClient.NWPOSIXError",
                "key.typeusr" : "$s_6reason15AsyncHTTPClient0C0C12NWPOSIXErrorV6Darwin14POSIXErrorCodeO_SStcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C12NWPOSIXErrorV_6reasonAE6Darwin14POSIXErrorCodeO_SStcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1266
                  }
                ],
                "key.bodylength" : 20,
                "key.bodyoffset" : 1298,
                "key.doc.declaration" : "var description: String { get }",
                "key.doc.discussion" : [
                  {
                    "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
                  },
                  {
                    "CodeListing" : ""
                  },
                  {
                    "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
                  },
                  {
                    "Note" : ""
                  }
                ],
                "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.name" : "description",
                "key.doc.type" : "Other",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 46,
                "key.name" : "description",
                "key.namelength" : 11,
                "key.nameoffset" : 1277,
                "key.offset" : 1273,
                "key.overrides" : [
                  {
                    "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
                  }
                ],
                "key.parsed_declaration" : "public var description: String",
                "key.parsed_scope.end" : 39,
                "key.parsed_scope.start" : 39,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.typename" : "HTTPClient.NWPOSIXError.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C12NWPOSIXErrorVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C12NWPOSIXErrorV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct NWTLSError : <Type usr=\"s:s5ErrorP\">Error<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1339
              }
            ],
            "key.bodylength" : 631,
            "key.bodyoffset" : 1397,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 5,
                "key.offset" : 1365
              },
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 23,
                "key.offset" : 1372
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NWTLSError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.struct>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Error"
              },
              {
                "key.name" : "CustomStringConvertible"
              }
            ],
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 683,
            "key.name" : "NWTLSError",
            "key.namelength" : 10,
            "key.nameoffset" : 1353,
            "key.offset" : 1346,
            "key.parsed_declaration" : "public struct NWTLSError: Error, CustomStringConvertible",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 42,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let status: <Type usr=\"c:@T@OSStatus\">OSStatus<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1508
                  }
                ],
                "key.doc.column" : 24,
                "key.doc.comment" : "TLS error status. List of TLS errors can be found in <Security\/SecureTransport.h>",
                "key.doc.declaration" : "public let status: OSStatus",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift\" line=\"44\" column=\"24\"><Name>status<\/Name><USR>s:15AsyncHTTPClient0B0C10NWTLSErrorV6statuss5Int32Vvp<\/USR><Declaration>public let status: OSStatus<\/Declaration><CommentParts><Abstract><Para>TLS error status. List of TLS errors can be found in &lt;Security\/SecureTransport.h&gt;<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 44,
                "key.doc.name" : "status",
                "key.doc.type" : "Other",
                "key.doclength" : 86,
                "key.docoffset" : 1410,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@OSStatus\">OSStatus<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 20,
                "key.name" : "status",
                "key.namelength" : 6,
                "key.nameoffset" : 1519,
                "key.offset" : 1515,
                "key.parsed_declaration" : "public let status: OSStatus",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.typename" : "Int32",
                "key.typeusr" : "$ss5Int32VD",
                "key.usr" : "s:15AsyncHTTPClient0B0C10NWTLSErrorV6statuss5Int32Vvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private let reason: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 1603
                  }
                ],
                "key.doc.column" : 25,
                "key.doc.comment" : "actual reason, in human readable form",
                "key.doc.declaration" : "private let reason: String",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift\" line=\"47\" column=\"25\"><Name>reason<\/Name><USR>s:15AsyncHTTPClient0B0C10NWTLSErrorV6reason33_298AAD9FA0306DC84B2F5FC5F7B28C99LLSSvp<\/USR><Declaration>private let reason: String<\/Declaration><CommentParts><Abstract><Para>actual reason, in human readable form<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 47,
                "key.doc.name" : "reason",
                "key.doc.type" : "Other",
                "key.doclength" : 42,
                "key.docoffset" : 1549,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "reason",
                "key.namelength" : 6,
                "key.nameoffset" : 1615,
                "key.offset" : 1611,
                "key.parsed_declaration" : "private let reason: String",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:15AsyncHTTPClient0B0C10NWTLSErrorV6reason33_298AAD9FA0306DC84B2F5FC5F7B28C99LLSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(_ status: <Type usr=\"c:@T@OSStatus\">OSStatus<\/Type>, reason: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1815
                  }
                ],
                "key.bodylength" : 87,
                "key.bodyoffset" : 1864,
                "key.doc.column" : 20,
                "key.doc.comment" : "initialise a NWTLSError\n- Parameters:\n  - status: TLS status\n  - reason: String describing reason for error",
                "key.doc.declaration" : "public init(_ status: OSStatus, reason: String)",
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift\" line=\"53\" column=\"20\"><Name>init(_:reason:)<\/Name><USR>s:15AsyncHTTPClient0B0C10NWTLSErrorV_6reasonAEs5Int32V_SStcfc<\/USR><Declaration>public init(_ status: OSStatus, reason: String)<\/Declaration><CommentParts><Abstract><Para>initialise a NWTLSError<\/Para><\/Abstract><Parameters><Parameter><Name>status<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>TLS status<\/Para><\/Discussion><\/Parameter><Parameter><Name>reason<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>String describing reason for error<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 53,
                "key.doc.name" : "init(_:reason:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "TLS status"
                      }
                    ],
                    "name" : "status"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "String describing reason for error"
                      }
                    ],
                    "name" : "reason"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 160,
                "key.docoffset" : 1643,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>status<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@OSStatus\">OSStatus<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reason<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 130,
                "key.name" : "init(_:reason:)",
                "key.namelength" : 40,
                "key.nameoffset" : 1822,
                "key.offset" : 1822,
                "key.parsed_declaration" : "public init(_ status: OSStatus, reason: String)",
                "key.parsed_scope.end" : 56,
                "key.parsed_scope.start" : 53,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.NWTLSError.Type) -> (Int32, String) -> HTTPClient.NWTLSError",
                "key.typeusr" : "$s_6reason15AsyncHTTPClient0C0C10NWTLSErrorVs5Int32V_SStcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C10NWTLSErrorV_6reasonAEs5Int32V_SStcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1966
                  }
                ],
                "key.bodylength" : 20,
                "key.bodyoffset" : 1998,
                "key.doc.declaration" : "var description: String { get }",
                "key.doc.discussion" : [
                  {
                    "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
                  },
                  {
                    "CodeListing" : ""
                  },
                  {
                    "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
                  },
                  {
                    "Note" : ""
                  }
                ],
                "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.name" : "description",
                "key.doc.type" : "Other",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 46,
                "key.name" : "description",
                "key.namelength" : 11,
                "key.nameoffset" : 1977,
                "key.offset" : 1973,
                "key.overrides" : [
                  {
                    "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
                  }
                ],
                "key.parsed_declaration" : "public var description: String",
                "key.parsed_scope.end" : 58,
                "key.parsed_scope.start" : 58,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.typename" : "HTTPClient.NWTLSError.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C10NWTLSErrorVmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C10NWTLSErrorV"
          },
          {
            "key.annotated_decl" : "<Declaration>class NWErrorHandler : <Type usr=\"s:3NIO21ChannelInboundHandlerP\">ChannelInboundHandler<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 60,
                "key.offset" : 2039
              },
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 60,
                "key.offset" : 2039
              },
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 60,
                "key.offset" : 2039
              },
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 60,
                "key.offset" : 2039
              }
            ],
            "key.bodylength" : 806,
            "key.bodyoffset" : 2153,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 21,
                "key.offset" : 2130
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NWErrorHandler<\/decl.name> : <ref.protocol usr=\"s:3NIO21ChannelInboundHandlerP\">ChannelInboundHandler<\/ref.protocol><\/decl.class>",
            "key.inheritedtypes" : [
              {
                "key.name" : "ChannelInboundHandler"
              }
            ],
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 852,
            "key.name" : "NWErrorHandler",
            "key.namelength" : 14,
            "key.nameoffset" : 2114,
            "key.offset" : 2108,
            "key.parsed_declaration" : "class NWErrorHandler: ChannelInboundHandler",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 62,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C14NWErrorHandlerC\">NWErrorHandler<\/Type>.InboundIn = <Type usr=\"s:8NIOHTTP122HTTPClientResponseParta\">HTTPClientResponsePart<\/Type><\/Declaration>",
                "key.doc.column" : 20,
                "key.doc.declaration" : "associatedtype InboundIn",
                "key.doc.discussion" : [
                  {
                    "Note" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/TypeAssistedChannelHandler.swift\" line=\"40\" column=\"20\"><Name>InboundIn<\/Name><USR>s:3NIO21ChannelInboundHandlerP0C2InQa<\/USR><Declaration>associatedtype InboundIn<\/Declaration><CommentParts><Abstract><Para>The type of the inbound data which is wrapped in <codeVoice>NIOAny<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 40,
                "key.doc.name" : "InboundIn",
                "key.doc.type" : "Other",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C14NWErrorHandlerC\">NWErrorHandler<\/ref.class>.<decl.name>InboundIn<\/decl.name> = <ref.typealias usr=\"s:8NIOHTTP122HTTPClientResponseParta\">HTTPClientResponsePart<\/ref.typealias><\/decl.typealias>",
                "key.kind" : "source.lang.swift.decl.typealias",
                "key.length" : 44,
                "key.name" : "InboundIn",
                "key.namelength" : 9,
                "key.nameoffset" : 2176,
                "key.offset" : 2166,
                "key.overrides" : [
                  {
                    "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
                  }
                ],
                "key.parsed_declaration" : "typealias InboundIn = HTTPClientResponsePart",
                "key.parsed_scope.end" : 63,
                "key.parsed_scope.start" : 63,
                "key.typename" : "HTTPPart<HTTPResponseHead, ByteBuffer>.Type",
                "key.typeusr" : "$s8NIOHTTP18HTTPPartOyAA16HTTPResponseHeadV3NIO10ByteBufferVGmD",
                "key.usr" : "s:3NIO21ChannelInboundHandlerP0C2InQa"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func errorCaught(context: <Type usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/Type>, error: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
                "key.bodylength" : 91,
                "key.bodyoffset" : 2288,
                "key.doc.column" : 10,
                "key.doc.declaration" : "func errorCaught(context: NIO.ChannelHandlerContext, error: Error)",
                "key.doc.discussion" : [
                  {
                    "Para" : "This should call `context.fireErrorCaught` to forward the operation to the next `_ChannelInboundHandler` in the `ChannelPipeline` if you want to allow the next handler to also handle the error."
                  },
                  {
                    "Note" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/ChannelHandler.swift\" line=\"215\" column=\"10\"><Name>errorCaught(context:error:)<\/Name><USR>s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF<\/USR><Declaration>func errorCaught(context: NIO.ChannelHandlerContext, error: Error)<\/Declaration><CommentParts><Abstract><Para>An error was encountered earlier in the inbound <codeVoice>ChannelPipeline<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>ChannelHandlerContext<\/codeVoice> which this <codeVoice>ChannelHandler<\/codeVoice> belongs to.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Error<\/codeVoice> that was encountered.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This should call <codeVoice>context.fireErrorCaught<\/codeVoice> to forward the operation to the next <codeVoice>_ChannelInboundHandler<\/codeVoice> in the <codeVoice>ChannelPipeline<\/codeVoice> if you want to allow the next handler to also handle the error.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>_ChannelInboundHandler<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 215,
                "key.doc.name" : "errorCaught(context:error:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The `ChannelHandlerContext` which this `ChannelHandler` belongs to."
                      }
                    ],
                    "name" : "context"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The `Error` that was encountered."
                      }
                    ],
                    "name" : "error"
                  }
                ],
                "key.doc.type" : "Function",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>errorCaught<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>context<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3NIO21ChannelHandlerContextC\">ChannelHandlerContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 156,
                "key.name" : "errorCaught(context:error:)",
                "key.namelength" : 57,
                "key.nameoffset" : 2229,
                "key.offset" : 2224,
                "key.overrides" : [
                  {
                    "key.usr" : "s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF"
                  }
                ],
                "key.parsed_declaration" : "func errorCaught(context: ChannelHandlerContext, error: Error)",
                "key.parsed_scope.end" : 67,
                "key.parsed_scope.start" : 65,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.NWErrorHandler) -> (ChannelHandlerContext, Error) -> ()",
                "key.typeusr" : "$s7context5errory3NIO21ChannelHandlerContextC_s5Error_ptcD",
                "key.usr" : "s:3NIO22_ChannelInboundHandlerP11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>static func translateError(_ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
                "key.bodylength" : 502,
                "key.bodyoffset" : 2447,
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/NWErrorHandler.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>translateError<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 556,
                "key.name" : "translateError(_:)",
                "key.namelength" : 30,
                "key.nameoffset" : 2406,
                "key.offset" : 2394,
                "key.parsed_declaration" : "static func translateError(_ error: Error) -> Error",
                "key.parsed_scope.end" : 81,
                "key.parsed_scope.start" : 69,
                "key.substructure" : [

                ],
                "key.typename" : "(HTTPClient.NWErrorHandler.Type) -> (Error) -> Error",
                "key.typeusr" : "$sys5Error_psAA_pcD",
                "key.usr" : "s:15AsyncHTTPClient0B0C14NWErrorHandlerC14translateErrorys0F0_psAG_pFZ"
              }
            ],
            "key.typename" : "HTTPClient.NWErrorHandler.Type",
            "key.typeusr" : "$s15AsyncHTTPClient0B0C14NWErrorHandlerCmD",
            "key.usr" : "s:15AsyncHTTPClient0B0C14NWErrorHandlerC"
          }
        ],
        "key.typename" : "HTTPClient.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0CmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5265,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>enum TLSVersion<\/Declaration>",
        "key.bodylength" : 399,
        "key.bodyoffset" : 656,
        "key.doc.column" : 13,
        "key.doc.declaration" : "enum TLSVersion",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift\" line=\"23\" column=\"13\"><Name>TLSVersion<\/Name><USR>s:6NIOSSL10TLSVersionO<\/USR><Declaration>enum TLSVersion<\/Declaration><CommentParts><Abstract><Para>Known and supported TLS versions.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 23,
        "key.doc.name" : "TLSVersion",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>TLSVersion<\/decl.name><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 422,
        "key.modulename" : "NIOSSL",
        "key.name" : "TLSVersion",
        "key.namelength" : 10,
        "key.nameoffset" : 644,
        "key.offset" : 634,
        "key.parsed_declaration" : "extension TLSVersion",
        "key.parsed_scope.end" : 36,
        "key.parsed_scope.start" : 22,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var nwTLSProtocolVersion: <Type usr=\"c:@E@tls_protocol_version_t\">tls_protocol_version_t<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 276,
            "key.bodyoffset" : 773,
            "key.doc.column" : 13,
            "key.doc.comment" : "return Network framework TLS protocol version",
            "key.doc.declaration" : "var nwTLSProtocolVersion: tls_protocol_version_t { get }",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift\" line=\"24\" column=\"13\"><Name>nwTLSProtocolVersion<\/Name><USR>s:6NIOSSL10TLSVersionO15AsyncHTTPClientE20nwTLSProtocolVersionSo22tls_protocol_version_tVvp<\/USR><Declaration>var nwTLSProtocolVersion: tls_protocol_version_t { get }<\/Declaration><CommentParts><Abstract><Para>return Network framework TLS protocol version<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 24,
            "key.doc.name" : "nwTLSProtocolVersion",
            "key.doc.type" : "Other",
            "key.doclength" : 50,
            "key.docoffset" : 665,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>nwTLSProtocolVersion<\/decl.name>: <decl.var.type><ref.enum usr=\"c:@E@tls_protocol_version_t\">tls_protocol_version_t<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 327,
            "key.name" : "nwTLSProtocolVersion",
            "key.namelength" : 20,
            "key.nameoffset" : 727,
            "key.offset" : 723,
            "key.parsed_declaration" : "var nwTLSProtocolVersion: tls_protocol_version_t",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 24,
            "key.typename" : "tls_protocol_version_t",
            "key.typeusr" : "$sSo22tls_protocol_version_tVD",
            "key.usr" : "s:6NIOSSL10TLSVersionO15AsyncHTTPClientE20nwTLSProtocolVersionSo22tls_protocol_version_tVvp"
          }
        ],
        "key.typename" : "TLSVersion.Type",
        "key.typeusr" : "$s6NIOSSL10TLSVersionOmD",
        "key.usr" : "s:6NIOSSL10TLSVersionO"
      },
      {
        "key.annotated_decl" : "<Declaration>enum TLSVersion<\/Declaration>",
        "key.bodylength" : 383,
        "key.bodyoffset" : 1084,
        "key.doc.column" : 13,
        "key.doc.declaration" : "enum TLSVersion",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift\" line=\"23\" column=\"13\"><Name>TLSVersion<\/Name><USR>s:6NIOSSL10TLSVersionO<\/USR><Declaration>enum TLSVersion<\/Declaration><CommentParts><Abstract><Para>Known and supported TLS versions.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 23,
        "key.doc.name" : "TLSVersion",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>TLSVersion<\/decl.name><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 406,
        "key.modulename" : "NIOSSL",
        "key.name" : "TLSVersion",
        "key.namelength" : 10,
        "key.nameoffset" : 1072,
        "key.offset" : 1062,
        "key.parsed_declaration" : "extension TLSVersion",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 38,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var sslProtocol: <Type usr=\"c:@E@SSLProtocol\">SSLProtocol<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 303,
            "key.bodyoffset" : 1158,
            "key.doc.column" : 13,
            "key.doc.comment" : "return as SSL protocol",
            "key.doc.declaration" : "var sslProtocol: SSLProtocol { get }",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift\" line=\"40\" column=\"13\"><Name>sslProtocol<\/Name><USR>s:6NIOSSL10TLSVersionO15AsyncHTTPClientE11sslProtocolSo11SSLProtocolVvp<\/USR><Declaration>var sslProtocol: SSLProtocol { get }<\/Declaration><CommentParts><Abstract><Para>return as SSL protocol<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "sslProtocol",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 1093,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sslProtocol<\/decl.name>: <decl.var.type><ref.enum usr=\"c:@E@SSLProtocol\">SSLProtocol<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 334,
            "key.name" : "sslProtocol",
            "key.namelength" : 11,
            "key.nameoffset" : 1132,
            "key.offset" : 1128,
            "key.parsed_declaration" : "var sslProtocol: SSLProtocol",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 40,
            "key.typename" : "SSLProtocol",
            "key.typeusr" : "$sSo11SSLProtocolVD",
            "key.usr" : "s:6NIOSSL10TLSVersionO15AsyncHTTPClientE11sslProtocolSo11SSLProtocolVvp"
          }
        ],
        "key.typename" : "TLSVersion.Type",
        "key.typeusr" : "$s6NIOSSL10TLSVersionOmD",
        "key.usr" : "s:6NIOSSL10TLSVersionO"
      },
      {
        "key.annotated_decl" : "<Declaration>struct TLSConfiguration<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 60,
            "key.offset" : 1474
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 60,
            "key.offset" : 1474
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 60,
            "key.offset" : 1474
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 60,
            "key.offset" : 1474
          }
        ],
        "key.bodylength" : 3688,
        "key.bodyoffset" : 1567,
        "key.doc.column" : 15,
        "key.doc.declaration" : "struct TLSConfiguration",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift\" line=\"157\" column=\"15\"><Name>TLSConfiguration<\/Name><USR>s:6NIOSSL16TLSConfigurationV<\/USR><Declaration>struct TLSConfiguration<\/Declaration><CommentParts><Abstract><Para>Manages configuration of TLS for SwiftNIO programs.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 157,
        "key.doc.name" : "TLSConfiguration",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio-ssl\/Sources\/NIOSSL\/TLSConfiguration.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>TLSConfiguration<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 3717,
        "key.modulename" : "NIOSSL",
        "key.name" : "TLSConfiguration",
        "key.namelength" : 16,
        "key.nameoffset" : 1549,
        "key.offset" : 1539,
        "key.parsed_declaration" : "extension TLSConfiguration",
        "key.parsed_scope.end" : 138,
        "key.parsed_scope.start" : 55,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>static var tlsDispatchQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Dispatch queue used by Network framework TLS to control certificate verification",
            "key.doc.declaration" : "static var tlsDispatchQueue: DispatchQueue",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift\" line=\"57\" column=\"20\"><Name>tlsDispatchQueue<\/Name><USR>s:6NIOSSL16TLSConfigurationV15AsyncHTTPClientE16tlsDispatchQueueSo17OS_dispatch_queueCvpZ<\/USR><Declaration>static var tlsDispatchQueue: DispatchQueue<\/Declaration><CommentParts><Abstract><Para>Dispatch queue used by Network framework TLS to control certificate verification<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 57,
            "key.doc.name" : "tlsDispatchQueue",
            "key.doc.type" : "Other",
            "key.doclength" : 85,
            "key.docoffset" : 1576,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>tlsDispatchQueue<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/ref.class><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 65,
            "key.name" : "tlsDispatchQueue",
            "key.namelength" : 16,
            "key.nameoffset" : 1680,
            "key.offset" : 1669,
            "key.parsed_declaration" : "static var tlsDispatchQueue = DispatchQueue(label: \"TLSDispatch\")",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 57,
            "key.typename" : "DispatchQueue",
            "key.typeusr" : "$sSo17OS_dispatch_queueCD",
            "key.usr" : "s:6NIOSSL16TLSConfigurationV15AsyncHTTPClientE16tlsDispatchQueueSo17OS_dispatch_queueCvpZ"
          },
          {
            "key.annotated_decl" : "<Declaration>func getNWProtocolTLSOptions() -&gt; <Type usr=\"s:7Network13NWProtocolTLSC\">NWProtocolTLS<\/Type>.<Type usr=\"s:7Network13NWProtocolTLSC7OptionsC\">Options<\/Type><\/Declaration>",
            "key.bodylength" : 3175,
            "key.bodyoffset" : 2074,
            "key.doc.column" : 14,
            "key.doc.comment" : "create NWProtocolTLS.Options for use with NIOTransportServices from the NIOSSL TLSConfiguration\n\n- Parameter queue: Dispatch queue to run `sec_protocol_options_set_verify_block` on.\n- Returns: Equivalent NWProtocolTLS Options",
            "key.doc.declaration" : "func getNWProtocolTLSOptions() -> NWProtocolTLS.Options",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift\" line=\"63\" column=\"14\"><Name>getNWProtocolTLSOptions()<\/Name><USR>s:6NIOSSL16TLSConfigurationV15AsyncHTTPClientE23getNWProtocolTLSOptions7Network0F3TLSC7OptionsCyF<\/USR><Declaration>func getNWProtocolTLSOptions() -&gt; NWProtocolTLS.Options<\/Declaration><CommentParts><Abstract><Para>create NWProtocolTLS.Options for use with NIOTransportServices from the NIOSSL TLSConfiguration<\/Para><\/Abstract><Parameters><Parameter><Name>queue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dispatch queue to run <codeVoice>sec_protocol_options_set_verify_block<\/codeVoice> on.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Equivalent NWProtocolTLS Options<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 63,
            "key.doc.name" : "getNWProtocolTLSOptions()",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Dispatch queue to run `sec_protocol_options_set_verify_block` on."
                  }
                ],
                "name" : "queue"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Equivalent NWProtocolTLS Options"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 265,
            "key.docoffset" : 1744,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getNWProtocolTLSOptions<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:7Network13NWProtocolTLSC\">NWProtocolTLS<\/ref.class>.<ref.class usr=\"s:7Network13NWProtocolTLSC7OptionsC\">Options<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 3233,
            "key.name" : "getNWProtocolTLSOptions()",
            "key.namelength" : 25,
            "key.nameoffset" : 2022,
            "key.offset" : 2017,
            "key.parsed_declaration" : "func getNWProtocolTLSOptions() -> NWProtocolTLS.Options",
            "key.parsed_scope.end" : 137,
            "key.parsed_scope.start" : 63,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let options: <Type usr=\"s:7Network13NWProtocolTLSC\">NWProtocolTLS<\/Type>.<Type usr=\"s:7Network13NWProtocolTLSC7OptionsC\">Options<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/NIOTransportServices\/TLSConfiguration.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>options<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Network13NWProtocolTLSC\">NWProtocolTLS<\/ref.class>.<ref.class usr=\"s:7Network13NWProtocolTLSC7OptionsC\">Options<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 37,
                "key.name" : "options",
                "key.namelength" : 7,
                "key.nameoffset" : 2091,
                "key.offset" : 2087,
                "key.parsed_declaration" : "let options = NWProtocolTLS.Options()",
                "key.parsed_scope.end" : 64,
                "key.parsed_scope.start" : 64,
                "key.typename" : "NWProtocolTLS.Options",
                "key.typeusr" : "$s7Network13NWProtocolTLSC7OptionsCD",
                "key.usr" : "s:6NIOSSL16TLSConfigurationV15AsyncHTTPClientE23getNWProtocolTLSOptions7Network0F3TLSC7OptionsCyF7optionsL_AJvp"
              }
            ],
            "key.typename" : "(TLSConfiguration) -> () -> NWProtocolTLS.Options",
            "key.typeusr" : "$s7Network13NWProtocolTLSC7OptionsCycD",
            "key.usr" : "s:6NIOSSL16TLSConfigurationV15AsyncHTTPClientE23getNWProtocolTLSOptions7Network0F3TLSC7OptionsCyF"
          }
        ],
        "key.typename" : "TLSConfiguration.Type",
        "key.typeusr" : "$s6NIOSSL16TLSConfigurationVmD",
        "key.usr" : "s:6NIOSSL16TLSConfigurationV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/RequestValidation.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4998,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct HTTPHeaders : <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s30ExpressibleByDictionaryLiteralP\">ExpressibleByDictionaryLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 4426,
        "key.bodyoffset" : 570,
        "key.doc.column" : 15,
        "key.doc.declaration" : "struct HTTPHeaders : CustomStringConvertible, ExpressibleByDictionaryLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "HTTP header fields are a complex data structure. The most natural representation for these is a sequence of two-tuples of field name and field value, both as strings. This structure preserves that representation, but provides a number of convenience features in addition to it."
          },
          {
            "Para" : "For example, this structure enables access to header fields based on the case-insensitive form of the field name, but preserves the original case of the field when needed. It also supports recomposing headers to a maximally joined or split representation, such that header fields that are able to be repeated can be represented appropriately."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIOHTTP1\/HTTPTypes.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIOHTTP1\/HTTPTypes.swift\" line=\"282\" column=\"15\"><Name>HTTPHeaders<\/Name><USR>s:8NIOHTTP111HTTPHeadersV<\/USR><Declaration>struct HTTPHeaders : CustomStringConvertible, ExpressibleByDictionaryLiteral<\/Declaration><CommentParts><Abstract><Para>A representation of a block of HTTP header fields.<\/Para><\/Abstract><Discussion><Para>HTTP header fields are a complex data structure. The most natural representation for these is a sequence of two-tuples of field name and field value, both as strings. This structure preserves that representation, but provides a number of convenience features in addition to it.<\/Para><Para>For example, this structure enables access to header fields based on the case-insensitive form of the field name, but preserves the original case of the field when needed. It also supports recomposing headers to a maximally joined or split representation, such that header fields that are able to be repeated can be represented appropriately.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 282,
        "key.doc.name" : "HTTPHeaders",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIOHTTP1\/HTTPTypes.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>HTTPHeaders<\/decl.name> : <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s30ExpressibleByDictionaryLiteralP\">ExpressibleByDictionaryLiteral<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4450,
        "key.modulename" : "NIOHTTP1",
        "key.name" : "HTTPHeaders",
        "key.namelength" : 11,
        "key.nameoffset" : 557,
        "key.offset" : 547,
        "key.parsed_declaration" : "extension HTTPHeaders",
        "key.parsed_scope.end" : 130,
        "key.parsed_scope.start" : 18,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>mutating func validate(method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>, body: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/Type>?) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 575
              }
            ],
            "key.bodylength" : 3036,
            "key.bodyoffset" : 650,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/RequestValidation.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>method<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>body<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C4BodyV\">Body<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 3103,
            "key.name" : "validate(method:body:)",
            "key.namelength" : 52,
            "key.nameoffset" : 589,
            "key.offset" : 584,
            "key.parsed_declaration" : "mutating func validate(method: HTTPMethod, body: HTTPClient.Body?) throws",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 19,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var transferEncoding: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/RequestValidation.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>transferEncoding<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "transferEncoding",
                "key.namelength" : 16,
                "key.nameoffset" : 930,
                "key.offset" : 926,
                "key.parsed_declaration" : "var transferEncoding: String?",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.typename" : "String?",
                "key.typeusr" : "$sSSSgD",
                "key.usr" : "s:8NIOHTTP111HTTPHeadersV15AsyncHTTPClientE8validate6method4bodyyAA10HTTPMethodO_AD0D0C4BodyVSgtKF16transferEncodingL_SSSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var contentLength: <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/RequestValidation.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>contentLength<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 23,
                "key.name" : "contentLength",
                "key.namelength" : 13,
                "key.nameoffset" : 968,
                "key.offset" : 964,
                "key.parsed_declaration" : "var contentLength: Int?",
                "key.parsed_scope.end" : 26,
                "key.parsed_scope.start" : 26,
                "key.typename" : "Int?",
                "key.typeusr" : "$sSiSgD",
                "key.usr" : "s:8NIOHTTP111HTTPHeadersV15AsyncHTTPClientE8validate6method4bodyyAA10HTTPMethodO_AD0D0C4BodyVSgtKF13contentLengthL_SiSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let encodings: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/RequestValidation.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>encodings<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 80,
                "key.name" : "encodings",
                "key.namelength" : 9,
                "key.nameoffset" : 1000,
                "key.offset" : 996,
                "key.parsed_declaration" : "let encodings = self[canonicalForm: \"Transfer-Encoding\"].map { $0.lowercased() }",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 27,
                "key.typename" : "[String]",
                "key.typeusr" : "$sSaySSGD",
                "key.usr" : "s:8NIOHTTP111HTTPHeadersV15AsyncHTTPClientE8validate6method4bodyyAA10HTTPMethodO_AD0D0C4BodyVSgtKF9encodingsL_SaySSGvp"
              }
            ],
            "key.typename" : "(inout HTTPHeaders) -> (HTTPMethod, HTTPClient.Body?) throws -> ()",
            "key.typeusr" : "$s6method4bodyy8NIOHTTP110HTTPMethodO_15AsyncHTTPClient0F0C4BodyVSgtKcD",
            "key.usr" : "s:8NIOHTTP111HTTPHeadersV15AsyncHTTPClientE8validate6method4bodyyAA10HTTPMethodO_AD0D0C4BodyVSgtKF"
          },
          {
            "key.annotated_decl" : "<Declaration>func validateFieldNames() throws<\/Declaration>",
            "key.bodylength" : 1267,
            "key.bodyoffset" : 3727,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/RequestValidation.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validateFieldNames<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1302,
            "key.name" : "validateFieldNames()",
            "key.namelength" : 20,
            "key.nameoffset" : 3698,
            "key.offset" : 3693,
            "key.parsed_declaration" : "func validateFieldNames() throws",
            "key.parsed_scope.end" : 129,
            "key.parsed_scope.start" : 95,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let invalidFieldNames: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/RequestValidation.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>invalidFieldNames<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 1115,
                "key.name" : "invalidFieldNames",
                "key.namelength" : 17,
                "key.nameoffset" : 3740,
                "key.offset" : 3736,
                "key.parsed_declaration" : "let invalidFieldNames = self.compactMap { (name, _) -> String? in\n    let satisfy = name.utf8.allSatisfy { (char) -> Bool in\n        switch char {\n        case UInt8(ascii: \"a\")...UInt8(ascii: \"z\"),\n             UInt8(ascii: \"A\")...UInt8(ascii: \"Z\"),\n             UInt8(ascii: \"0\")...UInt8(ascii: \"9\"),\n             UInt8(ascii: \"!\"),\n             UInt8(ascii: \"#\"),\n             UInt8(ascii: \"$\"),\n             UInt8(ascii: \"%\"),\n             UInt8(ascii: \"&\"),\n             UInt8(ascii: \"'\"),\n             UInt8(ascii: \"*\"),\n             UInt8(ascii: \"+\"),\n             UInt8(ascii: \"-\"),\n             UInt8(ascii: \".\"),\n             UInt8(ascii: \"^\"),\n             UInt8(ascii: \"_\"),\n             UInt8(ascii: \"`\"),\n             UInt8(ascii: \"|\"),\n             UInt8(ascii: \"~\"):\n            return true\n        default:\n            return false\n        }\n    }\n\n    return satisfy ? nil : name\n}",
                "key.parsed_scope.end" : 96,
                "key.parsed_scope.start" : 96,
                "key.typename" : "[String]",
                "key.typeusr" : "$sSaySSGD",
                "key.usr" : "s:8NIOHTTP111HTTPHeadersV15AsyncHTTPClientE18validateFieldNamesyyKF07invalidfG0L_SaySSGvp"
              }
            ],
            "key.typename" : "(HTTPHeaders) -> () throws -> ()",
            "key.typeusr" : "$syyKcD",
            "key.usr" : "s:8NIOHTTP111HTTPHeadersV15AsyncHTTPClientE18validateFieldNamesyyKF"
          }
        ],
        "key.typename" : "HTTPHeaders.Type",
        "key.typeusr" : "$s8NIOHTTP111HTTPHeadersVmD",
        "key.usr" : "s:8NIOHTTP111HTTPHeadersV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/StringConvertibleInstances.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 838,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct <Type usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/Type>.Waiter&lt;ConnectionType&gt; where ConnectionType : <Type usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/Type><\/Declaration>",
        "key.bodylength" : 105,
        "key.bodyoffset" : 581,
        "key.doc.column" : 12,
        "key.doc.declaration" : "struct AsyncHTTPClient.HTTP1ConnectionProvider.Waiter<ConnectionType> where ConnectionType : AsyncHTTPClient.PoolManageableConnection",
        "key.doc.discussion" : [
          {
            "Para" : "`Waiter`s are created when `maximumConcurrentConnections` is reached and we cannot create new connections anymore."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift\" line=\"423\" column=\"12\"><Name>Waiter<\/Name><USR>s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV<\/USR><Declaration>struct AsyncHTTPClient.HTTP1ConnectionProvider.Waiter&lt;ConnectionType&gt; where ConnectionType : AsyncHTTPClient.PoolManageableConnection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Waiter<\/codeVoice> represents a request that waits for a connection when none is currently available<\/Para><\/Abstract><Discussion><Para><codeVoice>Waiter<\/codeVoice>s are created when <codeVoice>maximumConcurrentConnections<\/codeVoice> is reached and we cannot create new connections anymore.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 423,
        "key.doc.name" : "Waiter",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 556
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/ConnectionPool.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC\">HTTP1ConnectionProvider<\/ref.class>.<decl.name>Waiter<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV0D4Typexmfp\"><decl.generic_type_param.name>ConnectionType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>ConnectionType : <ref.protocol usr=\"s:15AsyncHTTPClient24PoolManageableConnectionP\">PoolManageableConnection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CustomStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 173,
        "key.name" : "HTTP1ConnectionProvider.Waiter",
        "key.namelength" : 30,
        "key.nameoffset" : 524,
        "key.offset" : 514,
        "key.parsed_declaration" : "extension HTTP1ConnectionProvider.Waiter: CustomStringConvertible",
        "key.parsed_scope.end" : 19,
        "key.parsed_scope.start" : 15,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 73,
            "key.bodyoffset" : 611,
            "key.doc.declaration" : "var description: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/StringConvertibleInstances.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 99,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 590,
            "key.offset" : 586,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "var description: String",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 16,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
          }
        ],
        "key.typename" : "HTTP1ConnectionProvider.Waiter<ConnectionType>.Type",
        "key.typeusr" : "$s15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterVy_xGmD",
        "key.usr" : "s:15AsyncHTTPClient23HTTP1ConnectionProviderC6WaiterV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.EventLoopPreference<\/Declaration>",
        "key.bodylength" : 80,
        "key.bodyoffset" : 756,
        "key.doc.column" : 19,
        "key.doc.declaration" : "public struct AsyncHTTPClient.HTTPClient.EventLoopPreference",
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift\" line=\"746\" column=\"19\"><Name>EventLoopPreference<\/Name><USR>s:15AsyncHTTPClient0B0C19EventLoopPreferenceV<\/USR><Declaration>public struct AsyncHTTPClient.HTTPClient.EventLoopPreference<\/Declaration><CommentParts><Abstract><Para>Specifies how the library will treat event loop passed by the user.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 746,
        "key.doc.name" : "EventLoopPreference",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 731
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPClient.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<decl.name>EventLoopPreference<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CustomStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 148,
        "key.name" : "HTTPClient.EventLoopPreference",
        "key.namelength" : 30,
        "key.nameoffset" : 699,
        "key.offset" : 689,
        "key.parsed_declaration" : "extension HTTPClient.EventLoopPreference: CustomStringConvertible",
        "key.parsed_scope.end" : 25,
        "key.parsed_scope.start" : 21,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 761
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 793,
            "key.doc.declaration" : "var description: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/StringConvertibleInstances.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 67,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 772,
            "key.offset" : 768,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 22,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
          }
        ],
        "key.typename" : "HTTPClient.EventLoopPreference.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B0C19EventLoopPreferenceVmD",
        "key.usr" : "s:15AsyncHTTPClient0B0C19EventLoopPreferenceV"
      }
    ]
  }
}, {
  "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 9156,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>@frozen struct String<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 682
          }
        ],
        "key.bodylength" : 266,
        "key.bodyoffset" : 709,
        "key.doc.declaration" : "@frozen struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>@frozen struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 285,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 701,
        "key.offset" : 691,
        "key.parsed_declaration" : "internal extension String",
        "key.parsed_scope.end" : 35,
        "key.parsed_scope.start" : 25,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var isIPAddress: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 236,
            "key.bodyoffset" : 737,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isIPAddress<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 260,
            "key.name" : "isIPAddress",
            "key.namelength" : 11,
            "key.nameoffset" : 718,
            "key.offset" : 714,
            "key.parsed_declaration" : "var isIPAddress: Bool",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 26,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:SS15AsyncHTTPClientE11isIPAddressSbvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var ipv4Addr: <Type usr=\"c:@S@in_addr\">in_addr<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>ipv4Addr<\/decl.name>: <decl.var.type><ref.struct usr=\"c:@S@in_addr\">in_addr<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 24,
            "key.name" : "ipv4Addr",
            "key.namelength" : 8,
            "key.nameoffset" : 750,
            "key.offset" : 746,
            "key.parsed_declaration" : "var ipv4Addr = in_addr()",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 27,
            "key.typename" : "in_addr",
            "key.typeusr" : "$sSo7in_addrVD",
            "key.usr" : "s:SS15AsyncHTTPClientE11isIPAddressSbvg8ipv4AddrL_So7in_addrVvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var ipv6Addr: <Type usr=\"c:@S@in6_addr\">in6_addr<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>ipv6Addr<\/decl.name>: <decl.var.type><ref.struct usr=\"c:@S@in6_addr\">in6_addr<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 25,
            "key.name" : "ipv6Addr",
            "key.namelength" : 8,
            "key.nameoffset" : 783,
            "key.offset" : 779,
            "key.parsed_declaration" : "var ipv6Addr = in6_addr()",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 28,
            "key.typename" : "in6_addr",
            "key.typeusr" : "$sSo8in6_addrVD",
            "key.usr" : "s:SS15AsyncHTTPClientE11isIPAddressSbvg8ipv6AddrL_So8in6_addrVvp"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class HTTPClientCopyingDelegate : <Type usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 985
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 978
          }
        ],
        "key.bodylength" : 485,
        "key.bodyoffset" : 1052,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 26,
            "key.offset" : 1024
          }
        ],
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HTTPClientCopyingDelegate<\/decl.name> : <ref.protocol usr=\"s:15AsyncHTTPClient0B16ResponseDelegateP\">HTTPClientResponseDelegate<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPClientResponseDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 547,
        "key.name" : "HTTPClientCopyingDelegate",
        "key.namelength" : 25,
        "key.nameoffset" : 997,
        "key.offset" : 991,
        "key.parsed_declaration" : "public final class HTTPClientCopyingDelegate: HTTPClientResponseDelegate",
        "key.parsed_scope.end" : 53,
        "key.parsed_scope.start" : 37,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias <Type usr=\"s:15AsyncHTTPClient0B15CopyingDelegateC\">HTTPClientCopyingDelegate<\/Type>.Response = <Type usr=\"s:s4Voida\">Void<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1057
              }
            ],
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.class usr=\"s:15AsyncHTTPClient0B15CopyingDelegateC\">HTTPClientCopyingDelegate<\/ref.class>.<decl.name>Response<\/decl.name> = <ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 25,
            "key.name" : "Response",
            "key.namelength" : 8,
            "key.nameoffset" : 1074,
            "key.offset" : 1064,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP0C0Qa"
              }
            ],
            "key.parsed_declaration" : "public typealias Response = Void",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.typename" : "().Type",
            "key.typeusr" : "$sytmD",
            "key.usr" : "s:15AsyncHTTPClient0B15CopyingDelegateC8Responsea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let chunkHandler: (<Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>chunkHandler<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 55,
            "key.name" : "chunkHandler",
            "key.namelength" : 12,
            "key.nameoffset" : 1099,
            "key.offset" : 1095,
            "key.parsed_declaration" : "let chunkHandler: (ByteBuffer) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.typename" : "(ByteBuffer) -> EventLoopFuture<()>",
            "key.typeusr" : "$sy3NIO15EventLoopFutureCyytGAA10ByteBufferVcD",
            "key.usr" : "s:15AsyncHTTPClient0B15CopyingDelegateC12chunkHandlery3NIO15EventLoopFutureCyytGAE10ByteBufferVcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(chunkHandler: @escaping (<Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1156
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 1232,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>chunkHandler<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 116,
            "key.name" : "init(chunkHandler:)",
            "key.namelength" : 67,
            "key.nameoffset" : 1163,
            "key.offset" : 1163,
            "key.parsed_declaration" : "public init(chunkHandler: @escaping (ByteBuffer) -> EventLoopFuture<Void>)",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 42,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientCopyingDelegate.Type) -> (@escaping (ByteBuffer) -> EventLoopFuture<()>) -> HTTPClientCopyingDelegate",
            "key.typeusr" : "$s12chunkHandler15AsyncHTTPClient0D15CopyingDelegateC3NIO15EventLoopFutureCyytGAE10ByteBufferVc_tcD",
            "key.usr" : "s:15AsyncHTTPClient0B15CopyingDelegateC12chunkHandlerAC3NIO15EventLoopFutureCyytGAE10ByteBufferVc_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didReceiveBodyPart(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;, _ buffer: <Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1285
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 1393,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didReceiveBodyPart(task: HTTPClient.Task<Response>, _ buffer: ByteBuffer) -> EventLoopFuture<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"465\" column=\"10\"><Name>didReceiveBodyPart(task:_:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF<\/USR><Declaration>func didReceiveBodyPart(task: HTTPClient.Task&lt;Response&gt;, _ buffer: ByteBuffer) -&gt; EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called when part of a response body is received. Could be called zero or more times. You must return an <codeVoice>EventLoopFuture&lt;Void&gt;<\/codeVoice> that you complete when you have finished processing the body part. You can create an already succeeded future by calling <codeVoice>task.eventLoop.makeSucceededFuture(())<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>buffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Received body <codeVoice>Part<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>EventLoopFuture<\/codeVoice> that will be used for backpressure.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 465,
            "key.doc.name" : "didReceiveBodyPart(task:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Received body `Part`."
                  }
                ],
                "name" : "buffer"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`EventLoopFuture` that will be used for backpressure."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didReceiveBodyPart<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>buffer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 148,
            "key.name" : "didReceiveBodyPart(task:_:)",
            "key.namelength" : 69,
            "key.nameoffset" : 1297,
            "key.offset" : 1292,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
              }
            ],
            "key.parsed_declaration" : "public func didReceiveBodyPart(task: HTTPClient.Task<Void>, _ buffer: ByteBuffer) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 46,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientCopyingDelegate) -> (HTTPClient.Task<()>, ByteBuffer) -> EventLoopFuture<()>",
            "key.typeusr" : "$s4task_3NIO15EventLoopFutureCyytG15AsyncHTTPClient0G0C4TaskCy_ytG_AB10ByteBufferVtcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP18didReceiveBodyPart4task_3NIO15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_AF10ByteBufferVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didFinishRequest(task: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1446
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 1512,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func didFinishRequest(task: HTTPClient.Task<Response>) throws -> Response",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/HTTPHandler.swift\" line=\"479\" column=\"10\"><Name>didFinishRequest(task:)<\/Name><USR>s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF<\/USR><Declaration>func didFinishRequest(task: HTTPClient.Task&lt;Response&gt;) throws -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Called when the complete HTTP request is finished. You must return an instance of your <codeVoice>Response<\/codeVoice> associated type. Will be called once, except if an error occurred.<\/Para><\/Abstract><Parameters><Parameter><Name>task<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Current request context.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Result of processing.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>HTTPClientResponseDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 479,
            "key.doc.name" : "didFinishRequest(task:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Current request context."
                  }
                ],
                "name" : "task"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Result of processing."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didFinishRequest<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>task<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.class usr=\"s:15AsyncHTTPClient0B0C4TaskC\">Task<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 83,
            "key.name" : "didFinishRequest(task:)",
            "key.namelength" : 45,
            "key.nameoffset" : 1458,
            "key.offset" : 1453,
            "key.overrides" : [
              {
                "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF"
              }
            ],
            "key.parsed_declaration" : "public func didFinishRequest(task: HTTPClient.Task<Void>) throws",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 50,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPClientCopyingDelegate) -> (HTTPClient.Task<()>) throws -> ()",
            "key.typeusr" : "$s4tasky15AsyncHTTPClient0C0C4TaskCy_ytG_tKcD",
            "key.usr" : "s:15AsyncHTTPClient0B16ResponseDelegateP16didFinishRequest4task0C0QzAA0B0C4TaskCy_AGG_tKF"
          }
        ],
        "key.typename" : "HTTPClientCopyingDelegate.Type",
        "key.typeusr" : "$s15AsyncHTTPClient0B15CopyingDelegateCmD",
        "key.usr" : "s:15AsyncHTTPClient0B15CopyingDelegateC"
      },
      {
        "key.annotated_decl" : "<Declaration>final class ClientBootstrap : <Type usr=\"s:3NIO29NIOClientTCPBootstrapProtocolP\">NIOClientTCPBootstrapProtocol<\/Type><\/Declaration>",
        "key.bodylength" : 878,
        "key.bodyoffset" : 1567,
        "key.doc.column" : 20,
        "key.doc.declaration" : "final class ClientBootstrap : NIO.NIOClientTCPBootstrapProtocol",
        "key.doc.discussion" : [
          {
            "Para" : "Usually you re-use a `ClientBootstrap` once you set it up and called `connect` multiple times on it. This way you ensure that the same `EventLoop`s will be shared across all your connections."
          },
          {
            "Para" : "Example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The connected `SocketChannel` will operate on `ByteBuffer` as inbound and on `IOData` as outbound messages."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/Bootstrap.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/Bootstrap.swift\" line=\"438\" column=\"20\"><Name>ClientBootstrap<\/Name><USR>s:3NIO15ClientBootstrapC<\/USR><Declaration>final class ClientBootstrap : NIO.NIOClientTCPBootstrapProtocol<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>ClientBootstrap<\/codeVoice> is an easy way to bootstrap a <codeVoice>SocketChannel<\/codeVoice> when creating network clients.<\/Para><\/Abstract><Discussion><Para>Usually you re-use a <codeVoice>ClientBootstrap<\/codeVoice> once you set it up and called <codeVoice>connect<\/codeVoice> multiple times on it. This way you ensure that the same <codeVoice>EventLoop<\/codeVoice>s will be shared across all your connections.<\/Para><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    let group = MultiThreadedEventLoopGroup(numberOfThreads: 1)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    defer {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        try! group.syncShutdownGracefully()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let bootstrap = ClientBootstrap(group: group)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Enable SO_REUSEADDR.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .channelOption(ChannelOptions.socketOption(.so_reuseaddr), value: 1)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .channelInitializer { channel in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ always instantiate the handler _within_ the closure as]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ it may be called multiple times (for example if the hostname]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ resolves to both IPv4 and IPv6 addresses, cf. Happy Eyeballs).]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            channel.pipeline.addHandler(MyChannelHandler())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try! bootstrap.connect(host: \"example.org\", port: 12345).wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/* the Channel is now connected *\/]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The connected <codeVoice>SocketChannel<\/codeVoice> will operate on <codeVoice>ByteBuffer<\/codeVoice> as inbound and on <codeVoice>IOData<\/codeVoice> as outbound messages.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 438,
        "key.doc.name" : "ClientBootstrap",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/Bootstrap.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ClientBootstrap<\/decl.name> : <ref.protocol usr=\"s:3NIO29NIOClientTCPBootstrapProtocolP\">NIOClientTCPBootstrapProtocol<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 906,
        "key.modulename" : "NIO",
        "key.name" : "ClientBootstrap",
        "key.namelength" : 15,
        "key.nameoffset" : 1550,
        "key.offset" : 1540,
        "key.parsed_declaration" : "extension ClientBootstrap",
        "key.parsed_scope.end" : 72,
        "key.parsed_scope.start" : 55,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate func makeClientTCPBootstrap(host: <Type usr=\"s:SS\">String<\/Type>, requiresTLS: <Type usr=\"s:Sb\">Bool<\/Type>, configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>) throws -&gt; <Type usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 1572
              }
            ],
            "key.bodylength" : 694,
            "key.bodyoffset" : 1749,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeClientTCPBootstrap<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requiresTLS<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 860,
            "key.name" : "makeClientTCPBootstrap(host:requiresTLS:configuration:)",
            "key.namelength" : 126,
            "key.nameoffset" : 1589,
            "key.offset" : 1584,
            "key.parsed_declaration" : "fileprivate func makeClientTCPBootstrap(\n    host: String,\n    requiresTLS: Bool,\n    configuration: HTTPClient.Configuration\n) throws -> NIOClientTCPBootstrap",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 56,
            "key.substructure" : [

            ],
            "key.typename" : "(ClientBootstrap) -> (String, Bool, HTTPClient.Configuration) throws -> NIOClientTCPBootstrap",
            "key.typeusr" : "$s4host11requiresTLS13configuration3NIO21NIOClientTCPBootstrapVSS_Sb15AsyncHTTPClient0I0C13ConfigurationVtKcD",
            "key.usr" : "s:3NIO15ClientBootstrapC15AsyncHTTPClientE04makeB12TCPBootstrap33_F09FEA0CE963ED6C14D58517751BD4BCLL4host11requiresTLS13configurationAA09NIOClientG0VSS_SbAD0E0C13ConfigurationVtKF"
          }
        ],
        "key.typename" : "ClientBootstrap.Type",
        "key.typeusr" : "$s3NIO15ClientBootstrapCmD",
        "key.usr" : "s:3NIO15ClientBootstrapC"
      },
      {
        "key.annotated_decl" : "<Declaration>struct NIOClientTCPBootstrap<\/Declaration>",
        "key.bodylength" : 6373,
        "key.bodyoffset" : 2481,
        "key.doc.column" : 15,
        "key.doc.declaration" : "struct NIOClientTCPBootstrap",
        "key.doc.discussion" : [
          {
            "Para" : "Usually, to bootstrap a connection with SwiftNIO, you have to match the right `EventLoopGroup`, the right bootstrap, and the right TLS implementation. Typical choices involve:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "Bootstrapping connections that way works but is quite tedious for packages that support multiple ways of bootstrapping. The idea behind `NIOClientTCPBootstrap` is to do all configuration in one place (when you initialize a `NIOClientTCPBootstrap`) and then have a common API that works for all use-cases."
          },
          {
            "Para" : "Example:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/UniversalBootstrapSupport.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/UniversalBootstrapSupport.swift\" line=\"142\" column=\"15\"><Name>NIOClientTCPBootstrap<\/Name><USR>s:3NIO21NIOClientTCPBootstrapV<\/USR><Declaration>struct NIOClientTCPBootstrap<\/Declaration><CommentParts><Abstract><Para><codeVoice>NIOClientTCPBootstrap<\/codeVoice> is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets, NIO Transport Services, or other ways.<\/Para><\/Abstract><Discussion><Para>Usually, to bootstrap a connection with SwiftNIO, you have to match the right <codeVoice>EventLoopGroup<\/codeVoice>, the right bootstrap, and the right TLS implementation. Typical choices involve:<\/Para><List-Bullet><Item><Para><codeVoice>MultiThreadedEventLoopGroup<\/codeVoice>, <codeVoice>ClientBootstrap<\/codeVoice>, and <codeVoice>NIOSSLClientHandler<\/codeVoice> (from <Link href=\"https:\/\/github.com\/apple\/swift-nio-ssl\"><codeVoice>swift-nio-ssl<\/codeVoice><\/Link>) for NIO on BSD sockets.<\/Para><\/Item><Item><Para><codeVoice>NIOTSEventLoopGroup<\/codeVoice>, <codeVoice>NIOTSConnectionBootstrap<\/codeVoice>, and the Network.framework TLS implementation (all from <Link href=\"https:\/\/github.com\/apple\/swift-nio-transport-services\"><codeVoice>swift-nio-transport-services<\/codeVoice><\/Link>.<\/Para><\/Item><\/List-Bullet><Para>Bootstrapping connections that way works but is quite tedious for packages that support multiple ways of bootstrapping. The idea behind <codeVoice>NIOClientTCPBootstrap<\/codeVoice> is to do all configuration in one place (when you initialize a <codeVoice>NIOClientTCPBootstrap<\/codeVoice>) and then have a common API that works for all use-cases.<\/Para><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ This function combines the right pieces and returns you a \"universal client bootstrap\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ (`NIOClientTCPBootstrap`). This allows you to bootstrap connections (with or without TLS) using either the]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ NIO on sockets (`NIO`) or NIO on Network.framework (`NIOTransportServices`) stacks.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The remainder of the code should be platform-independent.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[func makeUniversalBootstrap(serverHostname: String) throws -> (NIOClientTCPBootstrap, EventLoopGroup) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func useNIOOnSockets() throws -> (NIOClientTCPBootstrap, EventLoopGroup) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        let group = MultiThreadedEventLoopGroup(numberOfThreads: 1)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        let sslContext = try NIOSSLContext(configuration: TLSConfiguration.forClient())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        let bootstrap = try NIOClientTCPBootstrap(ClientBootstrap(group: group),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                                                  tls: NIOSSLClientTLSProvider(context: sslContext,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                                                                               serverHostname: serverHostname))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return (bootstrap, group)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    #if canImport(Network)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if #available(macOS 10.14, iOS 12, tvOS 12, watchOS 3, *) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ We run on a new-enough Darwin so we can use Network.framework]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        let group = NIOTSEventLoopGroup()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        let bootstrap = NIOClientTCPBootstrap(NIOTSConnectionBootstrap(group: group),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                                              tls: NIOTSClientTLSProvider())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return (bootstrap, group)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ We're on Darwin but not new enough for Network.framework, so we fall back on NIO on BSD sockets.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return try useNIOOnSockets()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    #else]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ We are on a non-Darwin platform, so we'll use BSD sockets.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return try useNIOOnSockets()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    #endif]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let (bootstrap, group) = try makeUniversalBootstrap(serverHostname: \"example.com\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let connection = try bootstrap]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .channelInitializer { channel in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            channel.pipeline.addHandler(PrintEverythingHandler { _ in })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .enableTLS()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .connect(host: \"example.com\", port: 443)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 142,
        "key.doc.name" : "NIOClientTCPBootstrap",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/swift-nio\/Sources\/NIO\/UniversalBootstrapSupport.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NIOClientTCPBootstrap<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 6407,
        "key.modulename" : "NIO",
        "key.name" : "NIOClientTCPBootstrap",
        "key.namelength" : 21,
        "key.nameoffset" : 2458,
        "key.offset" : 2448,
        "key.parsed_declaration" : "extension NIOClientTCPBootstrap",
        "key.parsed_scope.end" : 200,
        "key.parsed_scope.start" : 74,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate static func makeBootstrap(on eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, host: <Type usr=\"s:SS\">String<\/Type>, requiresTLS: <Type usr=\"s:Sb\">Bool<\/Type>, configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>) throws -&gt; <Type usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 2585
              }
            ],
            "key.bodylength" : 2113,
            "key.bodyoffset" : 2793,
            "key.doc.column" : 29,
            "key.doc.comment" : "create a TCP Bootstrap based off what type of `EventLoop` has been passed to the function.",
            "key.doc.declaration" : "fileprivate static func makeBootstrap(on eventLoop: EventLoop, host: String, requiresTLS: Bool, configuration: HTTPClient.Configuration) throws -> NIOClientTCPBootstrap",
            "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift\" line=\"76\" column=\"29\"><Name>makeBootstrap(on:host:requiresTLS:configuration:)<\/Name><USR>s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE13makeBootstrap33_F09FEA0CE963ED6C14D58517751BD4BCLL2on4host11requiresTLS13configurationAcA9EventLoop_p_SSSbAD0E0C13ConfigurationVtKFZ<\/USR><Declaration>fileprivate static func makeBootstrap(on eventLoop: EventLoop, host: String, requiresTLS: Bool, configuration: HTTPClient.Configuration) throws -&gt; NIOClientTCPBootstrap<\/Declaration><CommentParts><Abstract><Para>create a TCP Bootstrap based off what type of <codeVoice>EventLoop<\/codeVoice> has been passed to the function.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 76,
            "key.doc.name" : "makeBootstrap(on:host:requiresTLS:configuration:)",
            "key.doc.type" : "Function",
            "key.doclength" : 95,
            "key.docoffset" : 2486,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeBootstrap<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoop<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requiresTLS<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 2310,
            "key.name" : "makeBootstrap(on:host:requiresTLS:configuration:)",
            "key.namelength" : 150,
            "key.nameoffset" : 2609,
            "key.offset" : 2597,
            "key.parsed_declaration" : "fileprivate static func makeBootstrap(\n    on eventLoop: EventLoop,\n    host: String,\n    requiresTLS: Bool,\n    configuration: HTTPClient.Configuration\n) throws -> NIOClientTCPBootstrap",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 76,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var bootstrap: <Type usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bootstrap<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 36,
                "key.name" : "bootstrap",
                "key.namelength" : 9,
                "key.nameoffset" : 2806,
                "key.offset" : 2802,
                "key.parsed_declaration" : "var bootstrap: NIOClientTCPBootstrap",
                "key.parsed_scope.end" : 82,
                "key.parsed_scope.start" : 82,
                "key.typename" : "NIOClientTCPBootstrap",
                "key.typeusr" : "$s3NIO21NIOClientTCPBootstrapVD",
                "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE13makeBootstrap33_F09FEA0CE963ED6C14D58517751BD4BCLL2on4host11requiresTLS13configurationAcA9EventLoop_p_SSSbAD0E0C13ConfigurationVtKFZ9bootstrapL_ACvp"
              }
            ],
            "key.typename" : "(NIOClientTCPBootstrap.Type) -> (EventLoop, String, Bool, HTTPClient.Configuration) throws -> NIOClientTCPBootstrap",
            "key.typeusr" : "$s2on4host11requiresTLS13configuration3NIO21NIOClientTCPBootstrapVAE9EventLoop_p_SSSb15AsyncHTTPClient0L0C13ConfigurationVtKcD",
            "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE13makeBootstrap33_F09FEA0CE963ED6C14D58517751BD4BCLL2on4host11requiresTLS13configurationAcA9EventLoop_p_SSSbAD0E0C13ConfigurationVtKFZ"
          },
          {
            "key.annotated_decl" : "<Declaration>static func makeHTTPClientBootstrapBase(on eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, host: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>, requiresTLS: <Type usr=\"s:Sb\">Bool<\/Type>, configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>) throws -&gt; <Type usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/Type><\/Declaration>",
            "key.bodylength" : 737,
            "key.bodyoffset" : 5142,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeHTTPClientBootstrapBase<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>eventLoop<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>host<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requiresTLS<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 967,
            "key.name" : "makeHTTPClientBootstrapBase(on:host:port:requiresTLS:configuration:)",
            "key.namelength" : 183,
            "key.nameoffset" : 4925,
            "key.offset" : 4913,
            "key.parsed_declaration" : "static func makeHTTPClientBootstrapBase(\n    on eventLoop: EventLoop,\n    host: String,\n    port: Int,\n    requiresTLS: Bool,\n    configuration: HTTPClient.Configuration\n) throws -> NIOClientTCPBootstrap",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 121,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOClientTCPBootstrap.Type) -> (EventLoop, String, Int, Bool, HTTPClient.Configuration) throws -> NIOClientTCPBootstrap",
            "key.typeusr" : "$s2on4host4port11requiresTLS13configuration3NIO21NIOClientTCPBootstrapVAF9EventLoop_p_SSSiSb15AsyncHTTPClient0M0C13ConfigurationVtKcD",
            "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE04makeE13BootstrapBase2on4host4port11requiresTLS13configurationAcA9EventLoop_p_SSSiSbAD0E0C13ConfigurationVtKFZ"
          },
          {
            "key.annotated_decl" : "<Declaration>static func makeHTTP1Channel(destination: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type>, eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type>, configuration: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/Type>, preference: <Type usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/Type>.<Type usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 2768,
            "key.bodyoffset" : 6084,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeHTTP1Channel<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>destination<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventLoop<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>preference<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:15AsyncHTTPClient0B0C\">HTTPClient<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV\">EventLoopPreference<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 2967,
            "key.name" : "makeHTTP1Channel(destination:eventLoop:configuration:preference:)",
            "key.namelength" : 156,
            "key.nameoffset" : 5898,
            "key.offset" : 5886,
            "key.parsed_declaration" : "static func makeHTTP1Channel(destination: ConnectionPool.Key, eventLoop: EventLoop, configuration: HTTPClient.Configuration, preference: HTTPClient.EventLoopPreference) -> EventLoopFuture<Channel>",
            "key.parsed_scope.end" : 199,
            "key.parsed_scope.start" : 142,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let channelEventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>channelEventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 60,
                "key.name" : "channelEventLoop",
                "key.namelength" : 16,
                "key.nameoffset" : 6097,
                "key.offset" : 6093,
                "key.parsed_declaration" : "let channelEventLoop = preference.bestEventLoop ?? eventLoop",
                "key.parsed_scope.end" : 143,
                "key.parsed_scope.start" : 143,
                "key.typename" : "EventLoop",
                "key.typeusr" : "$s3NIO9EventLoop_pD",
                "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE16makeHTTP1Channel11destination9eventLoop13configuration10preferenceAA05EventK6FutureCyAA0H0_pGAD14ConnectionPoolC3KeyV_AA0nK0_pAD0E0C13ConfigurationVAT0nK10PreferenceVtFZ07channelnK0L_AaR_pvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let key: <Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/Type>.<Type usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.class usr=\"s:15AsyncHTTPClient14ConnectionPoolC\">ConnectionPool<\/ref.class>.<ref.struct usr=\"s:15AsyncHTTPClient14ConnectionPoolC3KeyV\">Key<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "key",
                "key.namelength" : 3,
                "key.nameoffset" : 6167,
                "key.offset" : 6163,
                "key.parsed_declaration" : "let key = destination",
                "key.parsed_scope.end" : 145,
                "key.parsed_scope.start" : 145,
                "key.typename" : "ConnectionPool.Key",
                "key.typeusr" : "$s15AsyncHTTPClient14ConnectionPoolC3KeyVD",
                "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE16makeHTTP1Channel11destination9eventLoop13configuration10preferenceAA05EventK6FutureCyAA0H0_pGAD14ConnectionPoolC3KeyV_AA0nK0_pAD0E0C13ConfigurationVAT0nK10PreferenceVtFZ3keyL_AQvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let requiresTLS: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>requiresTLS<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 40,
                "key.name" : "requiresTLS",
                "key.namelength" : 11,
                "key.nameoffset" : 6198,
                "key.offset" : 6194,
                "key.parsed_declaration" : "let requiresTLS = key.scheme.requiresTLS",
                "key.parsed_scope.end" : 147,
                "key.parsed_scope.start" : 147,
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE16makeHTTP1Channel11destination9eventLoop13configuration10preferenceAA05EventK6FutureCyAA0H0_pGAD14ConnectionPoolC3KeyV_AA0nK0_pAD0E0C13ConfigurationVAT0nK10PreferenceVtFZ11requiresTLSL_Sbvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let bootstrap: <Type usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>bootstrap<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO21NIOClientTCPBootstrapV\">NIOClientTCPBootstrap<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 36,
                "key.name" : "bootstrap",
                "key.namelength" : 9,
                "key.nameoffset" : 6247,
                "key.offset" : 6243,
                "key.parsed_declaration" : "let bootstrap: NIOClientTCPBootstrap",
                "key.parsed_scope.end" : 148,
                "key.parsed_scope.start" : 148,
                "key.typename" : "NIOClientTCPBootstrap",
                "key.typeusr" : "$s3NIO21NIOClientTCPBootstrapVD",
                "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE16makeHTTP1Channel11destination9eventLoop13configuration10preferenceAA05EventK6FutureCyAA0H0_pGAD14ConnectionPoolC3KeyV_AA0nK0_pAD0E0C13ConfigurationVAT0nK10PreferenceVtFZ9bootstrapL_ACvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let channel: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:3NIO7ChannelP\">Channel<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>channel<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.protocol usr=\"s:3NIO7ChannelP\">Channel<\/ref.protocol>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 37,
                "key.name" : "channel",
                "key.namelength" : 7,
                "key.nameoffset" : 6582,
                "key.offset" : 6578,
                "key.parsed_declaration" : "let channel: EventLoopFuture<Channel>",
                "key.parsed_scope.end" : 155,
                "key.parsed_scope.start" : 155,
                "key.typename" : "EventLoopFuture<Channel>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCyAA7Channel_pGD",
                "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE16makeHTTP1Channel11destination9eventLoop13configuration10preferenceAA05EventK6FutureCyAA0H0_pGAD14ConnectionPoolC3KeyV_AA0nK0_pAD0E0C13ConfigurationVAT0nK10PreferenceVtFZ7channelL_AMvp"
              }
            ],
            "key.typename" : "(NIOClientTCPBootstrap.Type) -> (ConnectionPool.Key, EventLoop, HTTPClient.Configuration, HTTPClient.EventLoopPreference) -> EventLoopFuture<Channel>",
            "key.typeusr" : "$s11destination9eventLoop13configuration10preference3NIO05EventC6FutureCyAE7Channel_pG15AsyncHTTPClient14ConnectionPoolC3KeyV_AE0gC0_pAJ0K0C13ConfigurationVAQ0gC10PreferenceVtcD",
            "key.usr" : "s:3NIO21NIOClientTCPBootstrapV15AsyncHTTPClientE16makeHTTP1Channel11destination9eventLoop13configuration10preferenceAA05EventK6FutureCyAA0H0_pGAD14ConnectionPoolC3KeyV_AA0nK0_pAD0E0C13ConfigurationVAT0nK10PreferenceVtFZ"
          }
        ],
        "key.typename" : "NIOClientTCPBootstrap.Type",
        "key.typeusr" : "$s3NIO21NIOClientTCPBootstrapVmD",
        "key.usr" : "s:3NIO21NIOClientTCPBootstrapV"
      },
      {
        "key.annotated_decl" : "<Declaration>class Connection<\/Declaration>",
        "key.bodylength" : 275,
        "key.bodyoffset" : 8879,
        "key.doc.column" : 7,
        "key.doc.declaration" : "class Connection",
        "key.doc.discussion" : [
          {
            "Para" : "In the `ConnectionPool`, each `Channel` belongs to a given `HTTP1ConnectionProvider` and has a certain “lease state” (see the `inUse` property). The role of `Connection` is to model this by storing a `Channel` alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released."
          }
        ],
        "key.doc.file" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift\" line=\"30\" column=\"7\"><Name>Connection<\/Name><USR>s:15AsyncHTTPClient10ConnectionC<\/USR><Declaration>class Connection<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Connection<\/codeVoice> represents a <codeVoice>Channel<\/codeVoice> in the context of the connection pool<\/Para><\/Abstract><Discussion><Para>In the <codeVoice>ConnectionPool<\/codeVoice>, each <codeVoice>Channel<\/codeVoice> belongs to a given <codeVoice>HTTP1ConnectionProvider<\/codeVoice> and has a certain “lease state” (see the <codeVoice>inUse<\/codeVoice> property). The role of <codeVoice>Connection<\/codeVoice> is to model this by storing a <codeVoice>Channel<\/codeVoice> alongside its associated properties so that they can be passed around together and correct provider can be identified when connection is released.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 30,
        "key.doc.name" : "Connection",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Connection.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Connection<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 298,
        "key.name" : "Connection",
        "key.namelength" : 10,
        "key.nameoffset" : 8867,
        "key.offset" : 8857,
        "key.parsed_declaration" : "extension Connection",
        "key.parsed_scope.end" : 208,
        "key.parsed_scope.start" : 202,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func removeHandler&lt;Handler&gt;(_ type: <Type usr=\"s:15AsyncHTTPClient10ConnectionC13removeHandlery3NIO15EventLoopFutureCyytGxmAE016RemovableChannelE0RzlF0E0L_xmfp\">Handler<\/Type>.Type) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt; where Handler : <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type><\/Declaration>",
            "key.bodylength" : 167,
            "key.bodyoffset" : 8985,
            "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeHandler<\/decl.name>&lt;<decl.generic_type_param usr=\"s:15AsyncHTTPClient10ConnectionC13removeHandlery3NIO15EventLoopFutureCyytGxmAE016RemovableChannelE0RzlF0E0L_xmfp\"><decl.generic_type_param.name>Handler<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:15AsyncHTTPClient10ConnectionC13removeHandlery3NIO15EventLoopFutureCyytGxmAE016RemovableChannelE0RzlF0E0L_xmfp\">Handler<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Handler : <ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 269,
            "key.name" : "removeHandler(_:)",
            "key.namelength" : 69,
            "key.nameoffset" : 8889,
            "key.offset" : 8884,
            "key.parsed_declaration" : "func removeHandler<Handler: RemovableChannelHandler>(_ type: Handler.Type) -> EventLoopFuture<Void>",
            "key.parsed_scope.end" : 207,
            "key.parsed_scope.start" : 203,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Handler : <Type usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 23,
                    "key.offset" : 8912
                  }
                ],
                "key.filepath" : "\/Users\/noahpeeters\/Developer\/swift-type-analyzer\/build\/vapor\/.build\/checkouts\/async-http-client\/Sources\/AsyncHTTPClient\/Utils.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Handler<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:3NIO23RemovableChannelHandlerP\">RemovableChannelHandler<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "RemovableChannelHandler"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 32,
                "key.name" : "Handler",
                "key.namelength" : 7,
                "key.nameoffset" : 8903,
                "key.offset" : 8903,
                "key.parsed_declaration" : "func removeHandler<Handler: RemovableChannelHandler",
                "key.parsed_scope.end" : 203,
                "key.parsed_scope.start" : 203,
                "key.typename" : "Handler.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:15AsyncHTTPClient10ConnectionC13removeHandlery3NIO15EventLoopFutureCyytGxmAE016RemovableChannelE0RzlF0E0L_xmfp"
              }
            ],
            "key.typename" : "<Handler where Handler : RemovableChannelHandler> (Connection) -> (Handler.Type) -> EventLoopFuture<()>",
            "key.typeusr" : "$sy3NIO15EventLoopFutureCyytGxmcAA23RemovableChannelHandlerRzluD",
            "key.usr" : "s:15AsyncHTTPClient10ConnectionC13removeHandlery3NIO15EventLoopFutureCyytGxmAE016RemovableChannelE0RzlF"
          }
        ],
        "key.typename" : "Connection.Type",
        "key.typeusr" : "$s15AsyncHTTPClient10ConnectionCmD",
        "key.usr" : "s:15AsyncHTTPClient10ConnectionC"
      }
    ]
  }
}]
